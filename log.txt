

Executing CursorHold Autocommands for "*"
autocommand lua vim.diagnostic.open_float(nil, { focusable = false })

Executing: lua vim.diagnostic.open_float(nil, { focusable = false })
autocommand lua vim.diagnostic.open_float(nil, { focusable = false })

Executing: lua vim.diagnostic.open_float(nil, { focusable = false })
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/plenary.nvim/lua/plenary/popup/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
Executing: autocmd BufDelete  <buffer=10> ++once ++nested :lua require('plenary.window').try_close(1008, true)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(vim/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/plenary.nvim/lua/plenary/window/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/plenary.nvim/lua/plenary/window/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
Executing: autocmd BufDelete <buffer=10> ++nested ++once :lua require('plenary.window').close_related_win(1008, 1009)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(vim/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
Executing: autocmd WinClosed <buffer=10> ++nested ++once :lua require('plenary.window').try_close(1009, true)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(vim/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/plenary.nvim/lua/plenary/popup/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/lua/telescope/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/lua/telescope/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/lua/telescope/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/lua/telescope/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/plenary.nvim/lua/plenary/popup/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
Executing: autocmd BufDelete  <buffer=12> ++once ++nested :lua require('plenary.window').try_close(1010, true)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(vim/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/plenary.nvim/lua/plenary/window/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/plenary.nvim/lua/plenary/window/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
Executing: autocmd BufDelete <buffer=12> ++nested ++once :lua require('plenary.window').close_related_win(1010, 1011)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(vim/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
Executing: autocmd WinClosed <buffer=12> ++nested ++once :lua require('plenary.window').try_close(1011, true)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(vim/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/plenary.nvim/lua/plenary/popup/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/lua/telescope/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/lua/telescope/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/lua/telescope/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/plenary.nvim/lua/plenary/popup/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
Executing: autocmd BufDelete  <buffer=14> ++once ++nested :lua require('plenary.window').try_close(1012, true)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(vim/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/plenary.nvim/lua/plenary/window/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/plenary.nvim/lua/plenary/window/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
Executing: autocmd BufDelete <buffer=14> ++nested ++once :lua require('plenary.window').close_related_win(1012, 1013)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(vim/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
Executing: autocmd WinClosed <buffer=14> ++nested ++once :lua require('plenary.window').try_close(1013, true)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(vim/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/plenary.nvim/lua/plenary/popup/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
Executing BufLeave Autocommands for "*"
autocommand call s:Remove_Matches()

Executing: call s:Remove_Matches()
calling <SNR>15_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     silent! call matchdelete(3)
line 3:     let w:paren_hl_on = 0
line 4:   endif
<SNR>15_Remove_Matches returning #0

continuing in BufLeave Autocommands for "*"

Executing WinLeave Autocommands for "*"
autocommand call s:Remove_Matches()

Executing: call s:Remove_Matches()
calling <SNR>15_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     silent! call matchdelete(3)
line 3:     let w:paren_hl_on = 0
line 4:   endif
<SNR>15_Remove_Matches returning #0

continuing in WinLeave Autocommands for "*"

Executing WinEnter Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>15_Highlight_Matching_Pair()

line 1:   " Remove any previous match.
line 2:   call s:Remove_Matches()
calling <SNR>15_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     silent! call matchdelete(3)
line 3:     let w:paren_hl_on = 0
line 4:   endif
<SNR>15_Remove_Matches returning #0

continuing in <SNR>15_Highlight_Matching_Pair

line 3: 
line 4:   " Avoid that we remove the popup menu.
line 5:   " Return when there are no colors (looks like the cursor jumps).
line 6:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 7:     return
line 8:   endif
line 9: 
line 10:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 11:   let c_lnum = line('.')
line 12:   let c_col = col('.')
line 13:   let before = 0
line 14: 
line 15:   let text = getline(c_lnum)
line 16:   let matches = matchlist(text, '\(.\)\=\%'.c_col.'c\(.\=\)')
line 17:   if empty(matches)
line 18:     let [c_before, c] = ['', '']
line 19:   else
line 20:     let [c_before, c] = matches[1:2]
line 21:   endif
line 22:   let plist = split(&matchpairs, '.\zs[:,]')
line 23:   let i = index(plist, c)
line 24:   if i < 0
line 25:     " not found, in Insert mode try character before the cursor
line 26:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 27:       let before = strlen(c_before)
line 28:       let c = c_before
line 29:       let i = index(plist, c)
line 30:     endif
line 31:     if i < 0
line 32:       " not found, nothing to do
line 33:       return
<SNR>15_Highlight_Matching_Pair returning #0

continuing in WinEnter Autocommands for "*"

Executing BufEnter Autocommands for "*"
autocommand :call AutoPairsTryInit()

Executing: :call AutoPairsTryInit()
calling AutoPairsTryInit()

line 1:   if exists('b:autopairs_loaded')
line 2:     return
line 3:   end
line 4: 
line 5:   " for auto-pairs starts with 'a', so the priority is higher than supertab and vim-endwise
line 6:   "
line 7:   " vim-endwise doesn't support <Plug>AutoPairsReturn
line 8:   " when use <Plug>AutoPairsReturn will cause <Plug> isn't expanded
line 9:   "
line 10:   " supertab doesn't support <SID>AutoPairsReturn
line 11:   " when use <SID>AutoPairsReturn  will cause Duplicated <CR>
line 12:   "
line 13:   " and when load after vim-endwise will cause unexpected endwise inserted.
line 14:   " so always load AutoPairs at last
line 15: 
line 16:   " Buffer level keys mapping
line 17:   " comptible with other plugin
line 18:   if g:AutoPairsMapCR
line 19:     if v:version == 703 && has('patch32') || v:version > 703
line 20:       " VIM 7.3 supports advancer maparg which could get <expr> info
line 21:       " then auto-pairs could remap <CR> in any case.
line 22:       let info = maparg('<CR>', 'i', 0, 1)
line 23:       if empty(info)
line 24:         let old_cr = '<CR>'
line 25:         let is_expr = 0
line 26:       else
line 27:         let old_cr = info['rhs']
line 28:         let old_cr = s:ExpandMap(old_cr)
line 29:         let old_cr = substitute(old_cr, '<SID>', '<SNR>' . info['sid'] . '_', 'g')
line 30:         let is_expr = info['expr']
line 31:         let wrapper_name = '<SID>AutoPairsOldCRWrapper73'
line 32:       endif
line 33:     else
line 34:       " VIM version less than 7.3
line 35:       " the mapping's <expr> info is lost, so guess it is expr or not, it's
line 36:       " not accurate.
line 37:       let old_cr = maparg('<CR>', 'i')
line 38:       if old_cr == ''
line 39:         let old_cr = '<CR>'
line 40:         let is_expr = 0
line 41:       else
line 42:         let old_cr = s:ExpandMap(old_cr)
line 43:         " old_cr contain (, I guess the old cr is in expr mode
line 44:         let is_expr = old_cr =~ '\V(' && toupper(old_cr) !~ '\V<C-R>'
line 45: 
line 46:         " The old_cr start with " it must be in expr mode
line 47:         let is_expr = is_expr || old_cr =~ '\v^"'
line 48:         let wrapper_name = '<SID>AutoPairsOldCRWrapper'
line 49:       end
line 50:     end
line 51: 
line 52:     if old_cr !~ 'AutoPairsReturn'
line 53:       if is_expr
line 54:         " remap <expr> to `name` to avoid mix expr and non-expr mode
line 55:         execute 'inoremap <buffer> <expr> <script> '. wrapper_name . ' ' . old_cr
line 56:         let old_cr = wrapper_name
line 57:       end
line 58:       " Always silent mapping
line 59:       execute 'inoremap <script> <buffer> <silent> <CR> '.old_cr.'<SID>AutoPairsReturn'
line 59: inoremap <script> <buffer> <silent> <CR> <CR><SID>AutoPairsReturn
line 60:     end
line 61:   endif
line 62:   call AutoPairsInit()
calling AutoPairsInit()

line 1:   let b:autopairs_loaded  = 1
line 2:   if !exists('b:autopairs_enabled')
line 3:     let b:autopairs_enabled = 1
line 4:   end
line 5: 
line 6:   if !exists('b:AutoPairs')
line 7:     let b:AutoPairs = AutoPairsDefaultPairs()
calling AutoPairsDefaultPairs()

line 1:   if exists('b:autopairs_defaultpairs')
line 2:     return b:autopairs_defaultpairs
line 3:   end
line 4:   let r = copy(g:AutoPairs)
line 5:   let allPairs = { 'vim': {'\v^\s*\zs"': ''}, 'rust': {'\w\zs<': '>', '&\zs''': ''}, 'php': {'<?': '?>//k]', '<?php': '?>//k]'} }
line 10:   for [filetype, pairs] in items(allPairs)
line 11:     if &filetype == filetype
line 12:       for [open, close] in items(pairs)
line 13:         let r[open] = close
line 14:       endfor
line 15:     end
line 16:   endfor
line 10:   for [filetype, pairs] in items(allPairs)
line 11:     if &filetype == filetype
line 12:       for [open, close] in items(pairs)
line 13:         let r[open] = close
line 14:       endfor
line 15:     end
line 16:   endfor
line 10:   for [filetype, pairs] in items(allPairs)
line 11:     if &filetype == filetype
line 12:       for [open, close] in items(pairs)
line 13:         let r[open] = close
line 14:       endfor
line 15:     end
line 16:   endfor
line 10:   for [filetype, pairs] in items(allPairs)
line 11:     if &filetype == filetype
line 12:       for [open, close] in items(pairs)
line 13:         let r[open] = close
line 14:       endfor
line 15:     end
line 16:   endfor
line 17:   let b:autopairs_defaultpairs = r
line 18:   return r
AutoPairsDefaultPairs returning {'```': '```', '`': '`', '"': '"', '['...'''': '''''''', '{': '}', '"""': '"""'}

continuing in AutoPairsInit

line 8:   end
line 9: 
line 10:   if !exists('b:AutoPairsMoveCharacter')
line 11:     let b:AutoPairsMoveCharacter = g:AutoPairsMoveCharacter
line 12:   end
line 13: 
line 14:   let b:autopairs_return_pos = 0
line 15:   let b:autopairs_saved_pair = [0, 0]
line 16:   let b:AutoPairsList = []
line 17: 
line 18:   " buffer level map pairs keys
line 19:   " n - do not map the first charactor of closed pair to close key
line 20:   " m - close key jumps through multi line
line 21:   " s - close key jumps only in the same line
line 22:   for [open, close] in items(b:AutoPairs)
line 23:     let o = open[-1:-1]
line 24:     let c = close[0]
line 25:     let opt = {'mapclose': 1, 'multiline':1}
line 26:     let opt['key'] = c
line 27:     if o == c
line 28:       let opt['multiline'] = 0
line 29:     end
line 30:     let m = matchlist(close, '\v(.*)//(.*)$')
line 31:     if len(m) > 0 
line 32:       if m[2] =~ 'n'
line 33:         let opt['mapclose'] = 0
line 34:       end
line 35:       if m[2] =~ 'm'
line 36:         let opt['multiline'] = 1
line 37:       end
line 38:       if m[2] =~ 's'
line 39:         let opt['multiline'] = 0
line 40:       end
line 41:       let ks = matchlist(m[2], '\vk(.)')
line 42:       if len(ks) > 0
line 43:         let opt['key'] = ks[1]
line 44:         let c = opt['key']
line 45:       end
line 46:       let close = m[1]
line 47:     end
line 48:     call AutoPairsMap(o)
calling AutoPairsMap('`')

line 1:   " | is special key which separate map command from text
line 2:   let key = a:key
line 3:   if key == '|'
line 4:     let key = '<BAR>'
line 5:   end
line 6:   let escaped_key = substitute(key, "'", "''", 'g')
line 7:   " use expr will cause search() doesn't work
line 8:   execute 'inoremap <buffer> <silent> '.key." <C-R>=AutoPairsInsert('".escaped_key."')<CR>"
line 8: inoremap <buffer> <silent> ` <C-R>=AutoPairsInsert('`')<CR>
AutoPairsMap returning #0

continuing in AutoPairsInit

line 49:     if o != c && c != '' && opt['mapclose']
line 50:       call AutoPairsMap(c)
line 51:     end
line 52:     let b:AutoPairsList += [[open, close, opt]]
line 53:   endfor
line 22:   for [open, close] in items(b:AutoPairs)
line 23:     let o = open[-1:-1]
line 24:     let c = close[0]
line 25:     let opt = {'mapclose': 1, 'multiline':1}
line 26:     let opt['key'] = c
line 27:     if o == c
line 28:       let opt['multiline'] = 0
line 29:     end
line 30:     let m = matchlist(close, '\v(.*)//(.*)$')
line 31:     if len(m) > 0 
line 32:       if m[2] =~ 'n'
line 33:         let opt['mapclose'] = 0
line 34:       end
line 35:       if m[2] =~ 'm'
line 36:         let opt['multiline'] = 1
line 37:       end
line 38:       if m[2] =~ 's'
line 39:         let opt['multiline'] = 0
line 40:       end
line 41:       let ks = matchlist(m[2], '\vk(.)')
line 42:       if len(ks) > 0
line 43:         let opt['key'] = ks[1]
line 44:         let c = opt['key']
line 45:       end
line 46:       let close = m[1]
line 47:     end
line 48:     call AutoPairsMap(o)
calling AutoPairsMap('`')

line 1:   " | is special key which separate map command from text
line 2:   let key = a:key
line 3:   if key == '|'
line 4:     let key = '<BAR>'
line 5:   end
line 6:   let escaped_key = substitute(key, "'", "''", 'g')
line 7:   " use expr will cause search() doesn't work
line 8:   execute 'inoremap <buffer> <silent> '.key." <C-R>=AutoPairsInsert('".escaped_key."')<CR>"
line 8: inoremap <buffer> <silent> ` <C-R>=AutoPairsInsert('`')<CR>
AutoPairsMap returning #0

continuing in AutoPairsInit

line 49:     if o != c && c != '' && opt['mapclose']
line 50:       call AutoPairsMap(c)
line 51:     end
line 52:     let b:AutoPairsList += [[open, close, opt]]
line 53:   endfor
line 22:   for [open, close] in items(b:AutoPairs)
line 23:     let o = open[-1:-1]
line 24:     let c = close[0]
line 25:     let opt = {'mapclose': 1, 'multiline':1}
line 26:     let opt['key'] = c
line 27:     if o == c
line 28:       let opt['multiline'] = 0
line 29:     end
line 30:     let m = matchlist(close, '\v(.*)//(.*)$')
line 31:     if len(m) > 0 
line 32:       if m[2] =~ 'n'
line 33:         let opt['mapclose'] = 0
line 34:       end
line 35:       if m[2] =~ 'm'
line 36:         let opt['multiline'] = 1
line 37:       end
line 38:       if m[2] =~ 's'
line 39:         let opt['multiline'] = 0
line 40:       end
line 41:       let ks = matchlist(m[2], '\vk(.)')
line 42:       if len(ks) > 0
line 43:         let opt['key'] = ks[1]
line 44:         let c = opt['key']
line 45:       end
line 46:       let close = m[1]
line 47:     end
line 48:     call AutoPairsMap(o)
calling AutoPairsMap('"')

line 1:   " | is special key which separate map command from text
line 2:   let key = a:key
line 3:   if key == '|'
line 4:     let key = '<BAR>'
line 5:   end
line 6:   let escaped_key = substitute(key, "'", "''", 'g')
line 7:   " use expr will cause search() doesn't work
line 8:   execute 'inoremap <buffer> <silent> '.key." <C-R>=AutoPairsInsert('".escaped_key."')<CR>"
line 8: inoremap <buffer> <silent> " <C-R>=AutoPairsInsert('"')<CR>
AutoPairsMap returning #0

continuing in AutoPairsInit

line 49:     if o != c && c != '' && opt['mapclose']
line 50:       call AutoPairsMap(c)
line 51:     end
line 52:     let b:AutoPairsList += [[open, close, opt]]
line 53:   endfor
line 22:   for [open, close] in items(b:AutoPairs)
line 23:     let o = open[-1:-1]
line 24:     let c = close[0]
line 25:     let opt = {'mapclose': 1, 'multiline':1}
line 26:     let opt['key'] = c
line 27:     if o == c
line 28:       let opt['multiline'] = 0
line 29:     end
line 30:     let m = matchlist(close, '\v(.*)//(.*)$')
line 31:     if len(m) > 0 
line 32:       if m[2] =~ 'n'
line 33:         let opt['mapclose'] = 0
line 34:       end
line 35:       if m[2] =~ 'm'
line 36:         let opt['multiline'] = 1
line 37:       end
line 38:       if m[2] =~ 's'
line 39:         let opt['multiline'] = 0
line 40:       end
line 41:       let ks = matchlist(m[2], '\vk(.)')
line 42:       if len(ks) > 0
line 43:         let opt['key'] = ks[1]
line 44:         let c = opt['key']
line 45:       end
line 46:       let close = m[1]
line 47:     end
line 48:     call AutoPairsMap(o)
calling AutoPairsMap('[')

line 1:   " | is special key which separate map command from text
line 2:   let key = a:key
line 3:   if key == '|'
line 4:     let key = '<BAR>'
line 5:   end
line 6:   let escaped_key = substitute(key, "'", "''", 'g')
line 7:   " use expr will cause search() doesn't work
line 8:   execute 'inoremap <buffer> <silent> '.key." <C-R>=AutoPairsInsert('".escaped_key."')<CR>"
line 8: inoremap <buffer> <silent> [ <C-R>=AutoPairsInsert('[')<CR>
AutoPairsMap returning #0

continuing in AutoPairsInit

line 49:     if o != c && c != '' && opt['mapclose']
line 50:       call AutoPairsMap(c)
calling AutoPairsMap(']')

line 1:   " | is special key which separate map command from text
line 2:   let key = a:key
line 3:   if key == '|'
line 4:     let key = '<BAR>'
line 5:   end
line 6:   let escaped_key = substitute(key, "'", "''", 'g')
line 7:   " use expr will cause search() doesn't work
line 8:   execute 'inoremap <buffer> <silent> '.key." <C-R>=AutoPairsInsert('".escaped_key."')<CR>"
line 8: inoremap <buffer> <silent> ] <C-R>=AutoPairsInsert(']')<CR>
AutoPairsMap returning #0

continuing in AutoPairsInit

line 51:     end
line 52:     let b:AutoPairsList += [[open, close, opt]]
line 53:   endfor
line 22:   for [open, close] in items(b:AutoPairs)
line 23:     let o = open[-1:-1]
line 24:     let c = close[0]
line 25:     let opt = {'mapclose': 1, 'multiline':1}
line 26:     let opt['key'] = c
line 27:     if o == c
line 28:       let opt['multiline'] = 0
line 29:     end
line 30:     let m = matchlist(close, '\v(.*)//(.*)$')
line 31:     if len(m) > 0 
line 32:       if m[2] =~ 'n'
line 33:         let opt['mapclose'] = 0
line 34:       end
line 35:       if m[2] =~ 'm'
line 36:         let opt['multiline'] = 1
line 37:       end
line 38:       if m[2] =~ 's'
line 39:         let opt['multiline'] = 0
line 40:       end
line 41:       let ks = matchlist(m[2], '\vk(.)')
line 42:       if len(ks) > 0
line 43:         let opt['key'] = ks[1]
line 44:         let c = opt['key']
line 45:       end
line 46:       let close = m[1]
line 47:     end
line 48:     call AutoPairsMap(o)
calling AutoPairsMap('''')

line 1:   " | is special key which separate map command from text
line 2:   let key = a:key
line 3:   if key == '|'
line 4:     let key = '<BAR>'
line 5:   end
line 6:   let escaped_key = substitute(key, "'", "''", 'g')
line 7:   " use expr will cause search() doesn't work
line 8:   execute 'inoremap <buffer> <silent> '.key." <C-R>=AutoPairsInsert('".escaped_key."')<CR>"
line 8: inoremap <buffer> <silent> ' <C-R>=AutoPairsInsert('''')<CR>
AutoPairsMap returning #0

continuing in AutoPairsInit

line 49:     if o != c && c != '' && opt['mapclose']
line 50:       call AutoPairsMap(c)
line 51:     end
line 52:     let b:AutoPairsList += [[open, close, opt]]
line 53:   endfor
line 22:   for [open, close] in items(b:AutoPairs)
line 23:     let o = open[-1:-1]
line 24:     let c = close[0]
line 25:     let opt = {'mapclose': 1, 'multiline':1}
line 26:     let opt['key'] = c
line 27:     if o == c
line 28:       let opt['multiline'] = 0
line 29:     end
line 30:     let m = matchlist(close, '\v(.*)//(.*)$')
line 31:     if len(m) > 0 
line 32:       if m[2] =~ 'n'
line 33:         let opt['mapclose'] = 0
line 34:       end
line 35:       if m[2] =~ 'm'
line 36:         let opt['multiline'] = 1
line 37:       end
line 38:       if m[2] =~ 's'
line 39:         let opt['multiline'] = 0
line 40:       end
line 41:       let ks = matchlist(m[2], '\vk(.)')
line 42:       if len(ks) > 0
line 43:         let opt['key'] = ks[1]
line 44:         let c = opt['key']
line 45:       end
line 46:       let close = m[1]
line 47:     end
line 48:     call AutoPairsMap(o)
calling AutoPairsMap('(')

line 1:   " | is special key which separate map command from text
line 2:   let key = a:key
line 3:   if key == '|'
line 4:     let key = '<BAR>'
line 5:   end
line 6:   let escaped_key = substitute(key, "'", "''", 'g')
line 7:   " use expr will cause search() doesn't work
line 8:   execute 'inoremap <buffer> <silent> '.key." <C-R>=AutoPairsInsert('".escaped_key."')<CR>"
line 8: inoremap <buffer> <silent> ( <C-R>=AutoPairsInsert('(')<CR>
AutoPairsMap returning #0

continuing in AutoPairsInit

line 49:     if o != c && c != '' && opt['mapclose']
line 50:       call AutoPairsMap(c)
calling AutoPairsMap(')')

line 1:   " | is special key which separate map command from text
line 2:   let key = a:key
line 3:   if key == '|'
line 4:     let key = '<BAR>'
line 5:   end
line 6:   let escaped_key = substitute(key, "'", "''", 'g')
line 7:   " use expr will cause search() doesn't work
line 8:   execute 'inoremap <buffer> <silent> '.key." <C-R>=AutoPairsInsert('".escaped_key."')<CR>"
line 8: inoremap <buffer> <silent> ) <C-R>=AutoPairsInsert(')')<CR>
AutoPairsMap returning #0

continuing in AutoPairsInit

line 51:     end
line 52:     let b:AutoPairsList += [[open, close, opt]]
line 53:   endfor
line 22:   for [open, close] in items(b:AutoPairs)
line 23:     let o = open[-1:-1]
line 24:     let c = close[0]
line 25:     let opt = {'mapclose': 1, 'multiline':1}
line 26:     let opt['key'] = c
line 27:     if o == c
line 28:       let opt['multiline'] = 0
line 29:     end
line 30:     let m = matchlist(close, '\v(.*)//(.*)$')
line 31:     if len(m) > 0 
line 32:       if m[2] =~ 'n'
line 33:         let opt['mapclose'] = 0
line 34:       end
line 35:       if m[2] =~ 'm'
line 36:         let opt['multiline'] = 1
line 37:       end
line 38:       if m[2] =~ 's'
line 39:         let opt['multiline'] = 0
line 40:       end
line 41:       let ks = matchlist(m[2], '\vk(.)')
line 42:       if len(ks) > 0
line 43:         let opt['key'] = ks[1]
line 44:         let c = opt['key']
line 45:       end
line 46:       let close = m[1]
line 47:     end
line 48:     call AutoPairsMap(o)
calling AutoPairsMap('''')

line 1:   " | is special key which separate map command from text
line 2:   let key = a:key
line 3:   if key == '|'
line 4:     let key = '<BAR>'
line 5:   end
line 6:   let escaped_key = substitute(key, "'", "''", 'g')
line 7:   " use expr will cause search() doesn't work
line 8:   execute 'inoremap <buffer> <silent> '.key." <C-R>=AutoPairsInsert('".escaped_key."')<CR>"
line 8: inoremap <buffer> <silent> ' <C-R>=AutoPairsInsert('''')<CR>
AutoPairsMap returning #0

continuing in AutoPairsInit

line 49:     if o != c && c != '' && opt['mapclose']
line 50:       call AutoPairsMap(c)
line 51:     end
line 52:     let b:AutoPairsList += [[open, close, opt]]
line 53:   endfor
line 22:   for [open, close] in items(b:AutoPairs)
line 23:     let o = open[-1:-1]
line 24:     let c = close[0]
line 25:     let opt = {'mapclose': 1, 'multiline':1}
line 26:     let opt['key'] = c
line 27:     if o == c
line 28:       let opt['multiline'] = 0
line 29:     end
line 30:     let m = matchlist(close, '\v(.*)//(.*)$')
line 31:     if len(m) > 0 
line 32:       if m[2] =~ 'n'
line 33:         let opt['mapclose'] = 0
line 34:       end
line 35:       if m[2] =~ 'm'
line 36:         let opt['multiline'] = 1
line 37:       end
line 38:       if m[2] =~ 's'
line 39:         let opt['multiline'] = 0
line 40:       end
line 41:       let ks = matchlist(m[2], '\vk(.)')
line 42:       if len(ks) > 0
line 43:         let opt['key'] = ks[1]
line 44:         let c = opt['key']
line 45:       end
line 46:       let close = m[1]
line 47:     end
line 48:     call AutoPairsMap(o)
calling AutoPairsMap('{')

line 1:   " | is special key which separate map command from text
line 2:   let key = a:key
line 3:   if key == '|'
line 4:     let key = '<BAR>'
line 5:   end
line 6:   let escaped_key = substitute(key, "'", "''", 'g')
line 7:   " use expr will cause search() doesn't work
line 8:   execute 'inoremap <buffer> <silent> '.key." <C-R>=AutoPairsInsert('".escaped_key."')<CR>"
line 8: inoremap <buffer> <silent> { <C-R>=AutoPairsInsert('{')<CR>
AutoPairsMap returning #0

continuing in AutoPairsInit

line 49:     if o != c && c != '' && opt['mapclose']
line 50:       call AutoPairsMap(c)
calling AutoPairsMap('}')

line 1:   " | is special key which separate map command from text
line 2:   let key = a:key
line 3:   if key == '|'
line 4:     let key = '<BAR>'
line 5:   end
line 6:   let escaped_key = substitute(key, "'", "''", 'g')
line 7:   " use expr will cause search() doesn't work
line 8:   execute 'inoremap <buffer> <silent> '.key." <C-R>=AutoPairsInsert('".escaped_key."')<CR>"
line 8: inoremap <buffer> <silent> } <C-R>=AutoPairsInsert('}')<CR>
AutoPairsMap returning #0

continuing in AutoPairsInit

line 51:     end
line 52:     let b:AutoPairsList += [[open, close, opt]]
line 53:   endfor
line 22:   for [open, close] in items(b:AutoPairs)
line 23:     let o = open[-1:-1]
line 24:     let c = close[0]
line 25:     let opt = {'mapclose': 1, 'multiline':1}
line 26:     let opt['key'] = c
line 27:     if o == c
line 28:       let opt['multiline'] = 0
line 29:     end
line 30:     let m = matchlist(close, '\v(.*)//(.*)$')
line 31:     if len(m) > 0 
line 32:       if m[2] =~ 'n'
line 33:         let opt['mapclose'] = 0
line 34:       end
line 35:       if m[2] =~ 'm'
line 36:         let opt['multiline'] = 1
line 37:       end
line 38:       if m[2] =~ 's'
line 39:         let opt['multiline'] = 0
line 40:       end
line 41:       let ks = matchlist(m[2], '\vk(.)')
line 42:       if len(ks) > 0
line 43:         let opt['key'] = ks[1]
line 44:         let c = opt['key']
line 45:       end
line 46:       let close = m[1]
line 47:     end
line 48:     call AutoPairsMap(o)
calling AutoPairsMap('"')

line 1:   " | is special key which separate map command from text
line 2:   let key = a:key
line 3:   if key == '|'
line 4:     let key = '<BAR>'
line 5:   end
line 6:   let escaped_key = substitute(key, "'", "''", 'g')
line 7:   " use expr will cause search() doesn't work
line 8:   execute 'inoremap <buffer> <silent> '.key." <C-R>=AutoPairsInsert('".escaped_key."')<CR>"
line 8: inoremap <buffer> <silent> " <C-R>=AutoPairsInsert('"')<CR>
AutoPairsMap returning #0

continuing in AutoPairsInit

line 49:     if o != c && c != '' && opt['mapclose']
line 50:       call AutoPairsMap(c)
line 51:     end
line 52:     let b:AutoPairsList += [[open, close, opt]]
line 53:   endfor
line 22:   for [open, close] in items(b:AutoPairs)
line 23:     let o = open[-1:-1]
line 24:     let c = close[0]
line 25:     let opt = {'mapclose': 1, 'multiline':1}
line 26:     let opt['key'] = c
line 27:     if o == c
line 28:       let opt['multiline'] = 0
line 29:     end
line 30:     let m = matchlist(close, '\v(.*)//(.*)$')
line 31:     if len(m) > 0 
line 32:       if m[2] =~ 'n'
line 33:         let opt['mapclose'] = 0
line 34:       end
line 35:       if m[2] =~ 'm'
line 36:         let opt['multiline'] = 1
line 37:       end
line 38:       if m[2] =~ 's'
line 39:         let opt['multiline'] = 0
line 40:       end
line 41:       let ks = matchlist(m[2], '\vk(.)')
line 42:       if len(ks) > 0
line 43:         let opt['key'] = ks[1]
line 44:         let c = opt['key']
line 45:       end
line 46:       let close = m[1]
line 47:     end
line 48:     call AutoPairsMap(o)
line 49:     if o != c && c != '' && opt['mapclose']
line 50:       call AutoPairsMap(c)
line 51:     end
line 52:     let b:AutoPairsList += [[open, close, opt]]
line 53:   endfor
line 54: 
line 55:   " sort pairs by length, longer pair should have higher priority
line 56:   let b:AutoPairsList = sort(b:AutoPairsList, "s:sortByLength")
calling <SNR>29_sortByLength(['```', '```', {'key': '`', 'mapclose': 1, 'multiline': 0}], ['`', '`', {'key': '`', 'mapclose': 1, 'multiline': 0}])

line 1:   return len(a:i2[0])-len(a:i1[0])
<SNR>29_sortByLength returning #-2

continuing in AutoPairsInit

calling <SNR>29_sortByLength(['"', '"', {'key': '"', 'mapclose': 1, 'multiline': 0}], ['[', ']', {'key': ']', 'mapclose': 1, 'multiline': 1}])

line 1:   return len(a:i2[0])-len(a:i1[0])
<SNR>29_sortByLength returning #0

continuing in AutoPairsInit

calling <SNR>29_sortByLength(['```', '```', {'key': '`', 'mapclose': 1, 'multiline': 0}], ['"', '"', {'key': '"', 'mapclose': 1, 'multiline': 0}])

line 1:   return len(a:i2[0])-len(a:i1[0])
<SNR>29_sortByLength returning #-2

continuing in AutoPairsInit

calling <SNR>29_sortByLength(['`', '`', {'key': '`', 'mapclose': 1, 'multiline': 0}], ['"', '"', {'key': '"', 'mapclose': 1, 'multiline': 0}])

line 1:   return len(a:i2[0])-len(a:i1[0])
<SNR>29_sortByLength returning #0

continuing in AutoPairsInit

calling <SNR>29_sortByLength(['''', '''', {'key': '''', 'mapclose': 1, 'multiline': 0}], ['(', ')', {'key': ')', 'mapclose': 1, 'multiline': 1}])

line 1:   return len(a:i2[0])-len(a:i1[0])
<SNR>29_sortByLength returning #0

continuing in AutoPairsInit

calling <SNR>29_sortByLength(['{', '}', {'key': '}', 'mapclose': 1, 'multiline': 1}], ['"""', '"""', {'key': '"', 'mapclose': 1, 'multiline': 0}])

line 1:   return len(a:i2[0])-len(a:i1[0])
<SNR>29_sortByLength returning #2

continuing in AutoPairsInit

calling <SNR>29_sortByLength(['''''''', '''''''', {'key': '''', 'mapclose': 1, 'multiline': 0}], ['"""', '"""', {'key': '"', 'mapclose': 1, 'multiline': 0}])

line 1:   return len(a:i2[0])-len(a:i1[0])
<SNR>29_sortByLength returning #0

continuing in AutoPairsInit

calling <SNR>29_sortByLength(['''', '''', {'key': '''', 'mapclose': 1, 'multiline': 0}], ['''''''', '''''''', {'key': '''', 'mapclose': 1, 'multiline': 0}])

line 1:   return len(a:i2[0])-len(a:i1[0])
<SNR>29_sortByLength returning #2

continuing in AutoPairsInit

calling <SNR>29_sortByLength(['''', '''', {'key': '''', 'mapclose': 1, 'multiline': 0}], ['"""', '"""', {'key': '"', 'mapclose': 1, 'multiline': 0}])

line 1:   return len(a:i2[0])-len(a:i1[0])
<SNR>29_sortByLength returning #2

continuing in AutoPairsInit

calling <SNR>29_sortByLength(['''', '''', {'key': '''', 'mapclose': 1, 'multiline': 0}], ['{', '}', {'key': '}', 'mapclose': 1, 'multiline': 1}])

line 1:   return len(a:i2[0])-len(a:i1[0])
<SNR>29_sortByLength returning #0

continuing in AutoPairsInit

calling <SNR>29_sortByLength(['(', ')', {'key': ')', 'mapclose': 1, 'multiline': 1}], ['{', '}', {'key': '}', 'mapclose': 1, 'multiline': 1}])

line 1:   return len(a:i2[0])-len(a:i1[0])
<SNR>29_sortByLength returning #0

continuing in AutoPairsInit

calling <SNR>29_sortByLength(['```', '```', {'key': '`', 'mapclose': 1, 'multiline': 0}], ['''''''', '''''''', {'key': '''', 'mapclose': 1, 'multiline': 0}])

line 1:   return len(a:i2[0])-len(a:i1[0])
<SNR>29_sortByLength returning #0

continuing in AutoPairsInit

calling <SNR>29_sortByLength(['`', '`', {'key': '`', 'mapclose': 1, 'multiline': 0}], ['''''''', '''''''', {'key': '''', 'mapclose': 1, 'multiline': 0}])

line 1:   return len(a:i2[0])-len(a:i1[0])
<SNR>29_sortByLength returning #2

continuing in AutoPairsInit

calling <SNR>29_sortByLength(['`', '`', {'key': '`', 'mapclose': 1, 'multiline': 0}], ['"""', '"""', {'key': '"', 'mapclose': 1, 'multiline': 0}])

line 1:   return len(a:i2[0])-len(a:i1[0])
<SNR>29_sortByLength returning #2

continuing in AutoPairsInit

calling <SNR>29_sortByLength(['`', '`', {'key': '`', 'mapclose': 1, 'multiline': 0}], ['''', '''', {'key': '''', 'mapclose': 1, 'multiline': 0}])

line 1:   return len(a:i2[0])-len(a:i1[0])
<SNR>29_sortByLength returning #0

continuing in AutoPairsInit

calling <SNR>29_sortByLength(['"', '"', {'key': '"', 'mapclose': 1, 'multiline': 0}], ['''', '''', {'key': '''', 'mapclose': 1, 'multiline': 0}])

line 1:   return len(a:i2[0])-len(a:i1[0])
<SNR>29_sortByLength returning #0

continuing in AutoPairsInit

calling <SNR>29_sortByLength(['[', ']', {'key': ']', 'mapclose': 1, 'multiline': 1}], ['''', '''', {'key': '''', 'mapclose': 1, 'multiline': 0}])

line 1:   return len(a:i2[0])-len(a:i1[0])
<SNR>29_sortByLength returning #0

continuing in AutoPairsInit

line 57: 
line 58:   for item in b:AutoPairsList
line 59:     let [open, close, opt] = item
line 60:     if open == "'" && open == close
line 61:       let item[0] = '\v(^|\W)\zs'''
line 62:     end
line 63:   endfor
line 58:   for item in b:AutoPairsList
line 59:     let [open, close, opt] = item
line 60:     if open == "'" && open == close
line 61:       let item[0] = '\v(^|\W)\zs'''
line 62:     end
line 63:   endfor
line 58:   for item in b:AutoPairsList
line 59:     let [open, close, opt] = item
line 60:     if open == "'" && open == close
line 61:       let item[0] = '\v(^|\W)\zs'''
line 62:     end
line 63:   endfor
line 58:   for item in b:AutoPairsList
line 59:     let [open, close, opt] = item
line 60:     if open == "'" && open == close
line 61:       let item[0] = '\v(^|\W)\zs'''
line 62:     end
line 63:   endfor
line 58:   for item in b:AutoPairsList
line 59:     let [open, close, opt] = item
line 60:     if open == "'" && open == close
line 61:       let item[0] = '\v(^|\W)\zs'''
line 62:     end
line 63:   endfor
line 58:   for item in b:AutoPairsList
line 59:     let [open, close, opt] = item
line 60:     if open == "'" && open == close
line 61:       let item[0] = '\v(^|\W)\zs'''
line 62:     end
line 63:   endfor
line 58:   for item in b:AutoPairsList
line 59:     let [open, close, opt] = item
line 60:     if open == "'" && open == close
line 61:       let item[0] = '\v(^|\W)\zs'''
line 62:     end
line 63:   endfor
line 58:   for item in b:AutoPairsList
line 59:     let [open, close, opt] = item
line 60:     if open == "'" && open == close
line 61:       let item[0] = '\v(^|\W)\zs'''
line 62:     end
line 63:   endfor
line 58:   for item in b:AutoPairsList
line 59:     let [open, close, opt] = item
line 60:     if open == "'" && open == close
line 61:       let item[0] = '\v(^|\W)\zs'''
line 62:     end
line 63:   endfor
line 58:   for item in b:AutoPairsList
line 59:     let [open, close, opt] = item
line 60:     if open == "'" && open == close
line 61:       let item[0] = '\v(^|\W)\zs'''
line 62:     end
line 63:   endfor
line 64: 
line 65: 
line 66:   for key in split(b:AutoPairsMoveCharacter, '\s*')
line 67:     let escaped_key = substitute(key, "'", "''", 'g')
line 68:     execute 'inoremap <silent> <buffer> <M-'.key."> <C-R>=AutoPairsMoveCharacter('".escaped_key."')<CR>"
line 68: inoremap <silent> <buffer> <M-(> <C-R>=AutoPairsMoveCharacter('(')<CR>
line 69:   endfor
line 66:   for key in split(b:AutoPairsMoveCharacter, '\s*')
line 67:     let escaped_key = substitute(key, "'", "''", 'g')
line 68:     execute 'inoremap <silent> <buffer> <M-'.key."> <C-R>=AutoPairsMoveCharacter('".escaped_key."')<CR>"
line 68: inoremap <silent> <buffer> <M-)> <C-R>=AutoPairsMoveCharacter(')')<CR>
line 69:   endfor
line 66:   for key in split(b:AutoPairsMoveCharacter, '\s*')
line 67:     let escaped_key = substitute(key, "'", "''", 'g')
line 68:     execute 'inoremap <silent> <buffer> <M-'.key."> <C-R>=AutoPairsMoveCharacter('".escaped_key."')<CR>"
line 68: inoremap <silent> <buffer> <M-[> <C-R>=AutoPairsMoveCharacter('[')<CR>
line 69:   endfor
line 66:   for key in split(b:AutoPairsMoveCharacter, '\s*')
line 67:     let escaped_key = substitute(key, "'", "''", 'g')
line 68:     execute 'inoremap <silent> <buffer> <M-'.key."> <C-R>=AutoPairsMoveCharacter('".escaped_key."')<CR>"
line 68: inoremap <silent> <buffer> <M-]> <C-R>=AutoPairsMoveCharacter(']')<CR>
line 69:   endfor
line 66:   for key in split(b:AutoPairsMoveCharacter, '\s*')
line 67:     let escaped_key = substitute(key, "'", "''", 'g')
line 68:     execute 'inoremap <silent> <buffer> <M-'.key."> <C-R>=AutoPairsMoveCharacter('".escaped_key."')<CR>"
line 68: inoremap <silent> <buffer> <M-{> <C-R>=AutoPairsMoveCharacter('{')<CR>
line 69:   endfor
line 66:   for key in split(b:AutoPairsMoveCharacter, '\s*')
line 67:     let escaped_key = substitute(key, "'", "''", 'g')
line 68:     execute 'inoremap <silent> <buffer> <M-'.key."> <C-R>=AutoPairsMoveCharacter('".escaped_key."')<CR>"
line 68: inoremap <silent> <buffer> <M-}> <C-R>=AutoPairsMoveCharacter('}')<CR>
line 69:   endfor
line 66:   for key in split(b:AutoPairsMoveCharacter, '\s*')
line 67:     let escaped_key = substitute(key, "'", "''", 'g')
line 68:     execute 'inoremap <silent> <buffer> <M-'.key."> <C-R>=AutoPairsMoveCharacter('".escaped_key."')<CR>"
line 68: inoremap <silent> <buffer> <M-"> <C-R>=AutoPairsMoveCharacter('"')<CR>
line 69:   endfor
line 66:   for key in split(b:AutoPairsMoveCharacter, '\s*')
line 67:     let escaped_key = substitute(key, "'", "''", 'g')
line 68:     execute 'inoremap <silent> <buffer> <M-'.key."> <C-R>=AutoPairsMoveCharacter('".escaped_key."')<CR>"
line 68: inoremap <silent> <buffer> <M-'> <C-R>=AutoPairsMoveCharacter('''')<CR>
line 69:   endfor
line 66:   for key in split(b:AutoPairsMoveCharacter, '\s*')
line 67:     let escaped_key = substitute(key, "'", "''", 'g')
line 68:     execute 'inoremap <silent> <buffer> <M-'.key."> <C-R>=AutoPairsMoveCharacter('".escaped_key."')<CR>"
line 69:   endfor
line 70: 
line 71:   " Still use <buffer> level mapping for <BS> <SPACE>
line 72:   if g:AutoPairsMapBS
line 73:     " Use <C-R> instead of <expr> for issue #14 sometimes press BS output strange words
line 74:     execute 'inoremap <buffer> <silent> <BS> <C-R>=AutoPairsDelete()<CR>'
line 74: inoremap <buffer> <silent> <BS> <C-R>=AutoPairsDelete()<CR>
line 75:   end
line 76: 
line 77:   if g:AutoPairsMapCh
line 78:     execute 'inoremap <buffer> <silent> <C-h> <C-R>=AutoPairsDelete()<CR>'
line 78: inoremap <buffer> <silent> <C-h> <C-R>=AutoPairsDelete()<CR>
line 79:   endif
line 80: 
line 81:   if g:AutoPairsMapSpace
line 82:     " Try to respect abbreviations on a <SPACE>
line 83:     let do_abbrev = ""
line 84:     if v:version == 703 && has("patch489") || v:version > 703
line 85:       let do_abbrev = "<C-]>"
line 86:     endif
line 87:     execute 'inoremap <buffer> <silent> <SPACE> '.do_abbrev.'<C-R>=AutoPairsSpace()<CR>'
line 87: inoremap <buffer> <silent> <SPACE> <C-]><C-R>=AutoPairsSpace()<CR>
line 88:   end
line 89: 
line 90:   if g:AutoPairsShortcutFastWrap != ''
line 91:     execute 'inoremap <buffer> <silent> '.g:AutoPairsShortcutFastWrap.' <C-R>=AutoPairsFastWrap()<CR>'
line 91: inoremap <buffer> <silent> <M-e> <C-R>=AutoPairsFastWrap()<CR>
line 92:   end
line 93: 
line 94:   if g:AutoPairsShortcutBackInsert != ''
line 95:     execute 'inoremap <buffer> <silent> '.g:AutoPairsShortcutBackInsert.' <C-R>=AutoPairsBackInsert()<CR>'
line 95: inoremap <buffer> <silent> <M-b> <C-R>=AutoPairsBackInsert()<CR>
line 96:   end
line 97: 
line 98:   if g:AutoPairsShortcutToggle != ''
line 99:     " use <expr> to ensure showing the status when toggle
line 100:     execute 'inoremap <buffer> <silent> <expr> '.g:AutoPairsShortcutToggle.' AutoPairsToggle()'
line 100: inoremap <buffer> <silent> <expr> <M-p> AutoPairsToggle()
line 101:     execute 'noremap <buffer> <silent> '.g:AutoPairsShortcutToggle.' :call AutoPairsToggle()<CR>'
line 101: noremap <buffer> <silent> <M-p> :call AutoPairsToggle()<CR>
line 102:   end
line 103: 
line 104:   if g:AutoPairsShortcutJump != ''
line 105:     execute 'inoremap <buffer> <silent> ' . g:AutoPairsShortcutJump. ' <ESC>:call AutoPairsJump()<CR>a'
line 105: inoremap <buffer> <silent> <M-n> <ESC>:call AutoPairsJump()<CR>a
line 106:     execute 'noremap <buffer> <silent> ' . g:AutoPairsShortcutJump. ' :call AutoPairsJump()<CR>'
line 106: noremap <buffer> <silent> <M-n> :call AutoPairsJump()<CR>
line 107:   end
line 108: 
line 109:   if &keymap != ''
line 110:     let l:imsearch = &imsearch
line 111:     let l:iminsert = &iminsert
line 112:     let l:imdisable = &imdisable
line 113:     execute 'setlocal keymap=' . &keymap
line 114:     execute 'setlocal imsearch=' . l:imsearch
line 115:     execute 'setlocal iminsert=' . l:iminsert
line 116:     if l:imdisable
line 117:       execute 'setlocal imdisable'
line 118:     else
line 119:       execute 'setlocal noimdisable'
line 120:     end
line 121:   end
line 122: 
AutoPairsInit returning #0

continuing in AutoPairsTryInit

AutoPairsTryInit returning #0

continuing in BufEnter Autocommands for "*"

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>15_Highlight_Matching_Pair()

line 1:   " Remove any previous match.
line 2:   call s:Remove_Matches()
calling <SNR>15_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     silent! call matchdelete(3)
line 3:     let w:paren_hl_on = 0
line 4:   endif
<SNR>15_Remove_Matches returning #0

continuing in <SNR>15_Highlight_Matching_Pair

line 3: 
line 4:   " Avoid that we remove the popup menu.
line 5:   " Return when there are no colors (looks like the cursor jumps).
line 6:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 7:     return
line 8:   endif
line 9: 
line 10:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 11:   let c_lnum = line('.')
line 12:   let c_col = col('.')
line 13:   let before = 0
line 14: 
line 15:   let text = getline(c_lnum)
line 16:   let matches = matchlist(text, '\(.\)\=\%'.c_col.'c\(.\=\)')
line 17:   if empty(matches)
line 18:     let [c_before, c] = ['', '']
line 19:   else
line 20:     let [c_before, c] = matches[1:2]
line 21:   endif
line 22:   let plist = split(&matchpairs, '.\zs[:,]')
line 23:   let i = index(plist, c)
line 24:   if i < 0
line 25:     " not found, in Insert mode try character before the cursor
line 26:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 27:       let before = strlen(c_before)
line 28:       let c = c_before
line 29:       let i = index(plist, c)
line 30:     endif
line 31:     if i < 0
line 32:       " not found, nothing to do
line 33:       return
<SNR>15_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/lua/telescope/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/lua/telescope/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/lua/telescope/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/lua/telescope/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/lua/telescope/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/lua/telescope/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/lua/telescope/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/lua/telescope/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/lua/telescope/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/lua/telescope/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/lua/telescope/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/lua/telescope/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/lua/telescope/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/lua/telescope/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/lua/telescope/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/lua/telescope/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/lua/telescope/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/lua/telescope/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/lua/telescope/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/lua/telescope/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/lua/telescope/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/lua/telescope/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/lua/telescope/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/lua/telescope/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/lua/telescope/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/lua/telescope/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/lua/telescope/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/lua/telescope/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/lua/telescope/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/lua/telescope/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/lua/telescope/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/lua/telescope/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/lua/telescope/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/lua/telescope/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/lua/telescope/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/lua/telescope/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/lua/telescope/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/lua/telescope/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/lua/telescope/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/lua/telescope/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/lua/telescope/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/lua/telescope/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/lua/telescope/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/lua/telescope/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/lua/telescope/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/lua/telescope/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/lua/telescope/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/lua/telescope/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/lua/telescope/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/lua/telescope/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/lua/telescope/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/lua/telescope/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/lua/telescope/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/lua/telescope/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/lua/telescope/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/lua/telescope/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/lua/telescope/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/lua/telescope/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/lua/telescope/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/lua/telescope/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/lua/telescope/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/lua/telescope/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/lua/telescope/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/lua/telescope/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/lua/telescope/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/lua/telescope/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/lua/telescope/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/lua/telescope/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/lua/telescope/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/lua/telescope/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/lua/telescope/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/lua/telescope/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/plenary.nvim/lua/plenary/async/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
Executing FileType Autocommands for "*"
autocommand call s:LoadFTPlugin()

Executing: call s:LoadFTPlugin()
calling <SNR>1_LoadFTPlugin()

line 1:     if exists("b:undo_ftplugin")
line 2:       exe b:undo_ftplugin
line 3:       unlet! b:undo_ftplugin b:did_ftplugin
line 4:     endif
line 5: 
line 6:     let s = expand("<amatch>")
line 7:     if s != ""
line 8:       if &cpo =~# "S" && exists("b:did_ftplugin")
line 9: ^I" In compatible mode options are reset to the global values, need to
line 10: ^I" set the local values also when a plugin was already used.
line 11: ^Iunlet b:did_ftplugin
line 12:       endif
line 13: 
line 14:       " When there is a dot it is used to separate filetype names.  Thus for
line 15:       " "aaa.bbb" load "aaa" and then "bbb".
line 16:       for name in split(s, '\.')
line 17:         " Load Lua ftplugins after Vim ftplugins _per directory_
line 18:         " TODO(clason): use nvim__get_runtime when supports globs and modeline
line 19:         exe printf('runtime! ftplugin/%s.vim ftplugin/%s.lua', name, name)
line 19: runtime! ftplugin/TelescopePrompt.vim ftplugin/TelescopePrompt.lua
Searching for "ftplugin/TelescopePrompt.vim ftplugin/TelescopePrompt.lua" in runtime path
Searching for "/home/raothorn/.config/nvim/ftplugin/TelescopePrompt.vim"
Searching for "/home/raothorn/.config/nvim/ftplugin/TelescopePrompt.lua"
Searching for "/etc/xdg/nvim/ftplugin/TelescopePrompt.vim"
Searching for "/etc/xdg/nvim/ftplugin/TelescopePrompt.lua"
Searching for "/home/raothorn/.local/share/nvim/site/ftplugin/TelescopePrompt.vim"
Searching for "/home/raothorn/.local/share/nvim/site/ftplugin/TelescopePrompt.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/Comment.nvim/ftplugin/TelescopePrompt.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/Comment.nvim/ftplugin/TelescopePrompt.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/auto-pairs/ftplugin/TelescopePrompt.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/auto-pairs/ftplugin/TelescopePrompt.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/autoclose.nvim/ftplugin/TelescopePrompt.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/autoclose.nvim/ftplugin/TelescopePrompt.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-buffer/ftplugin/TelescopePrompt.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-buffer/ftplugin/TelescopePrompt.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lsp/ftplugin/TelescopePrompt.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lsp/ftplugin/TelescopePrompt.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lsp-signature-help/ftplugin/TelescopePrompt.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lsp-signature-help/ftplugin/TelescopePrompt.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lua/ftplugin/TelescopePrompt.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lua/ftplugin/TelescopePrompt.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-path/ftplugin/TelescopePrompt.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-path/ftplugin/TelescopePrompt.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-vsnip/ftplugin/TelescopePrompt.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-vsnip/ftplugin/TelescopePrompt.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/everforest/ftplugin/TelescopePrompt.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/everforest/ftplugin/TelescopePrompt.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/formatter.nvim/ftplugin/TelescopePrompt.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/formatter.nvim/ftplugin/TelescopePrompt.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/friendly-snippets/ftplugin/TelescopePrompt.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/friendly-snippets/ftplugin/TelescopePrompt.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/mason-lspconfig.nvim/ftplugin/TelescopePrompt.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/mason-lspconfig.nvim/ftplugin/TelescopePrompt.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/mason.nvim/ftplugin/TelescopePrompt.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/mason.nvim/ftplugin/TelescopePrompt.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-cmp/ftplugin/TelescopePrompt.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-cmp/ftplugin/TelescopePrompt.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-lspconfig/ftplugin/TelescopePrompt.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-lspconfig/ftplugin/TelescopePrompt.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-treesitter/ftplugin/TelescopePrompt.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-treesitter/ftplugin/TelescopePrompt.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/packer.nvim/ftplugin/TelescopePrompt.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/packer.nvim/ftplugin/TelescopePrompt.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/plenary.nvim/ftplugin/TelescopePrompt.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/plenary.nvim/ftplugin/TelescopePrompt.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/ranger.nvim/ftplugin/TelescopePrompt.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/ranger.nvim/ftplugin/TelescopePrompt.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/rust-tools.nvim/ftplugin/TelescopePrompt.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/rust-tools.nvim/ftplugin/TelescopePrompt.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/ftplugin/TelescopePrompt.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/ftplugin/TelescopePrompt.lua"
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/ftplugin/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
line 19: sourcing "/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/ftplugin/TelescopePrompt.lua"
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/ftplugin/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/ftplugin/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/ftplugin/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/ftplugin/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/ftplugin/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/ftplugin/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
finished sourcing /home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/ftplugin/TelescopePrompt.lua
continuing in <SNR>1_LoadFTPlugin
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/toggleterm.nvim/ftplugin/TelescopePrompt.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/toggleterm.nvim/ftplugin/TelescopePrompt.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/vim-floaterm/ftplugin/TelescopePrompt.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/vim-floaterm/ftplugin/TelescopePrompt.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/vim-surround/ftplugin/TelescopePrompt.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/vim-surround/ftplugin/TelescopePrompt.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/vim-vsnip/ftplugin/TelescopePrompt.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/vim-vsnip/ftplugin/TelescopePrompt.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/workspaces.nvim/ftplugin/TelescopePrompt.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/workspaces.nvim/ftplugin/TelescopePrompt.lua"
Searching for "/usr/share/nvim/runtime/ftplugin/TelescopePrompt.vim"
Searching for "/usr/share/nvim/runtime/ftplugin/TelescopePrompt.lua"
Searching for "/usr/share/nvim/runtime/pack/dist/opt/matchit/ftplugin/TelescopePrompt.vim"
Searching for "/usr/share/nvim/runtime/pack/dist/opt/matchit/ftplugin/TelescopePrompt.lua"
Searching for "/usr/lib/nvim/ftplugin/TelescopePrompt.vim"
Searching for "/usr/lib/nvim/ftplugin/TelescopePrompt.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-buffer/after/ftplugin/TelescopePrompt.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-buffer/after/ftplugin/TelescopePrompt.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lsp/after/ftplugin/TelescopePrompt.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lsp/after/ftplugin/TelescopePrompt.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lsp-signature-help/after/ftplugin/TelescopePrompt.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lsp-signature-help/after/ftplugin/TelescopePrompt.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lua/after/ftplugin/TelescopePrompt.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lua/after/ftplugin/TelescopePrompt.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-path/after/ftplugin/TelescopePrompt.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-path/after/ftplugin/TelescopePrompt.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-vsnip/after/ftplugin/TelescopePrompt.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-vsnip/after/ftplugin/TelescopePrompt.lua"
Searching for "/usr/share/vim/vimfiles/ftplugin/TelescopePrompt.vim"
Searching for "/usr/share/vim/vimfiles/ftplugin/TelescopePrompt.lua"
line 20:         exe printf('runtime! ftplugin/%s_*.vim ftplugin/%s_*.lua', name, name)
line 20: runtime! ftplugin/TelescopePrompt_*.vim ftplugin/TelescopePrompt_*.lua
Searching for "ftplugin/TelescopePrompt_*.vim ftplugin/TelescopePrompt_*.lua" in runtime path
Searching for "/home/raothorn/.config/nvim/ftplugin/TelescopePrompt_*.vim"
Searching for "/home/raothorn/.config/nvim/ftplugin/TelescopePrompt_*.lua"
Searching for "/etc/xdg/nvim/ftplugin/TelescopePrompt_*.vim"
Searching for "/etc/xdg/nvim/ftplugin/TelescopePrompt_*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/ftplugin/TelescopePrompt_*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/ftplugin/TelescopePrompt_*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/Comment.nvim/ftplugin/TelescopePrompt_*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/Comment.nvim/ftplugin/TelescopePrompt_*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/auto-pairs/ftplugin/TelescopePrompt_*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/auto-pairs/ftplugin/TelescopePrompt_*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/autoclose.nvim/ftplugin/TelescopePrompt_*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/autoclose.nvim/ftplugin/TelescopePrompt_*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-buffer/ftplugin/TelescopePrompt_*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-buffer/ftplugin/TelescopePrompt_*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lsp/ftplugin/TelescopePrompt_*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lsp/ftplugin/TelescopePrompt_*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lsp-signature-help/ftplugin/TelescopePrompt_*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lsp-signature-help/ftplugin/TelescopePrompt_*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lua/ftplugin/TelescopePrompt_*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lua/ftplugin/TelescopePrompt_*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-path/ftplugin/TelescopePrompt_*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-path/ftplugin/TelescopePrompt_*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-vsnip/ftplugin/TelescopePrompt_*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-vsnip/ftplugin/TelescopePrompt_*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/everforest/ftplugin/TelescopePrompt_*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/everforest/ftplugin/TelescopePrompt_*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/formatter.nvim/ftplugin/TelescopePrompt_*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/formatter.nvim/ftplugin/TelescopePrompt_*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/friendly-snippets/ftplugin/TelescopePrompt_*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/friendly-snippets/ftplugin/TelescopePrompt_*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/mason-lspconfig.nvim/ftplugin/TelescopePrompt_*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/mason-lspconfig.nvim/ftplugin/TelescopePrompt_*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/mason.nvim/ftplugin/TelescopePrompt_*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/mason.nvim/ftplugin/TelescopePrompt_*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-cmp/ftplugin/TelescopePrompt_*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-cmp/ftplugin/TelescopePrompt_*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-lspconfig/ftplugin/TelescopePrompt_*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-lspconfig/ftplugin/TelescopePrompt_*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-treesitter/ftplugin/TelescopePrompt_*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-treesitter/ftplugin/TelescopePrompt_*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/packer.nvim/ftplugin/TelescopePrompt_*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/packer.nvim/ftplugin/TelescopePrompt_*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/plenary.nvim/ftplugin/TelescopePrompt_*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/plenary.nvim/ftplugin/TelescopePrompt_*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/ranger.nvim/ftplugin/TelescopePrompt_*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/ranger.nvim/ftplugin/TelescopePrompt_*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/rust-tools.nvim/ftplugin/TelescopePrompt_*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/rust-tools.nvim/ftplugin/TelescopePrompt_*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/ftplugin/TelescopePrompt_*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/ftplugin/TelescopePrompt_*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/toggleterm.nvim/ftplugin/TelescopePrompt_*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/toggleterm.nvim/ftplugin/TelescopePrompt_*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/vim-floaterm/ftplugin/TelescopePrompt_*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/vim-floaterm/ftplugin/TelescopePrompt_*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/vim-surround/ftplugin/TelescopePrompt_*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/vim-surround/ftplugin/TelescopePrompt_*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/vim-vsnip/ftplugin/TelescopePrompt_*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/vim-vsnip/ftplugin/TelescopePrompt_*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/workspaces.nvim/ftplugin/TelescopePrompt_*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/workspaces.nvim/ftplugin/TelescopePrompt_*.lua"
Searching for "/usr/share/nvim/runtime/ftplugin/TelescopePrompt_*.vim"
Searching for "/usr/share/nvim/runtime/ftplugin/TelescopePrompt_*.lua"
Searching for "/usr/share/nvim/runtime/pack/dist/opt/matchit/ftplugin/TelescopePrompt_*.vim"
Searching for "/usr/share/nvim/runtime/pack/dist/opt/matchit/ftplugin/TelescopePrompt_*.lua"
Searching for "/usr/lib/nvim/ftplugin/TelescopePrompt_*.vim"
Searching for "/usr/lib/nvim/ftplugin/TelescopePrompt_*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-buffer/after/ftplugin/TelescopePrompt_*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-buffer/after/ftplugin/TelescopePrompt_*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lsp/after/ftplugin/TelescopePrompt_*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lsp/after/ftplugin/TelescopePrompt_*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lsp-signature-help/after/ftplugin/TelescopePrompt_*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lsp-signature-help/after/ftplugin/TelescopePrompt_*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lua/after/ftplugin/TelescopePrompt_*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lua/after/ftplugin/TelescopePrompt_*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-path/after/ftplugin/TelescopePrompt_*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-path/after/ftplugin/TelescopePrompt_*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-vsnip/after/ftplugin/TelescopePrompt_*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-vsnip/after/ftplugin/TelescopePrompt_*.lua"
Searching for "/usr/share/vim/vimfiles/ftplugin/TelescopePrompt_*.vim"
Searching for "/usr/share/vim/vimfiles/ftplugin/TelescopePrompt_*.lua"
not found in runtime path: "ftplugin/TelescopePrompt_*.vim ftplugin/TelescopePrompt_*.lua"
line 21:         exe printf('runtime! ftplugin/%s/*.vim ftplugin/%s/*.lua', name, name)
line 21: runtime! ftplugin/TelescopePrompt/*.vim ftplugin/TelescopePrompt/*.lua
Searching for "ftplugin/TelescopePrompt/*.vim ftplugin/TelescopePrompt/*.lua" in runtime path
Searching for "/home/raothorn/.config/nvim/ftplugin/TelescopePrompt/*.vim"
Searching for "/home/raothorn/.config/nvim/ftplugin/TelescopePrompt/*.lua"
Searching for "/etc/xdg/nvim/ftplugin/TelescopePrompt/*.vim"
Searching for "/etc/xdg/nvim/ftplugin/TelescopePrompt/*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/ftplugin/TelescopePrompt/*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/ftplugin/TelescopePrompt/*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/Comment.nvim/ftplugin/TelescopePrompt/*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/Comment.nvim/ftplugin/TelescopePrompt/*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/auto-pairs/ftplugin/TelescopePrompt/*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/auto-pairs/ftplugin/TelescopePrompt/*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/autoclose.nvim/ftplugin/TelescopePrompt/*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/autoclose.nvim/ftplugin/TelescopePrompt/*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-buffer/ftplugin/TelescopePrompt/*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-buffer/ftplugin/TelescopePrompt/*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lsp/ftplugin/TelescopePrompt/*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lsp/ftplugin/TelescopePrompt/*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lsp-signature-help/ftplugin/TelescopePrompt/*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lsp-signature-help/ftplugin/TelescopePrompt/*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lua/ftplugin/TelescopePrompt/*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lua/ftplugin/TelescopePrompt/*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-path/ftplugin/TelescopePrompt/*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-path/ftplugin/TelescopePrompt/*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-vsnip/ftplugin/TelescopePrompt/*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-vsnip/ftplugin/TelescopePrompt/*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/everforest/ftplugin/TelescopePrompt/*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/everforest/ftplugin/TelescopePrompt/*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/formatter.nvim/ftplugin/TelescopePrompt/*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/formatter.nvim/ftplugin/TelescopePrompt/*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/friendly-snippets/ftplugin/TelescopePrompt/*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/friendly-snippets/ftplugin/TelescopePrompt/*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/mason-lspconfig.nvim/ftplugin/TelescopePrompt/*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/mason-lspconfig.nvim/ftplugin/TelescopePrompt/*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/mason.nvim/ftplugin/TelescopePrompt/*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/mason.nvim/ftplugin/TelescopePrompt/*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-cmp/ftplugin/TelescopePrompt/*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-cmp/ftplugin/TelescopePrompt/*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-lspconfig/ftplugin/TelescopePrompt/*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-lspconfig/ftplugin/TelescopePrompt/*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-treesitter/ftplugin/TelescopePrompt/*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-treesitter/ftplugin/TelescopePrompt/*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/packer.nvim/ftplugin/TelescopePrompt/*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/packer.nvim/ftplugin/TelescopePrompt/*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/plenary.nvim/ftplugin/TelescopePrompt/*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/plenary.nvim/ftplugin/TelescopePrompt/*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/ranger.nvim/ftplugin/TelescopePrompt/*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/ranger.nvim/ftplugin/TelescopePrompt/*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/rust-tools.nvim/ftplugin/TelescopePrompt/*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/rust-tools.nvim/ftplugin/TelescopePrompt/*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/ftplugin/TelescopePrompt/*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/ftplugin/TelescopePrompt/*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/toggleterm.nvim/ftplugin/TelescopePrompt/*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/toggleterm.nvim/ftplugin/TelescopePrompt/*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/vim-floaterm/ftplugin/TelescopePrompt/*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/vim-floaterm/ftplugin/TelescopePrompt/*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/vim-surround/ftplugin/TelescopePrompt/*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/vim-surround/ftplugin/TelescopePrompt/*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/vim-vsnip/ftplugin/TelescopePrompt/*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/vim-vsnip/ftplugin/TelescopePrompt/*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/workspaces.nvim/ftplugin/TelescopePrompt/*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/workspaces.nvim/ftplugin/TelescopePrompt/*.lua"
Searching for "/usr/share/nvim/runtime/ftplugin/TelescopePrompt/*.vim"
Searching for "/usr/share/nvim/runtime/ftplugin/TelescopePrompt/*.lua"
Searching for "/usr/share/nvim/runtime/pack/dist/opt/matchit/ftplugin/TelescopePrompt/*.vim"
Searching for "/usr/share/nvim/runtime/pack/dist/opt/matchit/ftplugin/TelescopePrompt/*.lua"
Searching for "/usr/lib/nvim/ftplugin/TelescopePrompt/*.vim"
Searching for "/usr/lib/nvim/ftplugin/TelescopePrompt/*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-buffer/after/ftplugin/TelescopePrompt/*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-buffer/after/ftplugin/TelescopePrompt/*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lsp/after/ftplugin/TelescopePrompt/*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lsp/after/ftplugin/TelescopePrompt/*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lsp-signature-help/after/ftplugin/TelescopePrompt/*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lsp-signature-help/after/ftplugin/TelescopePrompt/*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lua/after/ftplugin/TelescopePrompt/*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lua/after/ftplugin/TelescopePrompt/*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-path/after/ftplugin/TelescopePrompt/*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-path/after/ftplugin/TelescopePrompt/*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-vsnip/after/ftplugin/TelescopePrompt/*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-vsnip/after/ftplugin/TelescopePrompt/*.lua"
Searching for "/usr/share/vim/vimfiles/ftplugin/TelescopePrompt/*.vim"
Searching for "/usr/share/vim/vimfiles/ftplugin/TelescopePrompt/*.lua"
not found in runtime path: "ftplugin/TelescopePrompt/*.vim ftplugin/TelescopePrompt/*.lua"
line 22:       endfor
line 16:       for name in split(s, '\.')
line 17:         " Load Lua ftplugins after Vim ftplugins _per directory_
line 18:         " TODO(clason): use nvim__get_runtime when supports globs and modeline
line 19:         exe printf('runtime! ftplugin/%s.vim ftplugin/%s.lua', name, name)
line 20:         exe printf('runtime! ftplugin/%s_*.vim ftplugin/%s_*.lua', name, name)
line 21:         exe printf('runtime! ftplugin/%s/*.vim ftplugin/%s/*.lua', name, name)
line 22:       endfor
line 23:     endif
<SNR>1_LoadFTPlugin returning #0

continuing in FileType Autocommands for "*"

Executing FileType Autocommands for "*"
autocommand call s:LoadIndent()

Executing: call s:LoadIndent()
calling <SNR>2_LoadIndent()

line 1:     if exists("b:undo_indent")
line 2:       exe b:undo_indent
line 3:       unlet! b:undo_indent b:did_indent
line 4:     endif
line 5:     let s = expand("<amatch>")
line 6:     if s != ""
line 7:       if exists("b:did_indent")
line 8: ^Iunlet b:did_indent
line 9:       endif
line 10: 
line 11:       " When there is a dot it is used to separate filetype names.  Thus for
line 12:       " "aaa.bbb" load "indent/aaa.vim" and then "indent/bbb.vim".
line 13:       for name in split(s, '\.')
line 14:         exe 'runtime! indent/' . name . '.vim'
line 14: runtime! indent/TelescopePrompt.vim
Searching for "indent/TelescopePrompt.vim" in runtime path
Searching for "/home/raothorn/.config/nvim/indent/TelescopePrompt.vim"
Searching for "/etc/xdg/nvim/indent/TelescopePrompt.vim"
Searching for "/home/raothorn/.local/share/nvim/site/indent/TelescopePrompt.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/Comment.nvim/indent/TelescopePrompt.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/auto-pairs/indent/TelescopePrompt.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/autoclose.nvim/indent/TelescopePrompt.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-buffer/indent/TelescopePrompt.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lsp/indent/TelescopePrompt.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lsp-signature-help/indent/TelescopePrompt.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lua/indent/TelescopePrompt.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-path/indent/TelescopePrompt.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-vsnip/indent/TelescopePrompt.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/everforest/indent/TelescopePrompt.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/formatter.nvim/indent/TelescopePrompt.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/friendly-snippets/indent/TelescopePrompt.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/mason-lspconfig.nvim/indent/TelescopePrompt.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/mason.nvim/indent/TelescopePrompt.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-cmp/indent/TelescopePrompt.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-lspconfig/indent/TelescopePrompt.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-treesitter/indent/TelescopePrompt.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/packer.nvim/indent/TelescopePrompt.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/plenary.nvim/indent/TelescopePrompt.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/ranger.nvim/indent/TelescopePrompt.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/rust-tools.nvim/indent/TelescopePrompt.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/indent/TelescopePrompt.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/toggleterm.nvim/indent/TelescopePrompt.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/vim-floaterm/indent/TelescopePrompt.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/vim-surround/indent/TelescopePrompt.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/vim-vsnip/indent/TelescopePrompt.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/workspaces.nvim/indent/TelescopePrompt.vim"
Searching for "/usr/share/nvim/runtime/indent/TelescopePrompt.vim"
Searching for "/usr/share/nvim/runtime/pack/dist/opt/matchit/indent/TelescopePrompt.vim"
Searching for "/usr/lib/nvim/indent/TelescopePrompt.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-buffer/after/indent/TelescopePrompt.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lsp/after/indent/TelescopePrompt.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lsp-signature-help/after/indent/TelescopePrompt.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lua/after/indent/TelescopePrompt.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-path/after/indent/TelescopePrompt.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-vsnip/after/indent/TelescopePrompt.vim"
Searching for "/usr/share/vim/vimfiles/indent/TelescopePrompt.vim"
not found in runtime path: "indent/TelescopePrompt.vim"
line 15:         exe 'runtime! indent/' . name . '.lua'
line 15: runtime! indent/TelescopePrompt.lua
Searching for "indent/TelescopePrompt.lua" in runtime path
Searching for "/home/raothorn/.config/nvim/indent/TelescopePrompt.lua"
Searching for "/etc/xdg/nvim/indent/TelescopePrompt.lua"
Searching for "/home/raothorn/.local/share/nvim/site/indent/TelescopePrompt.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/Comment.nvim/indent/TelescopePrompt.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/auto-pairs/indent/TelescopePrompt.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/autoclose.nvim/indent/TelescopePrompt.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-buffer/indent/TelescopePrompt.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lsp/indent/TelescopePrompt.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lsp-signature-help/indent/TelescopePrompt.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lua/indent/TelescopePrompt.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-path/indent/TelescopePrompt.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-vsnip/indent/TelescopePrompt.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/everforest/indent/TelescopePrompt.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/formatter.nvim/indent/TelescopePrompt.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/friendly-snippets/indent/TelescopePrompt.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/mason-lspconfig.nvim/indent/TelescopePrompt.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/mason.nvim/indent/TelescopePrompt.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-cmp/indent/TelescopePrompt.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-lspconfig/indent/TelescopePrompt.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-treesitter/indent/TelescopePrompt.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/packer.nvim/indent/TelescopePrompt.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/plenary.nvim/indent/TelescopePrompt.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/ranger.nvim/indent/TelescopePrompt.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/rust-tools.nvim/indent/TelescopePrompt.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/indent/TelescopePrompt.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/toggleterm.nvim/indent/TelescopePrompt.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/vim-floaterm/indent/TelescopePrompt.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/vim-surround/indent/TelescopePrompt.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/vim-vsnip/indent/TelescopePrompt.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/workspaces.nvim/indent/TelescopePrompt.lua"
Searching for "/usr/share/nvim/runtime/indent/TelescopePrompt.lua"
Searching for "/usr/share/nvim/runtime/pack/dist/opt/matchit/indent/TelescopePrompt.lua"
Searching for "/usr/lib/nvim/indent/TelescopePrompt.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-buffer/after/indent/TelescopePrompt.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lsp/after/indent/TelescopePrompt.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lsp-signature-help/after/indent/TelescopePrompt.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lua/after/indent/TelescopePrompt.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-path/after/indent/TelescopePrompt.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-vsnip/after/indent/TelescopePrompt.lua"
Searching for "/usr/share/vim/vimfiles/indent/TelescopePrompt.lua"
not found in runtime path: "indent/TelescopePrompt.lua"
line 16:       endfor
line 13:       for name in split(s, '\.')
line 14:         exe 'runtime! indent/' . name . '.vim'
line 15:         exe 'runtime! indent/' . name . '.lua'
line 16:       endfor
line 17:     endif
<SNR>2_LoadIndent returning #0

continuing in FileType Autocommands for "*"

Executing FileType Autocommands for "*"
autocommand <Lua 56: ~/.local/share/nvim/site/pack/packer/start/nvim-treesitter/lua/nvim-treesitter/install.lua:558>

Executing: 
Executing FileType Autocommands for "*"
autocommand if !exists('b:ts_highlight') | 0verbose exe "set syntax=" . expand("<amatch>") | endif

Executing: if !exists('b:ts_highlight') | 0verbose exe "set syntax=" . expand("<amatch>") | endif
Executing:  0verbose exe "set syntax=" . expand("<amatch>") | endif
Executing:  endif
Executing FileType Autocommands for "*"
autocommand <Lua 127: ~/.local/share/nvim/site/pack/packer/start/nvim-treesitter/lua/nvim-treesitter/configs.lua:132>

Executing: 
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/plenary.nvim/lua/plenary/async/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
Executing FileType Autocommands for "*"
autocommand call s:LoadFTPlugin()

Executing: call s:LoadFTPlugin()
calling <SNR>1_LoadFTPlugin()

line 1:     if exists("b:undo_ftplugin")
line 2:       exe b:undo_ftplugin
line 3:       unlet! b:undo_ftplugin b:did_ftplugin
line 4:     endif
line 5: 
line 6:     let s = expand("<amatch>")
line 7:     if s != ""
line 8:       if &cpo =~# "S" && exists("b:did_ftplugin")
line 9: ^I" In compatible mode options are reset to the global values, need to
line 10: ^I" set the local values also when a plugin was already used.
line 11: ^Iunlet b:did_ftplugin
line 12:       endif
line 13: 
line 14:       " When there is a dot it is used to separate filetype names.  Thus for
line 15:       " "aaa.bbb" load "aaa" and then "bbb".
line 16:       for name in split(s, '\.')
line 17:         " Load Lua ftplugins after Vim ftplugins _per directory_
line 18:         " TODO(clason): use nvim__get_runtime when supports globs and modeline
line 19:         exe printf('runtime! ftplugin/%s.vim ftplugin/%s.lua', name, name)
line 19: runtime! ftplugin/TelescopeResults.vim ftplugin/TelescopeResults.lua
Searching for "ftplugin/TelescopeResults.vim ftplugin/TelescopeResults.lua" in runtime path
Searching for "/home/raothorn/.config/nvim/ftplugin/TelescopeResults.vim"
Searching for "/home/raothorn/.config/nvim/ftplugin/TelescopeResults.lua"
Searching for "/etc/xdg/nvim/ftplugin/TelescopeResults.vim"
Searching for "/etc/xdg/nvim/ftplugin/TelescopeResults.lua"
Searching for "/home/raothorn/.local/share/nvim/site/ftplugin/TelescopeResults.vim"
Searching for "/home/raothorn/.local/share/nvim/site/ftplugin/TelescopeResults.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/Comment.nvim/ftplugin/TelescopeResults.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/Comment.nvim/ftplugin/TelescopeResults.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/auto-pairs/ftplugin/TelescopeResults.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/auto-pairs/ftplugin/TelescopeResults.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/autoclose.nvim/ftplugin/TelescopeResults.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/autoclose.nvim/ftplugin/TelescopeResults.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-buffer/ftplugin/TelescopeResults.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-buffer/ftplugin/TelescopeResults.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lsp/ftplugin/TelescopeResults.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lsp/ftplugin/TelescopeResults.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lsp-signature-help/ftplugin/TelescopeResults.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lsp-signature-help/ftplugin/TelescopeResults.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lua/ftplugin/TelescopeResults.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lua/ftplugin/TelescopeResults.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-path/ftplugin/TelescopeResults.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-path/ftplugin/TelescopeResults.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-vsnip/ftplugin/TelescopeResults.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-vsnip/ftplugin/TelescopeResults.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/everforest/ftplugin/TelescopeResults.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/everforest/ftplugin/TelescopeResults.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/formatter.nvim/ftplugin/TelescopeResults.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/formatter.nvim/ftplugin/TelescopeResults.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/friendly-snippets/ftplugin/TelescopeResults.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/friendly-snippets/ftplugin/TelescopeResults.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/mason-lspconfig.nvim/ftplugin/TelescopeResults.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/mason-lspconfig.nvim/ftplugin/TelescopeResults.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/mason.nvim/ftplugin/TelescopeResults.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/mason.nvim/ftplugin/TelescopeResults.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-cmp/ftplugin/TelescopeResults.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-cmp/ftplugin/TelescopeResults.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-lspconfig/ftplugin/TelescopeResults.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-lspconfig/ftplugin/TelescopeResults.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-treesitter/ftplugin/TelescopeResults.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-treesitter/ftplugin/TelescopeResults.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/packer.nvim/ftplugin/TelescopeResults.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/packer.nvim/ftplugin/TelescopeResults.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/plenary.nvim/ftplugin/TelescopeResults.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/plenary.nvim/ftplugin/TelescopeResults.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/ranger.nvim/ftplugin/TelescopeResults.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/ranger.nvim/ftplugin/TelescopeResults.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/rust-tools.nvim/ftplugin/TelescopeResults.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/rust-tools.nvim/ftplugin/TelescopeResults.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/ftplugin/TelescopeResults.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/ftplugin/TelescopeResults.lua"
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/ftplugin/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
line 19: sourcing "/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/ftplugin/TelescopeResults.lua"
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/ftplugin/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/ftplugin/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/ftplugin/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
finished sourcing /home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/ftplugin/TelescopeResults.lua
continuing in <SNR>1_LoadFTPlugin
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/toggleterm.nvim/ftplugin/TelescopeResults.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/toggleterm.nvim/ftplugin/TelescopeResults.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/vim-floaterm/ftplugin/TelescopeResults.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/vim-floaterm/ftplugin/TelescopeResults.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/vim-surround/ftplugin/TelescopeResults.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/vim-surround/ftplugin/TelescopeResults.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/vim-vsnip/ftplugin/TelescopeResults.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/vim-vsnip/ftplugin/TelescopeResults.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/workspaces.nvim/ftplugin/TelescopeResults.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/workspaces.nvim/ftplugin/TelescopeResults.lua"
Searching for "/usr/share/nvim/runtime/ftplugin/TelescopeResults.vim"
Searching for "/usr/share/nvim/runtime/ftplugin/TelescopeResults.lua"
Searching for "/usr/share/nvim/runtime/pack/dist/opt/matchit/ftplugin/TelescopeResults.vim"
Searching for "/usr/share/nvim/runtime/pack/dist/opt/matchit/ftplugin/TelescopeResults.lua"
Searching for "/usr/lib/nvim/ftplugin/TelescopeResults.vim"
Searching for "/usr/lib/nvim/ftplugin/TelescopeResults.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-buffer/after/ftplugin/TelescopeResults.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-buffer/after/ftplugin/TelescopeResults.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lsp/after/ftplugin/TelescopeResults.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lsp/after/ftplugin/TelescopeResults.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lsp-signature-help/after/ftplugin/TelescopeResults.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lsp-signature-help/after/ftplugin/TelescopeResults.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lua/after/ftplugin/TelescopeResults.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lua/after/ftplugin/TelescopeResults.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-path/after/ftplugin/TelescopeResults.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-path/after/ftplugin/TelescopeResults.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-vsnip/after/ftplugin/TelescopeResults.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-vsnip/after/ftplugin/TelescopeResults.lua"
Searching for "/usr/share/vim/vimfiles/ftplugin/TelescopeResults.vim"
Searching for "/usr/share/vim/vimfiles/ftplugin/TelescopeResults.lua"
line 20:         exe printf('runtime! ftplugin/%s_*.vim ftplugin/%s_*.lua', name, name)
line 20: runtime! ftplugin/TelescopeResults_*.vim ftplugin/TelescopeResults_*.lua
Searching for "ftplugin/TelescopeResults_*.vim ftplugin/TelescopeResults_*.lua" in runtime path
Searching for "/home/raothorn/.config/nvim/ftplugin/TelescopeResults_*.vim"
Searching for "/home/raothorn/.config/nvim/ftplugin/TelescopeResults_*.lua"
Searching for "/etc/xdg/nvim/ftplugin/TelescopeResults_*.vim"
Searching for "/etc/xdg/nvim/ftplugin/TelescopeResults_*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/ftplugin/TelescopeResults_*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/ftplugin/TelescopeResults_*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/Comment.nvim/ftplugin/TelescopeResults_*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/Comment.nvim/ftplugin/TelescopeResults_*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/auto-pairs/ftplugin/TelescopeResults_*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/auto-pairs/ftplugin/TelescopeResults_*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/autoclose.nvim/ftplugin/TelescopeResults_*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/autoclose.nvim/ftplugin/TelescopeResults_*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-buffer/ftplugin/TelescopeResults_*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-buffer/ftplugin/TelescopeResults_*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lsp/ftplugin/TelescopeResults_*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lsp/ftplugin/TelescopeResults_*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lsp-signature-help/ftplugin/TelescopeResults_*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lsp-signature-help/ftplugin/TelescopeResults_*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lua/ftplugin/TelescopeResults_*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lua/ftplugin/TelescopeResults_*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-path/ftplugin/TelescopeResults_*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-path/ftplugin/TelescopeResults_*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-vsnip/ftplugin/TelescopeResults_*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-vsnip/ftplugin/TelescopeResults_*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/everforest/ftplugin/TelescopeResults_*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/everforest/ftplugin/TelescopeResults_*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/formatter.nvim/ftplugin/TelescopeResults_*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/formatter.nvim/ftplugin/TelescopeResults_*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/friendly-snippets/ftplugin/TelescopeResults_*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/friendly-snippets/ftplugin/TelescopeResults_*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/mason-lspconfig.nvim/ftplugin/TelescopeResults_*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/mason-lspconfig.nvim/ftplugin/TelescopeResults_*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/mason.nvim/ftplugin/TelescopeResults_*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/mason.nvim/ftplugin/TelescopeResults_*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-cmp/ftplugin/TelescopeResults_*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-cmp/ftplugin/TelescopeResults_*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-lspconfig/ftplugin/TelescopeResults_*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-lspconfig/ftplugin/TelescopeResults_*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-treesitter/ftplugin/TelescopeResults_*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-treesitter/ftplugin/TelescopeResults_*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/packer.nvim/ftplugin/TelescopeResults_*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/packer.nvim/ftplugin/TelescopeResults_*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/plenary.nvim/ftplugin/TelescopeResults_*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/plenary.nvim/ftplugin/TelescopeResults_*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/ranger.nvim/ftplugin/TelescopeResults_*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/ranger.nvim/ftplugin/TelescopeResults_*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/rust-tools.nvim/ftplugin/TelescopeResults_*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/rust-tools.nvim/ftplugin/TelescopeResults_*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/ftplugin/TelescopeResults_*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/ftplugin/TelescopeResults_*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/toggleterm.nvim/ftplugin/TelescopeResults_*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/toggleterm.nvim/ftplugin/TelescopeResults_*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/vim-floaterm/ftplugin/TelescopeResults_*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/vim-floaterm/ftplugin/TelescopeResults_*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/vim-surround/ftplugin/TelescopeResults_*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/vim-surround/ftplugin/TelescopeResults_*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/vim-vsnip/ftplugin/TelescopeResults_*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/vim-vsnip/ftplugin/TelescopeResults_*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/workspaces.nvim/ftplugin/TelescopeResults_*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/workspaces.nvim/ftplugin/TelescopeResults_*.lua"
Searching for "/usr/share/nvim/runtime/ftplugin/TelescopeResults_*.vim"
Searching for "/usr/share/nvim/runtime/ftplugin/TelescopeResults_*.lua"
Searching for "/usr/share/nvim/runtime/pack/dist/opt/matchit/ftplugin/TelescopeResults_*.vim"
Searching for "/usr/share/nvim/runtime/pack/dist/opt/matchit/ftplugin/TelescopeResults_*.lua"
Searching for "/usr/lib/nvim/ftplugin/TelescopeResults_*.vim"
Searching for "/usr/lib/nvim/ftplugin/TelescopeResults_*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-buffer/after/ftplugin/TelescopeResults_*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-buffer/after/ftplugin/TelescopeResults_*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lsp/after/ftplugin/TelescopeResults_*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lsp/after/ftplugin/TelescopeResults_*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lsp-signature-help/after/ftplugin/TelescopeResults_*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lsp-signature-help/after/ftplugin/TelescopeResults_*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lua/after/ftplugin/TelescopeResults_*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lua/after/ftplugin/TelescopeResults_*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-path/after/ftplugin/TelescopeResults_*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-path/after/ftplugin/TelescopeResults_*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-vsnip/after/ftplugin/TelescopeResults_*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-vsnip/after/ftplugin/TelescopeResults_*.lua"
Searching for "/usr/share/vim/vimfiles/ftplugin/TelescopeResults_*.vim"
Searching for "/usr/share/vim/vimfiles/ftplugin/TelescopeResults_*.lua"
not found in runtime path: "ftplugin/TelescopeResults_*.vim ftplugin/TelescopeResults_*.lua"
line 21:         exe printf('runtime! ftplugin/%s/*.vim ftplugin/%s/*.lua', name, name)
line 21: runtime! ftplugin/TelescopeResults/*.vim ftplugin/TelescopeResults/*.lua
Searching for "ftplugin/TelescopeResults/*.vim ftplugin/TelescopeResults/*.lua" in runtime path
Searching for "/home/raothorn/.config/nvim/ftplugin/TelescopeResults/*.vim"
Searching for "/home/raothorn/.config/nvim/ftplugin/TelescopeResults/*.lua"
Searching for "/etc/xdg/nvim/ftplugin/TelescopeResults/*.vim"
Searching for "/etc/xdg/nvim/ftplugin/TelescopeResults/*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/ftplugin/TelescopeResults/*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/ftplugin/TelescopeResults/*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/Comment.nvim/ftplugin/TelescopeResults/*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/Comment.nvim/ftplugin/TelescopeResults/*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/auto-pairs/ftplugin/TelescopeResults/*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/auto-pairs/ftplugin/TelescopeResults/*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/autoclose.nvim/ftplugin/TelescopeResults/*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/autoclose.nvim/ftplugin/TelescopeResults/*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-buffer/ftplugin/TelescopeResults/*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-buffer/ftplugin/TelescopeResults/*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lsp/ftplugin/TelescopeResults/*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lsp/ftplugin/TelescopeResults/*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lsp-signature-help/ftplugin/TelescopeResults/*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lsp-signature-help/ftplugin/TelescopeResults/*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lua/ftplugin/TelescopeResults/*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lua/ftplugin/TelescopeResults/*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-path/ftplugin/TelescopeResults/*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-path/ftplugin/TelescopeResults/*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-vsnip/ftplugin/TelescopeResults/*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-vsnip/ftplugin/TelescopeResults/*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/everforest/ftplugin/TelescopeResults/*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/everforest/ftplugin/TelescopeResults/*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/formatter.nvim/ftplugin/TelescopeResults/*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/formatter.nvim/ftplugin/TelescopeResults/*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/friendly-snippets/ftplugin/TelescopeResults/*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/friendly-snippets/ftplugin/TelescopeResults/*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/mason-lspconfig.nvim/ftplugin/TelescopeResults/*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/mason-lspconfig.nvim/ftplugin/TelescopeResults/*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/mason.nvim/ftplugin/TelescopeResults/*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/mason.nvim/ftplugin/TelescopeResults/*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-cmp/ftplugin/TelescopeResults/*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-cmp/ftplugin/TelescopeResults/*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-lspconfig/ftplugin/TelescopeResults/*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-lspconfig/ftplugin/TelescopeResults/*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-treesitter/ftplugin/TelescopeResults/*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-treesitter/ftplugin/TelescopeResults/*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/packer.nvim/ftplugin/TelescopeResults/*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/packer.nvim/ftplugin/TelescopeResults/*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/plenary.nvim/ftplugin/TelescopeResults/*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/plenary.nvim/ftplugin/TelescopeResults/*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/ranger.nvim/ftplugin/TelescopeResults/*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/ranger.nvim/ftplugin/TelescopeResults/*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/rust-tools.nvim/ftplugin/TelescopeResults/*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/rust-tools.nvim/ftplugin/TelescopeResults/*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/ftplugin/TelescopeResults/*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/ftplugin/TelescopeResults/*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/toggleterm.nvim/ftplugin/TelescopeResults/*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/toggleterm.nvim/ftplugin/TelescopeResults/*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/vim-floaterm/ftplugin/TelescopeResults/*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/vim-floaterm/ftplugin/TelescopeResults/*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/vim-surround/ftplugin/TelescopeResults/*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/vim-surround/ftplugin/TelescopeResults/*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/vim-vsnip/ftplugin/TelescopeResults/*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/vim-vsnip/ftplugin/TelescopeResults/*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/workspaces.nvim/ftplugin/TelescopeResults/*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/workspaces.nvim/ftplugin/TelescopeResults/*.lua"
Searching for "/usr/share/nvim/runtime/ftplugin/TelescopeResults/*.vim"
Searching for "/usr/share/nvim/runtime/ftplugin/TelescopeResults/*.lua"
Searching for "/usr/share/nvim/runtime/pack/dist/opt/matchit/ftplugin/TelescopeResults/*.vim"
Searching for "/usr/share/nvim/runtime/pack/dist/opt/matchit/ftplugin/TelescopeResults/*.lua"
Searching for "/usr/lib/nvim/ftplugin/TelescopeResults/*.vim"
Searching for "/usr/lib/nvim/ftplugin/TelescopeResults/*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-buffer/after/ftplugin/TelescopeResults/*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-buffer/after/ftplugin/TelescopeResults/*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lsp/after/ftplugin/TelescopeResults/*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lsp/after/ftplugin/TelescopeResults/*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lsp-signature-help/after/ftplugin/TelescopeResults/*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lsp-signature-help/after/ftplugin/TelescopeResults/*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lua/after/ftplugin/TelescopeResults/*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lua/after/ftplugin/TelescopeResults/*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-path/after/ftplugin/TelescopeResults/*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-path/after/ftplugin/TelescopeResults/*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-vsnip/after/ftplugin/TelescopeResults/*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-vsnip/after/ftplugin/TelescopeResults/*.lua"
Searching for "/usr/share/vim/vimfiles/ftplugin/TelescopeResults/*.vim"
Searching for "/usr/share/vim/vimfiles/ftplugin/TelescopeResults/*.lua"
not found in runtime path: "ftplugin/TelescopeResults/*.vim ftplugin/TelescopeResults/*.lua"
line 22:       endfor
line 16:       for name in split(s, '\.')
line 17:         " Load Lua ftplugins after Vim ftplugins _per directory_
line 18:         " TODO(clason): use nvim__get_runtime when supports globs and modeline
line 19:         exe printf('runtime! ftplugin/%s.vim ftplugin/%s.lua', name, name)
line 20:         exe printf('runtime! ftplugin/%s_*.vim ftplugin/%s_*.lua', name, name)
line 21:         exe printf('runtime! ftplugin/%s/*.vim ftplugin/%s/*.lua', name, name)
line 22:       endfor
line 23:     endif
<SNR>1_LoadFTPlugin returning #0

continuing in FileType Autocommands for "*"

Executing FileType Autocommands for "*"
autocommand call s:LoadIndent()

Executing: call s:LoadIndent()
calling <SNR>2_LoadIndent()

line 1:     if exists("b:undo_indent")
line 2:       exe b:undo_indent
line 3:       unlet! b:undo_indent b:did_indent
line 4:     endif
line 5:     let s = expand("<amatch>")
line 6:     if s != ""
line 7:       if exists("b:did_indent")
line 8: ^Iunlet b:did_indent
line 9:       endif
line 10: 
line 11:       " When there is a dot it is used to separate filetype names.  Thus for
line 12:       " "aaa.bbb" load "indent/aaa.vim" and then "indent/bbb.vim".
line 13:       for name in split(s, '\.')
line 14:         exe 'runtime! indent/' . name . '.vim'
line 14: runtime! indent/TelescopeResults.vim
Searching for "indent/TelescopeResults.vim" in runtime path
Searching for "/home/raothorn/.config/nvim/indent/TelescopeResults.vim"
Searching for "/etc/xdg/nvim/indent/TelescopeResults.vim"
Searching for "/home/raothorn/.local/share/nvim/site/indent/TelescopeResults.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/Comment.nvim/indent/TelescopeResults.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/auto-pairs/indent/TelescopeResults.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/autoclose.nvim/indent/TelescopeResults.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-buffer/indent/TelescopeResults.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lsp/indent/TelescopeResults.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lsp-signature-help/indent/TelescopeResults.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lua/indent/TelescopeResults.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-path/indent/TelescopeResults.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-vsnip/indent/TelescopeResults.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/everforest/indent/TelescopeResults.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/formatter.nvim/indent/TelescopeResults.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/friendly-snippets/indent/TelescopeResults.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/mason-lspconfig.nvim/indent/TelescopeResults.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/mason.nvim/indent/TelescopeResults.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-cmp/indent/TelescopeResults.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-lspconfig/indent/TelescopeResults.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-treesitter/indent/TelescopeResults.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/packer.nvim/indent/TelescopeResults.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/plenary.nvim/indent/TelescopeResults.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/ranger.nvim/indent/TelescopeResults.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/rust-tools.nvim/indent/TelescopeResults.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/indent/TelescopeResults.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/toggleterm.nvim/indent/TelescopeResults.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/vim-floaterm/indent/TelescopeResults.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/vim-surround/indent/TelescopeResults.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/vim-vsnip/indent/TelescopeResults.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/workspaces.nvim/indent/TelescopeResults.vim"
Searching for "/usr/share/nvim/runtime/indent/TelescopeResults.vim"
Searching for "/usr/share/nvim/runtime/pack/dist/opt/matchit/indent/TelescopeResults.vim"
Searching for "/usr/lib/nvim/indent/TelescopeResults.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-buffer/after/indent/TelescopeResults.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lsp/after/indent/TelescopeResults.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lsp-signature-help/after/indent/TelescopeResults.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lua/after/indent/TelescopeResults.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-path/after/indent/TelescopeResults.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-vsnip/after/indent/TelescopeResults.vim"
Searching for "/usr/share/vim/vimfiles/indent/TelescopeResults.vim"
not found in runtime path: "indent/TelescopeResults.vim"
line 15:         exe 'runtime! indent/' . name . '.lua'
line 15: runtime! indent/TelescopeResults.lua
Searching for "indent/TelescopeResults.lua" in runtime path
Searching for "/home/raothorn/.config/nvim/indent/TelescopeResults.lua"
Searching for "/etc/xdg/nvim/indent/TelescopeResults.lua"
Searching for "/home/raothorn/.local/share/nvim/site/indent/TelescopeResults.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/Comment.nvim/indent/TelescopeResults.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/auto-pairs/indent/TelescopeResults.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/autoclose.nvim/indent/TelescopeResults.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-buffer/indent/TelescopeResults.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lsp/indent/TelescopeResults.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lsp-signature-help/indent/TelescopeResults.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lua/indent/TelescopeResults.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-path/indent/TelescopeResults.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-vsnip/indent/TelescopeResults.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/everforest/indent/TelescopeResults.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/formatter.nvim/indent/TelescopeResults.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/friendly-snippets/indent/TelescopeResults.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/mason-lspconfig.nvim/indent/TelescopeResults.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/mason.nvim/indent/TelescopeResults.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-cmp/indent/TelescopeResults.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-lspconfig/indent/TelescopeResults.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-treesitter/indent/TelescopeResults.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/packer.nvim/indent/TelescopeResults.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/plenary.nvim/indent/TelescopeResults.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/ranger.nvim/indent/TelescopeResults.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/rust-tools.nvim/indent/TelescopeResults.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/indent/TelescopeResults.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/toggleterm.nvim/indent/TelescopeResults.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/vim-floaterm/indent/TelescopeResults.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/vim-surround/indent/TelescopeResults.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/vim-vsnip/indent/TelescopeResults.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/workspaces.nvim/indent/TelescopeResults.lua"
Searching for "/usr/share/nvim/runtime/indent/TelescopeResults.lua"
Searching for "/usr/share/nvim/runtime/pack/dist/opt/matchit/indent/TelescopeResults.lua"
Searching for "/usr/lib/nvim/indent/TelescopeResults.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-buffer/after/indent/TelescopeResults.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lsp/after/indent/TelescopeResults.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lsp-signature-help/after/indent/TelescopeResults.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lua/after/indent/TelescopeResults.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-path/after/indent/TelescopeResults.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-vsnip/after/indent/TelescopeResults.lua"
Searching for "/usr/share/vim/vimfiles/indent/TelescopeResults.lua"
not found in runtime path: "indent/TelescopeResults.lua"
line 16:       endfor
line 13:       for name in split(s, '\.')
line 14:         exe 'runtime! indent/' . name . '.vim'
line 15:         exe 'runtime! indent/' . name . '.lua'
line 16:       endfor
line 17:     endif
<SNR>2_LoadIndent returning #0

continuing in FileType Autocommands for "*"

Executing FileType Autocommands for "*"
autocommand <Lua 56: ~/.local/share/nvim/site/pack/packer/start/nvim-treesitter/lua/nvim-treesitter/install.lua:558>

Executing: 
Executing FileType Autocommands for "*"
autocommand if !exists('b:ts_highlight') | 0verbose exe "set syntax=" . expand("<amatch>") | endif

Executing: if !exists('b:ts_highlight') | 0verbose exe "set syntax=" . expand("<amatch>") | endif
Executing:  0verbose exe "set syntax=" . expand("<amatch>") | endif
Executing:  endif
Executing FileType Autocommands for "*"
autocommand <Lua 127: ~/.local/share/nvim/site/pack/packer/start/nvim-treesitter/lua/nvim-treesitter/configs.lua:132>

Executing: 
Executing TextChanged Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>15_Highlight_Matching_Pair()

line 1:   " Remove any previous match.
line 2:   call s:Remove_Matches()
calling <SNR>15_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     silent! call matchdelete(3)
line 3:     let w:paren_hl_on = 0
line 4:   endif
<SNR>15_Remove_Matches returning #0

continuing in <SNR>15_Highlight_Matching_Pair

line 3: 
line 4:   " Avoid that we remove the popup menu.
line 5:   " Return when there are no colors (looks like the cursor jumps).
line 6:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 7:     return
line 8:   endif
line 9: 
line 10:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 11:   let c_lnum = line('.')
line 12:   let c_col = col('.')
line 13:   let before = 0
line 14: 
line 15:   let text = getline(c_lnum)
line 16:   let matches = matchlist(text, '\(.\)\=\%'.c_col.'c\(.\=\)')
line 17:   if empty(matches)
line 18:     let [c_before, c] = ['', '']
line 19:   else
line 20:     let [c_before, c] = matches[1:2]
line 21:   endif
line 22:   let plist = split(&matchpairs, '.\zs[:,]')
line 23:   let i = index(plist, c)
line 24:   if i < 0
line 25:     " not found, in Insert mode try character before the cursor
line 26:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 27:       let before = strlen(c_before)
line 28:       let c = c_before
line 29:       let i = index(plist, c)
line 30:     endif
line 31:     if i < 0
line 32:       " not found, nothing to do
line 33:       return
<SNR>15_Highlight_Matching_Pair returning #0

continuing in TextChanged Autocommands for "*"

Executing TextChanged Autocommands for "*"
autocommand call s:on_text_changed()

Executing: call s:on_text_changed()
calling <SNR>38_on_text_changed()

line 1:   let l:session = vsnip#get_session()
calling vsnip#get_session()

line 1:   return s:session
vsnip#get_session returning v:null

continuing in <SNR>38_on_text_changed

line 2:   if !empty(l:session)
line 3:     call l:session.on_text_changed()
line 4:   endif
<SNR>38_on_text_changed returning #0

continuing in TextChanged Autocommands for "*"

Executing InsertEnter Autocommands for "*"
autocommand <Lua 91: ~/.local/share/nvim/site/pack/packer/start/nvim-cmp/lua/cmp/utils/autocmd.lua:22>

Executing: 
Executing InsertEnter Autocommands for "*"
autocommand <Lua 131: ~/.local/share/nvim/site/pack/packer/start/cmp-nvim-lsp/lua/cmp_nvim_lsp/init.lua:101>

Executing: 

chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-cmp/lua/cmp/utils/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-cmp/lua/cmp/utils/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-cmp/lua/cmp/utils/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-cmp/lua/cmp/utils/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-cmp/lua/cmp/utils/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-cmp/lua/cmp/utils/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-cmp/lua/cmp/utils/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-cmp/lua/cmp/utils/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-cmp/lua/cmp/utils/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-cmp/lua/cmp/utils/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-cmp/lua/cmp/utils/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-cmp/lua/cmp/utils/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-cmp/lua/cmp/utils/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-cmp/lua/cmp/utils/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
Executing CursorMovedI Autocommands for "*"
autocommand <Lua 95: ~/.local/share/nvim/site/pack/packer/start/nvim-cmp/lua/cmp/utils/autocmd.lua:22>

Executing: 
Executing CursorMovedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>15_Highlight_Matching_Pair()

line 1:   " Remove any previous match.
line 2:   call s:Remove_Matches()
calling <SNR>15_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     silent! call matchdelete(3)
line 3:     let w:paren_hl_on = 0
line 4:   endif
<SNR>15_Remove_Matches returning #0

continuing in <SNR>15_Highlight_Matching_Pair

line 3: 
line 4:   " Avoid that we remove the popup menu.
line 5:   " Return when there are no colors (looks like the cursor jumps).
line 6:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 7:     return
line 8:   endif
line 9: 
line 10:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 11:   let c_lnum = line('.')
line 12:   let c_col = col('.')
line 13:   let before = 0
line 14: 
line 15:   let text = getline(c_lnum)
line 16:   let matches = matchlist(text, '\(.\)\=\%'.c_col.'c\(.\=\)')
line 17:   if empty(matches)
line 18:     let [c_before, c] = ['', '']
line 19:   else
line 20:     let [c_before, c] = matches[1:2]
line 21:   endif
line 22:   let plist = split(&matchpairs, '.\zs[:,]')
line 23:   let i = index(plist, c)
line 24:   if i < 0
line 25:     " not found, in Insert mode try character before the cursor
line 26:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 27:       let before = strlen(c_before)
line 28:       let c = c_before
line 29:       let i = index(plist, c)
line 30:     endif
line 31:     if i < 0
line 32:       " not found, nothing to do
line 33:       return
<SNR>15_Highlight_Matching_Pair returning #0

continuing in CursorMovedI Autocommands for "*"

Executing TextChangedI Autocommands for "*"
autocommand <Lua 92: ~/.local/share/nvim/site/pack/packer/start/nvim-cmp/lua/cmp/utils/autocmd.lua:22>

Executing: 
Executing TextChangedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>15_Highlight_Matching_Pair()

line 1:   " Remove any previous match.
line 2:   call s:Remove_Matches()
calling <SNR>15_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     silent! call matchdelete(3)
line 3:     let w:paren_hl_on = 0
line 4:   endif
<SNR>15_Remove_Matches returning #0

continuing in <SNR>15_Highlight_Matching_Pair

line 3: 
line 4:   " Avoid that we remove the popup menu.
line 5:   " Return when there are no colors (looks like the cursor jumps).
line 6:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 7:     return
line 8:   endif
line 9: 
line 10:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 11:   let c_lnum = line('.')
line 12:   let c_col = col('.')
line 13:   let before = 0
line 14: 
line 15:   let text = getline(c_lnum)
line 16:   let matches = matchlist(text, '\(.\)\=\%'.c_col.'c\(.\=\)')
line 17:   if empty(matches)
line 18:     let [c_before, c] = ['', '']
line 19:   else
line 20:     let [c_before, c] = matches[1:2]
line 21:   endif
line 22:   let plist = split(&matchpairs, '.\zs[:,]')
line 23:   let i = index(plist, c)
line 24:   if i < 0
line 25:     " not found, in Insert mode try character before the cursor
line 26:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 27:       let before = strlen(c_before)
line 28:       let c = c_before
line 29:       let i = index(plist, c)
line 30:     endif
line 31:     if i < 0
line 32:       " not found, nothing to do
line 33:       return
<SNR>15_Highlight_Matching_Pair returning #0

continuing in TextChangedI Autocommands for "*"

Executing TextChangedI Autocommands for "*"
autocommand call s:on_text_changed()

Executing: call s:on_text_changed()
calling <SNR>38_on_text_changed()

line 1:   let l:session = vsnip#get_session()
calling vsnip#get_session()

line 1:   return s:session
vsnip#get_session returning v:null

continuing in <SNR>38_on_text_changed

line 2:   if !empty(l:session)
line 3:     call l:session.on_text_changed()
line 4:   endif
<SNR>38_on_text_changed returning #0

continuing in TextChangedI Autocommands for "*"
-- INSERT --
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/lua/telescope/previewers/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/lua/telescope/previewers/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/lua/telescope/previewers/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/lua/telescope/previewers/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/lua/telescope/previewers/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/lua/telescope/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
auto-removing autocommand: BufDelete <buffer=12>
auto-removing autocommand: WinClosed <buffer=12>
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/lua/telescope/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
Executing: do User TelescopePreviewerLoaded
Executing WinScrolled Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>15_Highlight_Matching_Pair()

line 1:   " Remove any previous match.
line 2:   call s:Remove_Matches()
calling <SNR>15_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     silent! call matchdelete(3)
line 3:     let w:paren_hl_on = 0
line 4:   endif
<SNR>15_Remove_Matches returning #0

continuing in <SNR>15_Highlight_Matching_Pair

line 3: 
line 4:   " Avoid that we remove the popup menu.
line 5:   " Return when there are no colors (looks like the cursor jumps).
line 6:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 7:     return
line 8:   endif
line 9: 
line 10:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 11:   let c_lnum = line('.')
line 12:   let c_col = col('.')
line 13:   let before = 0
line 14: 
line 15:   let text = getline(c_lnum)
line 16:   let matches = matchlist(text, '\(.\)\=\%'.c_col.'c\(.\=\)')
line 17:   if empty(matches)
line 18:     let [c_before, c] = ['', '']
line 19:   else
line 20:     let [c_before, c] = matches[1:2]
line 21:   endif
line 22:   let plist = split(&matchpairs, '.\zs[:,]')
line 23:   let i = index(plist, c)
line 24:   if i < 0
line 25:     " not found, in Insert mode try character before the cursor
line 26:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 27:       let before = strlen(c_before)
line 28:       let c = c_before
line 29:       let i = index(plist, c)
line 30:     endif
line 31:     if i < 0
line 32:       " not found, nothing to do
line 33:       return
<SNR>15_Highlight_Matching_Pair returning #0

continuing in WinScrolled Autocommands for "*"
-- INSERT --
Executing CursorMovedI Autocommands for "*"
autocommand <Lua 95: ~/.local/share/nvim/site/pack/packer/start/nvim-cmp/lua/cmp/utils/autocmd.lua:22>

Executing: 
Executing CursorMovedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>15_Highlight_Matching_Pair()

line 1:   " Remove any previous match.
line 2:   call s:Remove_Matches()
calling <SNR>15_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     silent! call matchdelete(3)
line 3:     let w:paren_hl_on = 0
line 4:   endif
<SNR>15_Remove_Matches returning #0

continuing in <SNR>15_Highlight_Matching_Pair

line 3: 
line 4:   " Avoid that we remove the popup menu.
line 5:   " Return when there are no colors (looks like the cursor jumps).
line 6:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 7:     return
line 8:   endif
line 9: 
line 10:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 11:   let c_lnum = line('.')
line 12:   let c_col = col('.')
line 13:   let before = 0
line 14: 
line 15:   let text = getline(c_lnum)
line 16:   let matches = matchlist(text, '\(.\)\=\%'.c_col.'c\(.\=\)')
line 17:   if empty(matches)
line 18:     let [c_before, c] = ['', '']
line 19:   else
line 20:     let [c_before, c] = matches[1:2]
line 21:   endif
line 22:   let plist = split(&matchpairs, '.\zs[:,]')
line 23:   let i = index(plist, c)
line 24:   if i < 0
line 25:     " not found, in Insert mode try character before the cursor
line 26:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 27:       let before = strlen(c_before)
line 28:       let c = c_before
line 29:       let i = index(plist, c)
line 30:     endif
line 31:     if i < 0
line 32:       " not found, nothing to do
line 33:       return
<SNR>15_Highlight_Matching_Pair returning #0

continuing in CursorMovedI Autocommands for "*"

Executing TextChangedI Autocommands for "*"
autocommand <Lua 92: ~/.local/share/nvim/site/pack/packer/start/nvim-cmp/lua/cmp/utils/autocmd.lua:22>

Executing: 
Executing TextChangedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>15_Highlight_Matching_Pair()

line 1:   " Remove any previous match.
line 2:   call s:Remove_Matches()
calling <SNR>15_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     silent! call matchdelete(3)
line 3:     let w:paren_hl_on = 0
line 4:   endif
<SNR>15_Remove_Matches returning #0

continuing in <SNR>15_Highlight_Matching_Pair

line 3: 
line 4:   " Avoid that we remove the popup menu.
line 5:   " Return when there are no colors (looks like the cursor jumps).
line 6:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 7:     return
line 8:   endif
line 9: 
line 10:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 11:   let c_lnum = line('.')
line 12:   let c_col = col('.')
line 13:   let before = 0
line 14: 
line 15:   let text = getline(c_lnum)
line 16:   let matches = matchlist(text, '\(.\)\=\%'.c_col.'c\(.\=\)')
line 17:   if empty(matches)
line 18:     let [c_before, c] = ['', '']
line 19:   else
line 20:     let [c_before, c] = matches[1:2]
line 21:   endif
line 22:   let plist = split(&matchpairs, '.\zs[:,]')
line 23:   let i = index(plist, c)
line 24:   if i < 0
line 25:     " not found, in Insert mode try character before the cursor
line 26:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 27:       let before = strlen(c_before)
line 28:       let c = c_before
line 29:       let i = index(plist, c)
line 30:     endif
line 31:     if i < 0
line 32:       " not found, nothing to do
line 33:       return
<SNR>15_Highlight_Matching_Pair returning #0

continuing in TextChangedI Autocommands for "*"

Executing TextChangedI Autocommands for "*"
autocommand call s:on_text_changed()

Executing: call s:on_text_changed()
calling <SNR>38_on_text_changed()

line 1:   let l:session = vsnip#get_session()
calling vsnip#get_session()

line 1:   return s:session
vsnip#get_session returning v:null

continuing in <SNR>38_on_text_changed

line 2:   if !empty(l:session)
line 3:     call l:session.on_text_changed()
line 4:   endif
<SNR>38_on_text_changed returning #0

continuing in TextChangedI Autocommands for "*"
-- INSERT --
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/lua/telescope/previewers/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/lua/telescope/previewers/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/lua/telescope/previewers/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/lua/telescope/previewers/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/lua/telescope/previewers/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/lua/telescope/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/lua/telescope/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
Executing: do User TelescopePreviewerLoaded-- INSERT --
Searching for "parser/rust.*" in runtime path
Searching for "/home/raothorn/.config/nvim/parser/rust.*"
Searching for "/etc/xdg/nvim/parser/rust.*"
Searching for "/home/raothorn/.local/share/nvim/site/parser/rust.*"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/Comment.nvim/parser/rust.*"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/auto-pairs/parser/rust.*"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/autoclose.nvim/parser/rust.*"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-buffer/parser/rust.*"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lsp/parser/rust.*"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lsp-signature-help/parser/rust.*"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lua/parser/rust.*"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-path/parser/rust.*"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-vsnip/parser/rust.*"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/everforest/parser/rust.*"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/formatter.nvim/parser/rust.*"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/friendly-snippets/parser/rust.*"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/mason-lspconfig.nvim/parser/rust.*"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/mason.nvim/parser/rust.*"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-cmp/parser/rust.*"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-lspconfig/parser/rust.*"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-treesitter/parser/rust.*"
Searching for "queries/rust/highlights.scm" in runtime path
Searching for "/home/raothorn/.config/nvim/queries/rust/highlights.scm"
Searching for "/etc/xdg/nvim/queries/rust/highlights.scm"
Searching for "/home/raothorn/.local/share/nvim/site/queries/rust/highlights.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/Comment.nvim/queries/rust/highlights.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/auto-pairs/queries/rust/highlights.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/autoclose.nvim/queries/rust/highlights.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-buffer/queries/rust/highlights.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lsp/queries/rust/highlights.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lsp-signature-help/queries/rust/highlights.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lua/queries/rust/highlights.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-path/queries/rust/highlights.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-vsnip/queries/rust/highlights.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/everforest/queries/rust/highlights.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/formatter.nvim/queries/rust/highlights.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/friendly-snippets/queries/rust/highlights.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/mason-lspconfig.nvim/queries/rust/highlights.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/mason.nvim/queries/rust/highlights.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-cmp/queries/rust/highlights.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-lspconfig/queries/rust/highlights.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-treesitter/queries/rust/highlights.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/packer.nvim/queries/rust/highlights.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/plenary.nvim/queries/rust/highlights.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/ranger.nvim/queries/rust/highlights.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/rust-tools.nvim/queries/rust/highlights.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/queries/rust/highlights.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/toggleterm.nvim/queries/rust/highlights.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/vim-floaterm/queries/rust/highlights.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/vim-surround/queries/rust/highlights.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/vim-vsnip/queries/rust/highlights.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/workspaces.nvim/queries/rust/highlights.scm"
Searching for "/usr/share/nvim/runtime/queries/rust/highlights.scm"
Searching for "/usr/share/nvim/runtime/pack/dist/opt/matchit/queries/rust/highlights.scm"
Searching for "/usr/lib/nvim/queries/rust/highlights.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-buffer/after/queries/rust/highlights.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lsp/after/queries/rust/highlights.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lsp-signature-help/after/queries/rust/highlights.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lua/after/queries/rust/highlights.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-path/after/queries/rust/highlights.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-vsnip/after/queries/rust/highlights.scm"
Searching for "/usr/share/vim/vimfiles/queries/rust/highlights.scm"
Searching for "parser/rust.*" in runtime path
Searching for "/home/raothorn/.config/nvim/parser/rust.*"
Searching for "/etc/xdg/nvim/parser/rust.*"
Searching for "/home/raothorn/.local/share/nvim/site/parser/rust.*"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/Comment.nvim/parser/rust.*"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/auto-pairs/parser/rust.*"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/autoclose.nvim/parser/rust.*"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-buffer/parser/rust.*"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lsp/parser/rust.*"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lsp-signature-help/parser/rust.*"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lua/parser/rust.*"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-path/parser/rust.*"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-vsnip/parser/rust.*"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/everforest/parser/rust.*"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/formatter.nvim/parser/rust.*"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/friendly-snippets/parser/rust.*"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/mason-lspconfig.nvim/parser/rust.*"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/mason.nvim/parser/rust.*"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-cmp/parser/rust.*"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-lspconfig/parser/rust.*"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-treesitter/parser/rust.*"
Searching for "queries/rust/injections.scm" in runtime path
Searching for "/home/raothorn/.config/nvim/queries/rust/injections.scm"
Searching for "/etc/xdg/nvim/queries/rust/injections.scm"
Searching for "/home/raothorn/.local/share/nvim/site/queries/rust/injections.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/Comment.nvim/queries/rust/injections.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/auto-pairs/queries/rust/injections.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/autoclose.nvim/queries/rust/injections.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-buffer/queries/rust/injections.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lsp/queries/rust/injections.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lsp-signature-help/queries/rust/injections.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lua/queries/rust/injections.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-path/queries/rust/injections.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-vsnip/queries/rust/injections.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/everforest/queries/rust/injections.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/formatter.nvim/queries/rust/injections.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/friendly-snippets/queries/rust/injections.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/mason-lspconfig.nvim/queries/rust/injections.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/mason.nvim/queries/rust/injections.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-cmp/queries/rust/injections.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-lspconfig/queries/rust/injections.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-treesitter/queries/rust/injections.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/packer.nvim/queries/rust/injections.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/plenary.nvim/queries/rust/injections.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/ranger.nvim/queries/rust/injections.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/rust-tools.nvim/queries/rust/injections.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/queries/rust/injections.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/toggleterm.nvim/queries/rust/injections.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/vim-floaterm/queries/rust/injections.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/vim-surround/queries/rust/injections.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/vim-vsnip/queries/rust/injections.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/workspaces.nvim/queries/rust/injections.scm"
Searching for "/usr/share/nvim/runtime/queries/rust/injections.scm"
Searching for "/usr/share/nvim/runtime/pack/dist/opt/matchit/queries/rust/injections.scm"
Searching for "/usr/lib/nvim/queries/rust/injections.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-buffer/after/queries/rust/injections.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lsp/after/queries/rust/injections.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lsp-signature-help/after/queries/rust/injections.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lua/after/queries/rust/injections.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-path/after/queries/rust/injections.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-vsnip/after/queries/rust/injections.scm"
Searching for "/usr/share/vim/vimfiles/queries/rust/injections.scm"
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/usr/share/nvim/runtime/lua/vim/treesitter/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
Executing Syntax Autocommands for "*"
autocommand call s:SynSet()

Executing: call s:SynSet()
calling <SNR>10_SynSet()

line 1:   " clear syntax for :set syntax=OFF  and any syntax name that doesn't exist
line 2:   syn clear
line 3:   if exists("b:current_syntax")
line 4:     unlet b:current_syntax
line 5:   endif
line 6: 
line 7:   0verbose let s = expand("<amatch>")
line 8:   if s == "ON"
line 9:     " :set syntax=ON
line 10:     if &filetype == ""
line 11:       echohl ErrorMsg
line 12:       echo "filetype unknown"
line 13:       echohl None
line 14:     endif
line 15:     let s = &filetype
line 16:   elseif s == "OFF"
line 17:     let s = ""
line 18:   endif
line 19: 
line 20:   if s != ""
line 21:     " Load the syntax file(s).  When there are several, separated by dots,
line 22:     " load each in sequence.  Skip empty entries.
line 23:     for name in split(s, '\.')
line 24:       if !empty(name)
line 25:         exe "runtime! syntax/" . name . ".vim syntax/" . name . "/*.vim"
line 26:         exe "runtime! syntax/" . name . ".lua syntax/" . name . "/*.lua"
line 27:       endif
line 28:     endfor
line 29:   endif
<SNR>10_SynSet returning #0

continuing in Syntax Autocommands for "*"

chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/usr/share/nvim/runtime/lua/vim/treesitter/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
Searching for "queries/rust/highlights.scm" in runtime path
Searching for "/home/raothorn/.config/nvim/queries/rust/highlights.scm"
Searching for "/etc/xdg/nvim/queries/rust/highlights.scm"
Searching for "/home/raothorn/.local/share/nvim/site/queries/rust/highlights.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/Comment.nvim/queries/rust/highlights.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/auto-pairs/queries/rust/highlights.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/autoclose.nvim/queries/rust/highlights.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-buffer/queries/rust/highlights.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lsp/queries/rust/highlights.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lsp-signature-help/queries/rust/highlights.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lua/queries/rust/highlights.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-path/queries/rust/highlights.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-vsnip/queries/rust/highlights.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/everforest/queries/rust/highlights.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/formatter.nvim/queries/rust/highlights.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/friendly-snippets/queries/rust/highlights.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/mason-lspconfig.nvim/queries/rust/highlights.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/mason.nvim/queries/rust/highlights.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-cmp/queries/rust/highlights.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-lspconfig/queries/rust/highlights.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-treesitter/queries/rust/highlights.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/packer.nvim/queries/rust/highlights.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/plenary.nvim/queries/rust/highlights.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/ranger.nvim/queries/rust/highlights.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/rust-tools.nvim/queries/rust/highlights.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/queries/rust/highlights.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/toggleterm.nvim/queries/rust/highlights.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/vim-floaterm/queries/rust/highlights.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/vim-surround/queries/rust/highlights.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/vim-vsnip/queries/rust/highlights.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/workspaces.nvim/queries/rust/highlights.scm"
Searching for "/usr/share/nvim/runtime/queries/rust/highlights.scm"
Searching for "/usr/share/nvim/runtime/pack/dist/opt/matchit/queries/rust/highlights.scm"
Searching for "/usr/lib/nvim/queries/rust/highlights.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-buffer/after/queries/rust/highlights.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lsp/after/queries/rust/highlights.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lsp-signature-help/after/queries/rust/highlights.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lua/after/queries/rust/highlights.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-path/after/queries/rust/highlights.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-vsnip/after/queries/rust/highlights.scm"
Searching for "/usr/share/vim/vimfiles/queries/rust/highlights.scm"
Executing CursorMovedI Autocommands for "*"
autocommand <Lua 95: ~/.local/share/nvim/site/pack/packer/start/nvim-cmp/lua/cmp/utils/autocmd.lua:22>

Executing: 
Executing CursorMovedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>15_Highlight_Matching_Pair()

line 1:   " Remove any previous match.
line 2:   call s:Remove_Matches()
calling <SNR>15_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     silent! call matchdelete(3)
line 3:     let w:paren_hl_on = 0
line 4:   endif
<SNR>15_Remove_Matches returning #0

continuing in <SNR>15_Highlight_Matching_Pair

line 3: 
line 4:   " Avoid that we remove the popup menu.
line 5:   " Return when there are no colors (looks like the cursor jumps).
line 6:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 7:     return
line 8:   endif
line 9: 
line 10:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 11:   let c_lnum = line('.')
line 12:   let c_col = col('.')
line 13:   let before = 0
line 14: 
line 15:   let text = getline(c_lnum)
line 16:   let matches = matchlist(text, '\(.\)\=\%'.c_col.'c\(.\=\)')
line 17:   if empty(matches)
line 18:     let [c_before, c] = ['', '']
line 19:   else
line 20:     let [c_before, c] = matches[1:2]
line 21:   endif
line 22:   let plist = split(&matchpairs, '.\zs[:,]')
line 23:   let i = index(plist, c)
line 24:   if i < 0
line 25:     " not found, in Insert mode try character before the cursor
line 26:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 27:       let before = strlen(c_before)
line 28:       let c = c_before
line 29:       let i = index(plist, c)
line 30:     endif
line 31:     if i < 0
line 32:       " not found, nothing to do
line 33:       return
<SNR>15_Highlight_Matching_Pair returning #0

continuing in CursorMovedI Autocommands for "*"

Executing TextChangedI Autocommands for "*"
autocommand <Lua 92: ~/.local/share/nvim/site/pack/packer/start/nvim-cmp/lua/cmp/utils/autocmd.lua:22>

Executing: 
Executing TextChangedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>15_Highlight_Matching_Pair()

line 1:   " Remove any previous match.
line 2:   call s:Remove_Matches()
calling <SNR>15_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     silent! call matchdelete(3)
line 3:     let w:paren_hl_on = 0
line 4:   endif
<SNR>15_Remove_Matches returning #0

continuing in <SNR>15_Highlight_Matching_Pair

line 3: 
line 4:   " Avoid that we remove the popup menu.
line 5:   " Return when there are no colors (looks like the cursor jumps).
line 6:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 7:     return
line 8:   endif
line 9: 
line 10:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 11:   let c_lnum = line('.')
line 12:   let c_col = col('.')
line 13:   let before = 0
line 14: 
line 15:   let text = getline(c_lnum)
line 16:   let matches = matchlist(text, '\(.\)\=\%'.c_col.'c\(.\=\)')
line 17:   if empty(matches)
line 18:     let [c_before, c] = ['', '']
line 19:   else
line 20:     let [c_before, c] = matches[1:2]
line 21:   endif
line 22:   let plist = split(&matchpairs, '.\zs[:,]')
line 23:   let i = index(plist, c)
line 24:   if i < 0
line 25:     " not found, in Insert mode try character before the cursor
line 26:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 27:       let before = strlen(c_before)
line 28:       let c = c_before
line 29:       let i = index(plist, c)
line 30:     endif
line 31:     if i < 0
line 32:       " not found, nothing to do
line 33:       return
<SNR>15_Highlight_Matching_Pair returning #0

continuing in TextChangedI Autocommands for "*"

Executing TextChangedI Autocommands for "*"
autocommand call s:on_text_changed()

Executing: call s:on_text_changed()
calling <SNR>38_on_text_changed()

line 1:   let l:session = vsnip#get_session()
calling vsnip#get_session()

line 1:   return s:session
vsnip#get_session returning v:null

continuing in <SNR>38_on_text_changed

line 2:   if !empty(l:session)
line 3:     call l:session.on_text_changed()
line 4:   endif
<SNR>38_on_text_changed returning #0

continuing in TextChangedI Autocommands for "*"
-- INSERT --
Executing WinClosed Autocommands for "<buffer=10>"
autocommand :lua require('plenary.window').try_close(1009, true)

Executing: :lua require('plenary.window').try_close(1009, true)
auto-removing autocommand: BufDelete <buffer=10>
Executing BufLeave Autocommands for "*"
autocommand call s:Remove_Matches()

Executing: call s:Remove_Matches()
calling <SNR>15_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     silent! call matchdelete(3)
line 3:     let w:paren_hl_on = 0
line 4:   endif
<SNR>15_Remove_Matches returning #0

continuing in BufLeave Autocommands for "*"

Executing WinLeave Autocommands for "*"
autocommand call s:Remove_Matches()

Executing: call s:Remove_Matches()
calling <SNR>15_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     silent! call matchdelete(3)
line 3:     let w:paren_hl_on = 0
line 4:   endif
<SNR>15_Remove_Matches returning #0

continuing in WinLeave Autocommands for "*"

Executing WinClosed Autocommands for "<buffer=14>"
autocommand :lua require('plenary.window').try_close(1013, true)

Executing: :lua require('plenary.window').try_close(1013, true)
auto-removing autocommand: BufDelete <buffer=14>
auto-removing autocommand: VimResized <buffer=14>
Executing WinEnter Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>15_Highlight_Matching_Pair()

line 1:   " Remove any previous match.
line 2:   call s:Remove_Matches()
calling <SNR>15_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     silent! call matchdelete(3)
line 3:     let w:paren_hl_on = 0
line 4:   endif
<SNR>15_Remove_Matches returning #0

continuing in <SNR>15_Highlight_Matching_Pair

line 3: 
line 4:   " Avoid that we remove the popup menu.
line 5:   " Return when there are no colors (looks like the cursor jumps).
line 6:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 7:     return
line 8:   endif
line 9: 
line 10:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 11:   let c_lnum = line('.')
line 12:   let c_col = col('.')
line 13:   let before = 0
line 14: 
line 15:   let text = getline(c_lnum)
line 16:   let matches = matchlist(text, '\(.\)\=\%'.c_col.'c\(.\=\)')
line 17:   if empty(matches)
line 18:     let [c_before, c] = ['', '']
line 19:   else
line 20:     let [c_before, c] = matches[1:2]
line 21:   endif
line 22:   let plist = split(&matchpairs, '.\zs[:,]')
line 23:   let i = index(plist, c)
line 24:   if i < 0
line 25:     " not found, in Insert mode try character before the cursor
line 26:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 27:       let before = strlen(c_before)
line 28:       let c = c_before
line 29:       let i = index(plist, c)
line 30:     endif
line 31:     if i < 0
line 32:       " not found, nothing to do
line 33:       return
<SNR>15_Highlight_Matching_Pair returning #0

continuing in WinEnter Autocommands for "*"

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>15_Highlight_Matching_Pair()

line 1:   " Remove any previous match.
line 2:   call s:Remove_Matches()
calling <SNR>15_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     silent! call matchdelete(3)
line 3:     let w:paren_hl_on = 0
line 4:   endif
<SNR>15_Remove_Matches returning #0

continuing in <SNR>15_Highlight_Matching_Pair

line 3: 
line 4:   " Avoid that we remove the popup menu.
line 5:   " Return when there are no colors (looks like the cursor jumps).
line 6:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 7:     return
line 8:   endif
line 9: 
line 10:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 11:   let c_lnum = line('.')
line 12:   let c_col = col('.')
line 13:   let before = 0
line 14: 
line 15:   let text = getline(c_lnum)
line 16:   let matches = matchlist(text, '\(.\)\=\%'.c_col.'c\(.\=\)')
line 17:   if empty(matches)
line 18:     let [c_before, c] = ['', '']
line 19:   else
line 20:     let [c_before, c] = matches[1:2]
line 21:   endif
line 22:   let plist = split(&matchpairs, '.\zs[:,]')
line 23:   let i = index(plist, c)
line 24:   if i < 0
line 25:     " not found, in Insert mode try character before the cursor
line 26:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 27:       let before = strlen(c_before)
line 28:       let c = c_before
line 29:       let i = index(plist, c)
line 30:     endif
line 31:     if i < 0
line 32:       " not found, nothing to do
line 33:       return
<SNR>15_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing BufEnter Autocommands for "*"
autocommand :call AutoPairsTryInit()

Executing: :call AutoPairsTryInit()
calling AutoPairsTryInit()

line 1:   if exists('b:autopairs_loaded')
line 2:     return
AutoPairsTryInit returning #0

continuing in BufEnter Autocommands for "*"

Executing: edit src/main.rs
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(src/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods/src/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
Executing BufWipeout Autocommands for "<buffer=1>"
autocommand <Lua 115: /usr/share/nvim/runtime/lua/vim/diagnostic.lua:58>

Executing: 
auto-removing autocommand: BufWipeout <buffer=1>
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(vim/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(src/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(vim/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(vim/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
Reading ShaDa file "/home/raothorn/.local/state/nvim/shada/main.shada" marks
Executing BufReadPost Autocommands for "*"
autocommand set foldmethod=expr

Executing: set foldmethod=expr
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(vim/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
autocommand set foldexpr=nvim_treesitter#foldexpr()

Executing: set foldexpr=nvim_treesitter#foldexpr()
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(vim/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
Executing BufReadPost Autocommands for "*"
autocommand <Lua 100: /usr/share/nvim/runtime/filetype.lua:10>

chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/usr/share/nvim/runtime/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
Executing FileType Autocommands for "*"
autocommand call s:LoadFTPlugin()

Executing: call s:LoadFTPlugin()
calling <SNR>1_LoadFTPlugin()

line 1:     if exists("b:undo_ftplugin")
line 2:       exe b:undo_ftplugin
line 3:       unlet! b:undo_ftplugin b:did_ftplugin
line 4:     endif
line 5: 
line 6:     let s = expand("<amatch>")
line 7:     if s != ""
line 8:       if &cpo =~# "S" && exists("b:did_ftplugin")
line 9: ^I" In compatible mode options are reset to the global values, need to
line 10: ^I" set the local values also when a plugin was already used.
line 11: ^Iunlet b:did_ftplugin
line 12:       endif
line 13: 
line 14:       " When there is a dot it is used to separate filetype names.  Thus for
line 15:       " "aaa.bbb" load "aaa" and then "bbb".
line 16:       for name in split(s, '\.')
line 17:         " Load Lua ftplugins after Vim ftplugins _per directory_
line 18:         " TODO(clason): use nvim__get_runtime when supports globs and modeline
line 19:         exe printf('runtime! ftplugin/%s.vim ftplugin/%s.lua', name, name)
line 19: runtime! ftplugin/rust.vim ftplugin/rust.lua
Searching for "ftplugin/rust.vim ftplugin/rust.lua" in runtime path
Searching for "/home/raothorn/.config/nvim/ftplugin/rust.vim"
Searching for "/home/raothorn/.config/nvim/ftplugin/rust.lua"
Searching for "/etc/xdg/nvim/ftplugin/rust.vim"
Searching for "/etc/xdg/nvim/ftplugin/rust.lua"
Searching for "/home/raothorn/.local/share/nvim/site/ftplugin/rust.vim"
Searching for "/home/raothorn/.local/share/nvim/site/ftplugin/rust.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/Comment.nvim/ftplugin/rust.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/Comment.nvim/ftplugin/rust.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/auto-pairs/ftplugin/rust.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/auto-pairs/ftplugin/rust.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/autoclose.nvim/ftplugin/rust.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/autoclose.nvim/ftplugin/rust.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-buffer/ftplugin/rust.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-buffer/ftplugin/rust.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lsp/ftplugin/rust.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lsp/ftplugin/rust.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lsp-signature-help/ftplugin/rust.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lsp-signature-help/ftplugin/rust.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lua/ftplugin/rust.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lua/ftplugin/rust.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-path/ftplugin/rust.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-path/ftplugin/rust.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-vsnip/ftplugin/rust.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-vsnip/ftplugin/rust.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/everforest/ftplugin/rust.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/everforest/ftplugin/rust.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/formatter.nvim/ftplugin/rust.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/formatter.nvim/ftplugin/rust.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/friendly-snippets/ftplugin/rust.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/friendly-snippets/ftplugin/rust.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/mason-lspconfig.nvim/ftplugin/rust.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/mason-lspconfig.nvim/ftplugin/rust.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/mason.nvim/ftplugin/rust.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/mason.nvim/ftplugin/rust.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-cmp/ftplugin/rust.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-cmp/ftplugin/rust.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-lspconfig/ftplugin/rust.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-lspconfig/ftplugin/rust.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-treesitter/ftplugin/rust.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-treesitter/ftplugin/rust.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/packer.nvim/ftplugin/rust.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/packer.nvim/ftplugin/rust.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/plenary.nvim/ftplugin/rust.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/plenary.nvim/ftplugin/rust.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/ranger.nvim/ftplugin/rust.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/ranger.nvim/ftplugin/rust.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/rust-tools.nvim/ftplugin/rust.vim"
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/rust-tools.nvim/ftplugin/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
line 19: sourcing "/home/raothorn/.local/share/nvim/site/pack/packer/start/rust-tools.nvim/ftplugin/rust.vim"
line 1: command RustStartStandaloneServerForBuffer :lua require('rust-tools.standalone').start_standalone_client()
line 2: 
line 3: " Copied from built-in compiler/{rustc,cargo}.vim
line 4: setlocal errorformat=%f:%l:%c:\ %t%*[^:]:\ %m,%f:%l:%c:\ %*\\d:%*\\d\ %t%*[^:]:\ %m,%-G%f:%l\ %s,%-G%*[\ ]^,%-G%*[\ ]^%*[~],%-G%*[\ ]...
line 11: 
line 12: " New errorformat (after nightly 2016/08/10)
line 13: setlocal errorformat+=%-G,%-Gerror:\ aborting\ %.%#,%-Gerror:\ Could\ not\ compile\ %.%#,%Eerror:\ %m,%Eerror[E%n]:\ %m,%Wwarning:\ %m,%Inote:\ %m,%C\ %#-->\ %f:%l:%c
line 22: 
line 23: setlocal errorformat+=%-G%\\s%#Downloading%.%#,%-G%\\s%#Compiling%.%#,%-G%\\s%#Finished%.%#,%-G%\\s%#error:\ Could\ not\ compile\ %.%#,%-G%\\s%#To\ learn\ more\\,%.%#
finished sourcing /home/raothorn/.local/share/nvim/site/pack/packer/start/rust-tools.nvim/ftplugin/rust.vim
continuing in <SNR>1_LoadFTPlugin
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/rust-tools.nvim/ftplugin/rust.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/ftplugin/rust.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/ftplugin/rust.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/toggleterm.nvim/ftplugin/rust.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/toggleterm.nvim/ftplugin/rust.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/vim-floaterm/ftplugin/rust.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/vim-floaterm/ftplugin/rust.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/vim-surround/ftplugin/rust.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/vim-surround/ftplugin/rust.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/vim-vsnip/ftplugin/rust.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/vim-vsnip/ftplugin/rust.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/workspaces.nvim/ftplugin/rust.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/workspaces.nvim/ftplugin/rust.lua"
Searching for "/usr/share/nvim/runtime/ftplugin/rust.vim"
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/usr/share/nvim/runtime/ftplugin/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
line 19: sourcing "/usr/share/nvim/runtime/ftplugin/rust.vim"
line 1: " Language:     Rust
line 2: " Description:  Vim ftplugin for Rust
line 3: " Maintainer:   Chris Morgan <me@chrismorgan.info>
line 4: " Maintainer:   Kevin Ballard <kevin@sb.org>
line 5: " Last Change:  June 08, 2016
line 6: " For bugs, patches and license go to https://github.com/rust-lang/rust.vim 
line 7: 
line 8: if exists("b:did_ftplugin")
line 9: ^Ifinish
line 10: endif
line 11: let b:did_ftplugin = 1
line 12: 
line 13: let s:save_cpo = &cpo
line 14: set cpo&vim
line 15: 
line 16: augroup rust.vim
line 17: autocmd!
line 18: 
line 19: " Variables {{{1
line 20: 
line 21: " The rust source code at present seems to typically omit a leader on /*!
line 22: " comments, so we'll use that as our default, but make it easy to switch.
line 23: " This does not affect indentation at all (I tested it with and without
line 24: " leader), merely whether a leader is inserted by default or not.
line 25: if exists("g:rust_bang_comment_leader") && g:rust_bang_comment_leader != 0
line 26: ^I" Why is the `,s0:/*,mb:\ ,ex:*/` there, you ask? I don't understand why,
line 27: ^I" but without it, */ gets indented one space even if there were no
line 28: ^I" leaders. I'm fairly sure that's a Vim bug.
line 29: ^Isetlocal comments=s1:/*,mb:*,ex:*/,s0:/*,mb:\ ,ex:*/,:///,://!,://
line 30: else
line 31: ^Isetlocal comments=s0:/*!,m:\ ,ex:*/,s1:/*,mb:*,ex:*/,:///,://!,://
line 32: endif
line 33: setlocal commentstring=//%s
line 34: setlocal formatoptions-=t formatoptions+=croqnl
line 35: " j was only added in 7.3.541, so stop complaints about its nonexistence
line 36: silent! setlocal formatoptions+=j
line 37: 
line 38: " smartindent will be overridden by indentexpr if filetype indent is on, but
line 39: " otherwise it's better than nothing.
line 40: setlocal smartindent nocindent
line 41: 
line 42: if !exists("g:rust_recommended_style") || g:rust_recommended_style != 0
line 43: ^Isetlocal tabstop=4 shiftwidth=4 softtabstop=4 expandtab
line 44: ^Isetlocal textwidth=99
line 45: endif
line 46: 
line 47: " This includeexpr isn't perfect, but it's a good start
line 48: setlocal includeexpr=substitute(v:fname,'::','/','g')
line 49: 
line 50: setlocal suffixesadd=.rs
line 51: 
line 52: if exists("g:ftplugin_rust_source_path")
line 53:     let &l:path=g:ftplugin_rust_source_path . ',' . &l:path
line 54: endif
line 55: 
line 56: if exists("g:loaded_delimitMate")
line 57: ^Iif exists("b:delimitMate_excluded_regions")
line 58: ^I^Ilet b:rust_original_delimitMate_excluded_regions = b:delimitMate_excluded_regions
line 59: ^Iendif
line 60: 
line 61: ^Ilet s:delimitMate_extra_excluded_regions = ',rustLifetimeCandidate,rustGenericLifetimeCandidate'
line 62: 
line 63: ^I" For this buffer, when delimitMate issues the `User delimitMate_map`
line 64: ^I" event in the autocommand system, add the above-defined extra excluded
line 65: ^I" regions to delimitMate's state, if they have not already been added.
line 66: ^Iautocmd User <buffer> if expand('<afile>') ==# 'delimitMate_map' && match(     delimitMate#Get("excluded_regions"),     s:delimitMate_extra_excluded_regions) == -1|  let b:delimitMate_excluded_regions =       delimitMate#Get("excluded_regions")       . s:delimitMate_extra_excluded_regions|endif
line 74: 
line 75: ^I" For this buffer, when delimitMate issues the `User delimitMate_unmap`
line 76: ^I" event in the autocommand system, delete the above-defined extra excluded
line 77: ^I" regions from delimitMate's state (the deletion being idempotent and
line 78: ^I" having no effect if the extra excluded regions are not present in the
line 79: ^I" targeted part of delimitMate's state).
line 80: ^Iautocmd User <buffer> if expand('<afile>') ==# 'delimitMate_unmap'|  let b:delimitMate_excluded_regions = substitute(       delimitMate#Get("excluded_regions"),       '\C\V' . s:delimitMate_extra_excluded_regions,       '', 'g')|endif
line 87: endif
line 88: 
line 89: if has("folding") && exists('g:rust_fold') && g:rust_fold != 0
line 90: ^Ilet b:rust_set_foldmethod=1
line 91: ^Isetlocal foldmethod=syntax
line 92: ^Iif g:rust_fold == 2
line 93: ^I^Isetlocal foldlevel<
line 94: ^Ielse
line 95: ^I^Isetlocal foldlevel=99
line 96: ^Iendif
line 97: endif
line 98: 
line 99: if has('conceal') && exists('g:rust_conceal') && g:rust_conceal != 0
line 100: ^Ilet b:rust_set_conceallevel=1
line 101: ^Isetlocal conceallevel=2
line 102: endif
line 103: 
line 104: " Motion Commands {{{1
line 105: 
line 106: " Bind motion commands to support hanging indents
line 107: nnoremap <silent> <buffer> [[ :call rust#Jump('n', 'Back')<CR>
line 108: nnoremap <silent> <buffer> ]] :call rust#Jump('n', 'Forward')<CR>
line 109: xnoremap <silent> <buffer> [[ :call rust#Jump('v', 'Back')<CR>
line 110: xnoremap <silent> <buffer> ]] :call rust#Jump('v', 'Forward')<CR>
line 111: onoremap <silent> <buffer> [[ :call rust#Jump('o', 'Back')<CR>
line 112: onoremap <silent> <buffer> ]] :call rust#Jump('o', 'Forward')<CR>
line 113: 
line 114: " Commands {{{1
line 115: 
line 116: " See |:RustRun| for docs
line 117: command! -nargs=* -complete=file -bang -buffer RustRun call rust#Run(<bang>0, <q-args>)
line 118: 
line 119: " See |:RustExpand| for docs
line 120: command! -nargs=* -complete=customlist,rust#CompleteExpand -bang -buffer RustExpand call rust#Expand(<bang>0, <q-args>)
line 121: 
line 122: " See |:RustEmitIr| for docs
line 123: command! -nargs=* -buffer RustEmitIr call rust#Emit("llvm-ir", <q-args>)
line 124: 
line 125: " See |:RustEmitAsm| for docs
line 126: command! -nargs=* -buffer RustEmitAsm call rust#Emit("asm", <q-args>)
line 127: 
line 128: " See |:RustPlay| for docs
line 129: command! -range=% RustPlay :call rust#Play(<count>, <line1>, <line2>, <f-args>)
line 130: 
line 131: " See |:RustFmt| for docs
line 132: command! -buffer RustFmt call rustfmt#Format()
line 133: 
line 134: " See |:RustFmtRange| for docs
line 135: command! -range -buffer RustFmtRange call rustfmt#FormatRange(<line1>, <line2>)
line 136: 
line 137: " Mappings {{{1
line 138: 
line 139: " Bind ⌘R in MacVim to :RustRun
line 140: nnoremap <silent> <buffer> <D-r> :RustRun<CR>
line 141: " Bind ⌘⇧R in MacVim to :RustRun! pre-filled with the last args
line 142: nnoremap <buffer> <D-R> :RustRun! <C-r>=join(b:rust_last_rustc_args)<CR><C-\>erust#AppendCmdLine(' -- ' . join(b:rust_last_args))<CR>
line 143: 
line 144: if !exists("b:rust_last_rustc_args") || !exists("b:rust_last_args")
line 145: ^Ilet b:rust_last_rustc_args = []
line 146: ^Ilet b:rust_last_args = []
line 147: endif
line 148: 
line 149: " Cleanup {{{1
line 150: 
line 151: let b:undo_ftplugin = " setlocal formatoptions< comments< commentstring< includeexpr< suffixesadd<|setlocal tabstop< shiftwidth< softtabstop< expandtab< textwidth<|if exists('b:rust_original_delimitMate_excluded_regions')|let b:delimitMate_excluded_regions = b:rust_original_delimitMate_excluded_regions|unlet b:rust_original_delimitMate_excluded_regions|else|unlet! b:delimitMate_excluded_regions|endif|if exists('b:rust_set_foldmethod')|setlocal foldmethod< foldlevel<|unlet b:rust_set_foldmethod|endif|if exists('b:rust_set_conceallevel')|setlocal conceallevel<|unlet b:rust_set_conceallevel|endif|unlet! b:rust_last_rustc_args b:rust_last_args|delcommand RustRun|delcommand RustExpand|delcommand RustEmitIr|delcommand RustEmitAsm|delcommand RustPlay|nunmap <buffer> <D-r>|nunmap <buffer> <D-R>|nunmap <buffer> [[|nunmap <buffer> ]]|xunmap <buffer> [[|xunmap <buffer> ]]|ounmap <buffer> [[|ounmap <buffer> ]]|set matchpairs-=<:>"
line 184: 
line 185: " }}}1
line 186: 
line 187: " Code formatting on save
line 188: if get(g:, "rustfmt_autosave", 0)
line 189: ^Iautocmd BufWritePre *.rs silent! call rustfmt#Format()
line 190: endif
line 191: 
line 192: augroup END
line 193: 
line 194: let &cpo = s:save_cpo
line 195: unlet s:save_cpo
line 196: 
line 197: " vim: set noet sw=8 ts=8:
finished sourcing /usr/share/nvim/runtime/ftplugin/rust.vim
continuing in <SNR>1_LoadFTPlugin
Searching for "/usr/share/nvim/runtime/ftplugin/rust.lua"
Searching for "/usr/share/nvim/runtime/pack/dist/opt/matchit/ftplugin/rust.vim"
Searching for "/usr/share/nvim/runtime/pack/dist/opt/matchit/ftplugin/rust.lua"
Searching for "/usr/lib/nvim/ftplugin/rust.vim"
Searching for "/usr/lib/nvim/ftplugin/rust.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-buffer/after/ftplugin/rust.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-buffer/after/ftplugin/rust.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lsp/after/ftplugin/rust.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lsp/after/ftplugin/rust.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lsp-signature-help/after/ftplugin/rust.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lsp-signature-help/after/ftplugin/rust.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lua/after/ftplugin/rust.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lua/after/ftplugin/rust.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-path/after/ftplugin/rust.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-path/after/ftplugin/rust.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-vsnip/after/ftplugin/rust.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-vsnip/after/ftplugin/rust.lua"
Searching for "/usr/share/vim/vimfiles/ftplugin/rust.vim"
Searching for "/usr/share/vim/vimfiles/ftplugin/rust.lua"
line 20:         exe printf('runtime! ftplugin/%s_*.vim ftplugin/%s_*.lua', name, name)
line 20: runtime! ftplugin/rust_*.vim ftplugin/rust_*.lua
Searching for "ftplugin/rust_*.vim ftplugin/rust_*.lua" in runtime path
Searching for "/home/raothorn/.config/nvim/ftplugin/rust_*.vim"
Searching for "/home/raothorn/.config/nvim/ftplugin/rust_*.lua"
Searching for "/etc/xdg/nvim/ftplugin/rust_*.vim"
Searching for "/etc/xdg/nvim/ftplugin/rust_*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/ftplugin/rust_*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/ftplugin/rust_*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/Comment.nvim/ftplugin/rust_*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/Comment.nvim/ftplugin/rust_*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/auto-pairs/ftplugin/rust_*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/auto-pairs/ftplugin/rust_*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/autoclose.nvim/ftplugin/rust_*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/autoclose.nvim/ftplugin/rust_*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-buffer/ftplugin/rust_*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-buffer/ftplugin/rust_*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lsp/ftplugin/rust_*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lsp/ftplugin/rust_*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lsp-signature-help/ftplugin/rust_*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lsp-signature-help/ftplugin/rust_*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lua/ftplugin/rust_*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lua/ftplugin/rust_*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-path/ftplugin/rust_*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-path/ftplugin/rust_*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-vsnip/ftplugin/rust_*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-vsnip/ftplugin/rust_*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/everforest/ftplugin/rust_*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/everforest/ftplugin/rust_*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/formatter.nvim/ftplugin/rust_*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/formatter.nvim/ftplugin/rust_*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/friendly-snippets/ftplugin/rust_*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/friendly-snippets/ftplugin/rust_*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/mason-lspconfig.nvim/ftplugin/rust_*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/mason-lspconfig.nvim/ftplugin/rust_*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/mason.nvim/ftplugin/rust_*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/mason.nvim/ftplugin/rust_*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-cmp/ftplugin/rust_*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-cmp/ftplugin/rust_*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-lspconfig/ftplugin/rust_*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-lspconfig/ftplugin/rust_*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-treesitter/ftplugin/rust_*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-treesitter/ftplugin/rust_*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/packer.nvim/ftplugin/rust_*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/packer.nvim/ftplugin/rust_*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/plenary.nvim/ftplugin/rust_*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/plenary.nvim/ftplugin/rust_*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/ranger.nvim/ftplugin/rust_*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/ranger.nvim/ftplugin/rust_*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/rust-tools.nvim/ftplugin/rust_*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/rust-tools.nvim/ftplugin/rust_*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/ftplugin/rust_*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/ftplugin/rust_*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/toggleterm.nvim/ftplugin/rust_*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/toggleterm.nvim/ftplugin/rust_*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/vim-floaterm/ftplugin/rust_*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/vim-floaterm/ftplugin/rust_*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/vim-surround/ftplugin/rust_*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/vim-surround/ftplugin/rust_*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/vim-vsnip/ftplugin/rust_*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/vim-vsnip/ftplugin/rust_*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/workspaces.nvim/ftplugin/rust_*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/workspaces.nvim/ftplugin/rust_*.lua"
Searching for "/usr/share/nvim/runtime/ftplugin/rust_*.vim"
Searching for "/usr/share/nvim/runtime/ftplugin/rust_*.lua"
Searching for "/usr/share/nvim/runtime/pack/dist/opt/matchit/ftplugin/rust_*.vim"
Searching for "/usr/share/nvim/runtime/pack/dist/opt/matchit/ftplugin/rust_*.lua"
Searching for "/usr/lib/nvim/ftplugin/rust_*.vim"
Searching for "/usr/lib/nvim/ftplugin/rust_*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-buffer/after/ftplugin/rust_*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-buffer/after/ftplugin/rust_*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lsp/after/ftplugin/rust_*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lsp/after/ftplugin/rust_*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lsp-signature-help/after/ftplugin/rust_*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lsp-signature-help/after/ftplugin/rust_*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lua/after/ftplugin/rust_*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lua/after/ftplugin/rust_*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-path/after/ftplugin/rust_*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-path/after/ftplugin/rust_*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-vsnip/after/ftplugin/rust_*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-vsnip/after/ftplugin/rust_*.lua"
Searching for "/usr/share/vim/vimfiles/ftplugin/rust_*.vim"
Searching for "/usr/share/vim/vimfiles/ftplugin/rust_*.lua"
not found in runtime path: "ftplugin/rust_*.vim ftplugin/rust_*.lua"
line 21:         exe printf('runtime! ftplugin/%s/*.vim ftplugin/%s/*.lua', name, name)
line 21: runtime! ftplugin/rust/*.vim ftplugin/rust/*.lua
Searching for "ftplugin/rust/*.vim ftplugin/rust/*.lua" in runtime path
Searching for "/home/raothorn/.config/nvim/ftplugin/rust/*.vim"
Searching for "/home/raothorn/.config/nvim/ftplugin/rust/*.lua"
Searching for "/etc/xdg/nvim/ftplugin/rust/*.vim"
Searching for "/etc/xdg/nvim/ftplugin/rust/*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/ftplugin/rust/*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/ftplugin/rust/*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/Comment.nvim/ftplugin/rust/*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/Comment.nvim/ftplugin/rust/*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/auto-pairs/ftplugin/rust/*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/auto-pairs/ftplugin/rust/*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/autoclose.nvim/ftplugin/rust/*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/autoclose.nvim/ftplugin/rust/*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-buffer/ftplugin/rust/*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-buffer/ftplugin/rust/*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lsp/ftplugin/rust/*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lsp/ftplugin/rust/*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lsp-signature-help/ftplugin/rust/*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lsp-signature-help/ftplugin/rust/*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lua/ftplugin/rust/*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lua/ftplugin/rust/*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-path/ftplugin/rust/*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-path/ftplugin/rust/*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-vsnip/ftplugin/rust/*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-vsnip/ftplugin/rust/*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/everforest/ftplugin/rust/*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/everforest/ftplugin/rust/*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/formatter.nvim/ftplugin/rust/*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/formatter.nvim/ftplugin/rust/*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/friendly-snippets/ftplugin/rust/*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/friendly-snippets/ftplugin/rust/*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/mason-lspconfig.nvim/ftplugin/rust/*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/mason-lspconfig.nvim/ftplugin/rust/*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/mason.nvim/ftplugin/rust/*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/mason.nvim/ftplugin/rust/*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-cmp/ftplugin/rust/*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-cmp/ftplugin/rust/*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-lspconfig/ftplugin/rust/*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-lspconfig/ftplugin/rust/*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-treesitter/ftplugin/rust/*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-treesitter/ftplugin/rust/*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/packer.nvim/ftplugin/rust/*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/packer.nvim/ftplugin/rust/*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/plenary.nvim/ftplugin/rust/*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/plenary.nvim/ftplugin/rust/*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/ranger.nvim/ftplugin/rust/*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/ranger.nvim/ftplugin/rust/*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/rust-tools.nvim/ftplugin/rust/*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/rust-tools.nvim/ftplugin/rust/*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/ftplugin/rust/*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/ftplugin/rust/*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/toggleterm.nvim/ftplugin/rust/*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/toggleterm.nvim/ftplugin/rust/*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/vim-floaterm/ftplugin/rust/*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/vim-floaterm/ftplugin/rust/*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/vim-surround/ftplugin/rust/*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/vim-surround/ftplugin/rust/*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/vim-vsnip/ftplugin/rust/*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/vim-vsnip/ftplugin/rust/*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/workspaces.nvim/ftplugin/rust/*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/workspaces.nvim/ftplugin/rust/*.lua"
Searching for "/usr/share/nvim/runtime/ftplugin/rust/*.vim"
Searching for "/usr/share/nvim/runtime/ftplugin/rust/*.lua"
Searching for "/usr/share/nvim/runtime/pack/dist/opt/matchit/ftplugin/rust/*.vim"
Searching for "/usr/share/nvim/runtime/pack/dist/opt/matchit/ftplugin/rust/*.lua"
Searching for "/usr/lib/nvim/ftplugin/rust/*.vim"
Searching for "/usr/lib/nvim/ftplugin/rust/*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-buffer/after/ftplugin/rust/*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-buffer/after/ftplugin/rust/*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lsp/after/ftplugin/rust/*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lsp/after/ftplugin/rust/*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lsp-signature-help/after/ftplugin/rust/*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lsp-signature-help/after/ftplugin/rust/*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lua/after/ftplugin/rust/*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lua/after/ftplugin/rust/*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-path/after/ftplugin/rust/*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-path/after/ftplugin/rust/*.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-vsnip/after/ftplugin/rust/*.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-vsnip/after/ftplugin/rust/*.lua"
Searching for "/usr/share/vim/vimfiles/ftplugin/rust/*.vim"
Searching for "/usr/share/vim/vimfiles/ftplugin/rust/*.lua"
not found in runtime path: "ftplugin/rust/*.vim ftplugin/rust/*.lua"
line 22:       endfor
line 16:       for name in split(s, '\.')
line 17:         " Load Lua ftplugins after Vim ftplugins _per directory_
line 18:         " TODO(clason): use nvim__get_runtime when supports globs and modeline
line 19:         exe printf('runtime! ftplugin/%s.vim ftplugin/%s.lua', name, name)
line 20:         exe printf('runtime! ftplugin/%s_*.vim ftplugin/%s_*.lua', name, name)
line 21:         exe printf('runtime! ftplugin/%s/*.vim ftplugin/%s/*.lua', name, name)
line 22:       endfor
line 23:     endif
<SNR>1_LoadFTPlugin returning #0

continuing in FileType Autocommands for "*"

Executing FileType Autocommands for "*"
autocommand call s:LoadIndent()

Executing: call s:LoadIndent()
calling <SNR>2_LoadIndent()

line 1:     if exists("b:undo_indent")
line 2:       exe b:undo_indent
line 3:       unlet! b:undo_indent b:did_indent
line 4:     endif
line 5:     let s = expand("<amatch>")
line 6:     if s != ""
line 7:       if exists("b:did_indent")
line 8: ^Iunlet b:did_indent
line 9:       endif
line 10: 
line 11:       " When there is a dot it is used to separate filetype names.  Thus for
line 12:       " "aaa.bbb" load "indent/aaa.vim" and then "indent/bbb.vim".
line 13:       for name in split(s, '\.')
line 14:         exe 'runtime! indent/' . name . '.vim'
line 14: runtime! indent/rust.vim
Searching for "indent/rust.vim" in runtime path
Searching for "/home/raothorn/.config/nvim/indent/rust.vim"
Searching for "/etc/xdg/nvim/indent/rust.vim"
Searching for "/home/raothorn/.local/share/nvim/site/indent/rust.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/Comment.nvim/indent/rust.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/auto-pairs/indent/rust.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/autoclose.nvim/indent/rust.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-buffer/indent/rust.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lsp/indent/rust.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lsp-signature-help/indent/rust.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lua/indent/rust.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-path/indent/rust.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-vsnip/indent/rust.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/everforest/indent/rust.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/formatter.nvim/indent/rust.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/friendly-snippets/indent/rust.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/mason-lspconfig.nvim/indent/rust.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/mason.nvim/indent/rust.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-cmp/indent/rust.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-lspconfig/indent/rust.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-treesitter/indent/rust.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/packer.nvim/indent/rust.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/plenary.nvim/indent/rust.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/ranger.nvim/indent/rust.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/rust-tools.nvim/indent/rust.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/indent/rust.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/toggleterm.nvim/indent/rust.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/vim-floaterm/indent/rust.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/vim-surround/indent/rust.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/vim-vsnip/indent/rust.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/workspaces.nvim/indent/rust.vim"
Searching for "/usr/share/nvim/runtime/indent/rust.vim"
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/usr/share/nvim/runtime/indent/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
line 14: sourcing "/usr/share/nvim/runtime/indent/rust.vim"
line 1: " Vim indent file
line 2: " Language:         Rust
line 3: " Author:           Chris Morgan <me@chrismorgan.info>
line 4: " Last Change:      2017 Jun 13
line 5: " For bugs, patches and license go to https://github.com/rust-lang/rust.vim
line 6: 
line 7: " Only load this indent file when no other was loaded.
line 8: if exists("b:did_indent")
line 9: ^Ifinish
line 10: endif
line 11: let b:did_indent = 1
line 12: 
line 13: setlocal cindent
line 14: setlocal cinoptions=L0,(0,Ws,J1,j1
line 15: setlocal cinkeys=0{,0},!^F,o,O,0[,0]
line 16: " Don't think cinwords will actually do anything at all... never mind
line 17: setlocal cinwords=for,if,else,while,loop,impl,mod,unsafe,trait,struct,enum,fn,extern
line 18: 
line 19: " Some preliminary settings
line 20: setlocal nolisp^I^I" Make sure lisp indenting doesn't supersede us
line 21: setlocal autoindent^I" indentexpr isn't much help otherwise
line 22: " Also do indentkeys, otherwise # gets shoved to column 0 :-/
line 23: setlocal indentkeys=0{,0},!^F,o,O,0[,0]
line 24: 
line 25: setlocal indentexpr=GetRustIndent(v:lnum)
line 26: 
line 27: " Only define the function once.
line 28: if exists("*GetRustIndent")
line 29: ^Ifinish
line 30: endif
line 31: 
line 32: let s:save_cpo = &cpo
line 33: set cpo&vim
line 34: 
line 35: " Come here when loading the script the first time.
line 36: 
line 37: function! s:get_line_trimmed(lnum)
line 67: 
line 68: function! s:is_string_comment(lnum, col)
line 81: 
line 82: function GetRustIndent(lnum)
line 211: 
line 212: let &cpo = s:save_cpo
line 213: unlet s:save_cpo
finished sourcing /usr/share/nvim/runtime/indent/rust.vim
continuing in <SNR>2_LoadIndent
Searching for "/usr/share/nvim/runtime/pack/dist/opt/matchit/indent/rust.vim"
Searching for "/usr/lib/nvim/indent/rust.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-buffer/after/indent/rust.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lsp/after/indent/rust.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lsp-signature-help/after/indent/rust.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lua/after/indent/rust.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-path/after/indent/rust.vim"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-vsnip/after/indent/rust.vim"
Searching for "/usr/share/vim/vimfiles/indent/rust.vim"
line 15:         exe 'runtime! indent/' . name . '.lua'
line 15: runtime! indent/rust.lua
Searching for "indent/rust.lua" in runtime path
Searching for "/home/raothorn/.config/nvim/indent/rust.lua"
Searching for "/etc/xdg/nvim/indent/rust.lua"
Searching for "/home/raothorn/.local/share/nvim/site/indent/rust.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/Comment.nvim/indent/rust.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/auto-pairs/indent/rust.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/autoclose.nvim/indent/rust.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-buffer/indent/rust.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lsp/indent/rust.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lsp-signature-help/indent/rust.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lua/indent/rust.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-path/indent/rust.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-vsnip/indent/rust.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/everforest/indent/rust.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/formatter.nvim/indent/rust.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/friendly-snippets/indent/rust.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/mason-lspconfig.nvim/indent/rust.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/mason.nvim/indent/rust.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-cmp/indent/rust.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-lspconfig/indent/rust.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-treesitter/indent/rust.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/packer.nvim/indent/rust.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/plenary.nvim/indent/rust.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/ranger.nvim/indent/rust.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/rust-tools.nvim/indent/rust.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/indent/rust.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/toggleterm.nvim/indent/rust.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/vim-floaterm/indent/rust.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/vim-surround/indent/rust.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/vim-vsnip/indent/rust.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/workspaces.nvim/indent/rust.lua"
Searching for "/usr/share/nvim/runtime/indent/rust.lua"
Searching for "/usr/share/nvim/runtime/pack/dist/opt/matchit/indent/rust.lua"
Searching for "/usr/lib/nvim/indent/rust.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-buffer/after/indent/rust.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lsp/after/indent/rust.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lsp-signature-help/after/indent/rust.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lua/after/indent/rust.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-path/after/indent/rust.lua"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-vsnip/after/indent/rust.lua"
Searching for "/usr/share/vim/vimfiles/indent/rust.lua"
not found in runtime path: "indent/rust.lua"
line 16:       endfor
line 13:       for name in split(s, '\.')
line 14:         exe 'runtime! indent/' . name . '.vim'
line 15:         exe 'runtime! indent/' . name . '.lua'
line 16:       endfor
line 17:     endif
<SNR>2_LoadIndent returning #0

continuing in FileType Autocommands for "*"

Executing FileType Autocommands for "*"
autocommand <Lua 56: ~/.local/share/nvim/site/pack/packer/start/nvim-treesitter/lua/nvim-treesitter/install.lua:558>

Searching for "parser/rust.so" in runtime path
Searching for "/home/raothorn/.config/nvim/parser/rust.so"
Searching for "/etc/xdg/nvim/parser/rust.so"
Searching for "/home/raothorn/.local/share/nvim/site/parser/rust.so"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/Comment.nvim/parser/rust.so"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/auto-pairs/parser/rust.so"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/autoclose.nvim/parser/rust.so"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-buffer/parser/rust.so"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lsp/parser/rust.so"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lsp-signature-help/parser/rust.so"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lua/parser/rust.so"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-path/parser/rust.so"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-vsnip/parser/rust.so"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/everforest/parser/rust.so"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/formatter.nvim/parser/rust.so"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/friendly-snippets/parser/rust.so"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/mason-lspconfig.nvim/parser/rust.so"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/mason.nvim/parser/rust.so"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-cmp/parser/rust.so"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-lspconfig/parser/rust.so"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-treesitter/parser/rust.so"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/packer.nvim/parser/rust.so"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/plenary.nvim/parser/rust.so"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/ranger.nvim/parser/rust.so"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/rust-tools.nvim/parser/rust.so"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/parser/rust.so"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/toggleterm.nvim/parser/rust.so"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/vim-floaterm/parser/rust.so"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/vim-surround/parser/rust.so"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/vim-vsnip/parser/rust.so"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/workspaces.nvim/parser/rust.so"
Searching for "/usr/share/nvim/runtime/parser/rust.so"
Searching for "/usr/share/nvim/runtime/pack/dist/opt/matchit/parser/rust.so"
Searching for "/usr/lib/nvim/parser/rust.so"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-buffer/after/parser/rust.so"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lsp/after/parser/rust.so"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lsp-signature-help/after/parser/rust.so"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lua/after/parser/rust.so"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-path/after/parser/rust.so"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-vsnip/after/parser/rust.so"
Searching for "/usr/share/vim/vimfiles/parser/rust.so"
Executing: 
Executing FileType Autocommands for "rust"
autocommand <Lua 80: ~/.local/share/nvim/site/pack/packer/start/nvim-lspconfig/lua/lspconfig/configs.lua:106>

chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-lspconfig/lua/lspconfig/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-lspconfig/lua/lspconfig/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
Executing: 
Executing FileType Autocommands for "*"
autocommand if !exists('b:ts_highlight') | 0verbose exe "set syntax=" . expand("<amatch>") | endif

Executing: if !exists('b:ts_highlight') | 0verbose exe "set syntax=" . expand("<amatch>") | endif
Executing:  0verbose exe "set syntax=" . expand("<amatch>") | endif
Executing:  endif
Executing FileType Autocommands for "*"
autocommand <Lua 127: ~/.local/share/nvim/site/pack/packer/start/nvim-treesitter/lua/nvim-treesitter/configs.lua:132>

Searching for "queries/rust/injections.scm" in runtime path
Searching for "/home/raothorn/.config/nvim/queries/rust/injections.scm"
Searching for "/etc/xdg/nvim/queries/rust/injections.scm"
Searching for "/home/raothorn/.local/share/nvim/site/queries/rust/injections.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/Comment.nvim/queries/rust/injections.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/auto-pairs/queries/rust/injections.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/autoclose.nvim/queries/rust/injections.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-buffer/queries/rust/injections.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lsp/queries/rust/injections.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lsp-signature-help/queries/rust/injections.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lua/queries/rust/injections.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-path/queries/rust/injections.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-vsnip/queries/rust/injections.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/everforest/queries/rust/injections.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/formatter.nvim/queries/rust/injections.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/friendly-snippets/queries/rust/injections.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/mason-lspconfig.nvim/queries/rust/injections.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/mason.nvim/queries/rust/injections.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-cmp/queries/rust/injections.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-lspconfig/queries/rust/injections.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-treesitter/queries/rust/injections.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/packer.nvim/queries/rust/injections.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/plenary.nvim/queries/rust/injections.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/ranger.nvim/queries/rust/injections.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/rust-tools.nvim/queries/rust/injections.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/queries/rust/injections.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/toggleterm.nvim/queries/rust/injections.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/vim-floaterm/queries/rust/injections.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/vim-surround/queries/rust/injections.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/vim-vsnip/queries/rust/injections.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/workspaces.nvim/queries/rust/injections.scm"
Searching for "/usr/share/nvim/runtime/queries/rust/injections.scm"
Searching for "/usr/share/nvim/runtime/pack/dist/opt/matchit/queries/rust/injections.scm"
Searching for "/usr/lib/nvim/queries/rust/injections.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-buffer/after/queries/rust/injections.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lsp/after/queries/rust/injections.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lsp-signature-help/after/queries/rust/injections.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lua/after/queries/rust/injections.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-path/after/queries/rust/injections.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-vsnip/after/queries/rust/injections.scm"
Searching for "/usr/share/vim/vimfiles/queries/rust/injections.scm"
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/usr/share/nvim/runtime/lua/vim/treesitter/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
Executing Syntax Autocommands for "*"
autocommand call s:SynSet()

Executing: call s:SynSet()
calling <SNR>10_SynSet()

line 1:   " clear syntax for :set syntax=OFF  and any syntax name that doesn't exist
line 2:   syn clear
line 3:   if exists("b:current_syntax")
line 4:     unlet b:current_syntax
line 5:   endif
line 6: 
line 7:   0verbose let s = expand("<amatch>")
line 8:   if s == "ON"
line 9:     " :set syntax=ON
line 10:     if &filetype == ""
line 11:       echohl ErrorMsg
line 12:       echo "filetype unknown"
line 13:       echohl None
line 14:     endif
line 15:     let s = &filetype
line 16:   elseif s == "OFF"
line 17:     let s = ""
line 18:   endif
line 19: 
line 20:   if s != ""
line 21:     " Load the syntax file(s).  When there are several, separated by dots,
line 22:     " load each in sequence.  Skip empty entries.
line 23:     for name in split(s, '\.')
line 24:       if !empty(name)
line 25:         exe "runtime! syntax/" . name . ".vim syntax/" . name . "/*.vim"
line 26:         exe "runtime! syntax/" . name . ".lua syntax/" . name . "/*.lua"
line 27:       endif
line 28:     endfor
line 29:   endif
<SNR>10_SynSet returning #0

continuing in Syntax Autocommands for "*"

chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/usr/share/nvim/runtime/lua/vim/treesitter/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
Executing: 
Executing: 
autocommand if !did_filetype() && expand('<amatch>') !~ g:ft_ignore_pat | runtime! scripts.vim | endif

Executing: if !did_filetype() && expand('<amatch>') !~ g:ft_ignore_pat | runtime! scripts.vim | endif
Executing:  runtime! scripts.vim | endif
Executing:  endif
Executing BufReadPost Autocommands for "*"
autocommand <Lua 104: /usr/share/nvim/runtime/plugin/editorconfig.lua:4>

Executing: 
Executing BufEnter Autocommands for "*"
autocommand :call AutoPairsTryInit()

Executing: :call AutoPairsTryInit()
calling AutoPairsTryInit()

line 1:   if exists('b:autopairs_loaded')
line 2:     return
line 3:   end
line 4: 
line 5:   " for auto-pairs starts with 'a', so the priority is higher than supertab and vim-endwise
line 6:   "
line 7:   " vim-endwise doesn't support <Plug>AutoPairsReturn
line 8:   " when use <Plug>AutoPairsReturn will cause <Plug> isn't expanded
line 9:   "
line 10:   " supertab doesn't support <SID>AutoPairsReturn
line 11:   " when use <SID>AutoPairsReturn  will cause Duplicated <CR>
line 12:   "
line 13:   " and when load after vim-endwise will cause unexpected endwise inserted.
line 14:   " so always load AutoPairs at last
line 15: 
line 16:   " Buffer level keys mapping
line 17:   " comptible with other plugin
line 18:   if g:AutoPairsMapCR
line 19:     if v:version == 703 && has('patch32') || v:version > 703
line 20:       " VIM 7.3 supports advancer maparg which could get <expr> info
line 21:       " then auto-pairs could remap <CR> in any case.
line 22:       let info = maparg('<CR>', 'i', 0, 1)
line 23:       if empty(info)
line 24:         let old_cr = '<CR>'
line 25:         let is_expr = 0
line 26:       else
line 27:         let old_cr = info['rhs']
line 28:         let old_cr = s:ExpandMap(old_cr)
line 29:         let old_cr = substitute(old_cr, '<SID>', '<SNR>' . info['sid'] . '_', 'g')
line 30:         let is_expr = info['expr']
line 31:         let wrapper_name = '<SID>AutoPairsOldCRWrapper73'
line 32:       endif
line 33:     else
line 34:       " VIM version less than 7.3
line 35:       " the mapping's <expr> info is lost, so guess it is expr or not, it's
line 36:       " not accurate.
line 37:       let old_cr = maparg('<CR>', 'i')
line 38:       if old_cr == ''
line 39:         let old_cr = '<CR>'
line 40:         let is_expr = 0
line 41:       else
line 42:         let old_cr = s:ExpandMap(old_cr)
line 43:         " old_cr contain (, I guess the old cr is in expr mode
line 44:         let is_expr = old_cr =~ '\V(' && toupper(old_cr) !~ '\V<C-R>'
line 45: 
line 46:         " The old_cr start with " it must be in expr mode
line 47:         let is_expr = is_expr || old_cr =~ '\v^"'
line 48:         let wrapper_name = '<SID>AutoPairsOldCRWrapper'
line 49:       end
line 50:     end
line 51: 
line 52:     if old_cr !~ 'AutoPairsReturn'
line 53:       if is_expr
line 54:         " remap <expr> to `name` to avoid mix expr and non-expr mode
line 55:         execute 'inoremap <buffer> <expr> <script> '. wrapper_name . ' ' . old_cr
line 56:         let old_cr = wrapper_name
line 57:       end
line 58:       " Always silent mapping
line 59:       execute 'inoremap <script> <buffer> <silent> <CR> '.old_cr.'<SID>AutoPairsReturn'
line 59: inoremap <script> <buffer> <silent> <CR> <CR><SID>AutoPairsReturn
line 60:     end
line 61:   endif
line 62:   call AutoPairsInit()
calling AutoPairsInit()

line 1:   let b:autopairs_loaded  = 1
line 2:   if !exists('b:autopairs_enabled')
line 3:     let b:autopairs_enabled = 1
line 4:   end
line 5: 
line 6:   if !exists('b:AutoPairs')
line 7:     let b:AutoPairs = AutoPairsDefaultPairs()
calling AutoPairsDefaultPairs()

line 1:   if exists('b:autopairs_defaultpairs')
line 2:     return b:autopairs_defaultpairs
line 3:   end
line 4:   let r = copy(g:AutoPairs)
line 5:   let allPairs = { 'vim': {'\v^\s*\zs"': ''}, 'rust': {'\w\zs<': '>', '&\zs''': ''}, 'php': {'<?': '?>//k]', '<?php': '?>//k]'} }
line 10:   for [filetype, pairs] in items(allPairs)
line 11:     if &filetype == filetype
line 12:       for [open, close] in items(pairs)
line 13:         let r[open] = close
line 14:       endfor
line 15:     end
line 16:   endfor
line 10:   for [filetype, pairs] in items(allPairs)
line 11:     if &filetype == filetype
line 12:       for [open, close] in items(pairs)
line 13:         let r[open] = close
line 14:       endfor
line 15:     end
line 16:   endfor
line 10:   for [filetype, pairs] in items(allPairs)
line 11:     if &filetype == filetype
line 12:       for [open, close] in items(pairs)
line 13:         let r[open] = close
line 14:       endfor
line 12:       for [open, close] in items(pairs)
line 13:         let r[open] = close
line 14:       endfor
line 12:       for [open, close] in items(pairs)
line 13:         let r[open] = close
line 14:       endfor
line 15:     end
line 16:   endfor
line 10:   for [filetype, pairs] in items(allPairs)
line 11:     if &filetype == filetype
line 12:       for [open, close] in items(pairs)
line 13:         let r[open] = close
line 14:       endfor
line 15:     end
line 16:   endfor
line 17:   let b:autopairs_defaultpairs = r
line 18:   return r
AutoPairsDefaultPairs returning {'```': '```', '`': '`', '"': '"', '['..., '{': '}', '&\zs''': '', '"""': '"""'}

continuing in AutoPairsInit

line 8:   end
line 9: 
line 10:   if !exists('b:AutoPairsMoveCharacter')
line 11:     let b:AutoPairsMoveCharacter = g:AutoPairsMoveCharacter
line 12:   end
line 13: 
line 14:   let b:autopairs_return_pos = 0
line 15:   let b:autopairs_saved_pair = [0, 0]
line 16:   let b:AutoPairsList = []
line 17: 
line 18:   " buffer level map pairs keys
line 19:   " n - do not map the first charactor of closed pair to close key
line 20:   " m - close key jumps through multi line
line 21:   " s - close key jumps only in the same line
line 22:   for [open, close] in items(b:AutoPairs)
line 23:     let o = open[-1:-1]
line 24:     let c = close[0]
line 25:     let opt = {'mapclose': 1, 'multiline':1}
line 26:     let opt['key'] = c
line 27:     if o == c
line 28:       let opt['multiline'] = 0
line 29:     end
line 30:     let m = matchlist(close, '\v(.*)//(.*)$')
line 31:     if len(m) > 0 
line 32:       if m[2] =~ 'n'
line 33:         let opt['mapclose'] = 0
line 34:       end
line 35:       if m[2] =~ 'm'
line 36:         let opt['multiline'] = 1
line 37:       end
line 38:       if m[2] =~ 's'
line 39:         let opt['multiline'] = 0
line 40:       end
line 41:       let ks = matchlist(m[2], '\vk(.)')
line 42:       if len(ks) > 0
line 43:         let opt['key'] = ks[1]
line 44:         let c = opt['key']
line 45:       end
line 46:       let close = m[1]
line 47:     end
line 48:     call AutoPairsMap(o)
calling AutoPairsMap('`')

line 1:   " | is special key which separate map command from text
line 2:   let key = a:key
line 3:   if key == '|'
line 4:     let key = '<BAR>'
line 5:   end
line 6:   let escaped_key = substitute(key, "'", "''", 'g')
line 7:   " use expr will cause search() doesn't work
line 8:   execute 'inoremap <buffer> <silent> '.key." <C-R>=AutoPairsInsert('".escaped_key."')<CR>"
line 8: inoremap <buffer> <silent> ` <C-R>=AutoPairsInsert('`')<CR>
AutoPairsMap returning #0

continuing in AutoPairsInit

line 49:     if o != c && c != '' && opt['mapclose']
line 50:       call AutoPairsMap(c)
line 51:     end
line 52:     let b:AutoPairsList += [[open, close, opt]]
line 53:   endfor
line 22:   for [open, close] in items(b:AutoPairs)
line 23:     let o = open[-1:-1]
line 24:     let c = close[0]
line 25:     let opt = {'mapclose': 1, 'multiline':1}
line 26:     let opt['key'] = c
line 27:     if o == c
line 28:       let opt['multiline'] = 0
line 29:     end
line 30:     let m = matchlist(close, '\v(.*)//(.*)$')
line 31:     if len(m) > 0 
line 32:       if m[2] =~ 'n'
line 33:         let opt['mapclose'] = 0
line 34:       end
line 35:       if m[2] =~ 'm'
line 36:         let opt['multiline'] = 1
line 37:       end
line 38:       if m[2] =~ 's'
line 39:         let opt['multiline'] = 0
line 40:       end
line 41:       let ks = matchlist(m[2], '\vk(.)')
line 42:       if len(ks) > 0
line 43:         let opt['key'] = ks[1]
line 44:         let c = opt['key']
line 45:       end
line 46:       let close = m[1]
line 47:     end
line 48:     call AutoPairsMap(o)
calling AutoPairsMap('`')

line 1:   " | is special key which separate map command from text
line 2:   let key = a:key
line 3:   if key == '|'
line 4:     let key = '<BAR>'
line 5:   end
line 6:   let escaped_key = substitute(key, "'", "''", 'g')
line 7:   " use expr will cause search() doesn't work
line 8:   execute 'inoremap <buffer> <silent> '.key." <C-R>=AutoPairsInsert('".escaped_key."')<CR>"
line 8: inoremap <buffer> <silent> ` <C-R>=AutoPairsInsert('`')<CR>
AutoPairsMap returning #0

continuing in AutoPairsInit

line 49:     if o != c && c != '' && opt['mapclose']
line 50:       call AutoPairsMap(c)
line 51:     end
line 52:     let b:AutoPairsList += [[open, close, opt]]
line 53:   endfor
line 22:   for [open, close] in items(b:AutoPairs)
line 23:     let o = open[-1:-1]
line 24:     let c = close[0]
line 25:     let opt = {'mapclose': 1, 'multiline':1}
line 26:     let opt['key'] = c
line 27:     if o == c
line 28:       let opt['multiline'] = 0
line 29:     end
line 30:     let m = matchlist(close, '\v(.*)//(.*)$')
line 31:     if len(m) > 0 
line 32:       if m[2] =~ 'n'
line 33:         let opt['mapclose'] = 0
line 34:       end
line 35:       if m[2] =~ 'm'
line 36:         let opt['multiline'] = 1
line 37:       end
line 38:       if m[2] =~ 's'
line 39:         let opt['multiline'] = 0
line 40:       end
line 41:       let ks = matchlist(m[2], '\vk(.)')
line 42:       if len(ks) > 0
line 43:         let opt['key'] = ks[1]
line 44:         let c = opt['key']
line 45:       end
line 46:       let close = m[1]
line 47:     end
line 48:     call AutoPairsMap(o)
calling AutoPairsMap('"')

line 1:   " | is special key which separate map command from text
line 2:   let key = a:key
line 3:   if key == '|'
line 4:     let key = '<BAR>'
line 5:   end
line 6:   let escaped_key = substitute(key, "'", "''", 'g')
line 7:   " use expr will cause search() doesn't work
line 8:   execute 'inoremap <buffer> <silent> '.key." <C-R>=AutoPairsInsert('".escaped_key."')<CR>"
line 8: inoremap <buffer> <silent> " <C-R>=AutoPairsInsert('"')<CR>
AutoPairsMap returning #0

continuing in AutoPairsInit

line 49:     if o != c && c != '' && opt['mapclose']
line 50:       call AutoPairsMap(c)
line 51:     end
line 52:     let b:AutoPairsList += [[open, close, opt]]
line 53:   endfor
line 22:   for [open, close] in items(b:AutoPairs)
line 23:     let o = open[-1:-1]
line 24:     let c = close[0]
line 25:     let opt = {'mapclose': 1, 'multiline':1}
line 26:     let opt['key'] = c
line 27:     if o == c
line 28:       let opt['multiline'] = 0
line 29:     end
line 30:     let m = matchlist(close, '\v(.*)//(.*)$')
line 31:     if len(m) > 0 
line 32:       if m[2] =~ 'n'
line 33:         let opt['mapclose'] = 0
line 34:       end
line 35:       if m[2] =~ 'm'
line 36:         let opt['multiline'] = 1
line 37:       end
line 38:       if m[2] =~ 's'
line 39:         let opt['multiline'] = 0
line 40:       end
line 41:       let ks = matchlist(m[2], '\vk(.)')
line 42:       if len(ks) > 0
line 43:         let opt['key'] = ks[1]
line 44:         let c = opt['key']
line 45:       end
line 46:       let close = m[1]
line 47:     end
line 48:     call AutoPairsMap(o)
calling AutoPairsMap('[')

line 1:   " | is special key which separate map command from text
line 2:   let key = a:key
line 3:   if key == '|'
line 4:     let key = '<BAR>'
line 5:   end
line 6:   let escaped_key = substitute(key, "'", "''", 'g')
line 7:   " use expr will cause search() doesn't work
line 8:   execute 'inoremap <buffer> <silent> '.key." <C-R>=AutoPairsInsert('".escaped_key."')<CR>"
line 8: inoremap <buffer> <silent> [ <C-R>=AutoPairsInsert('[')<CR>
AutoPairsMap returning #0

continuing in AutoPairsInit

line 49:     if o != c && c != '' && opt['mapclose']
line 50:       call AutoPairsMap(c)
calling AutoPairsMap(']')

line 1:   " | is special key which separate map command from text
line 2:   let key = a:key
line 3:   if key == '|'
line 4:     let key = '<BAR>'
line 5:   end
line 6:   let escaped_key = substitute(key, "'", "''", 'g')
line 7:   " use expr will cause search() doesn't work
line 8:   execute 'inoremap <buffer> <silent> '.key." <C-R>=AutoPairsInsert('".escaped_key."')<CR>"
line 8: inoremap <buffer> <silent> ] <C-R>=AutoPairsInsert(']')<CR>
AutoPairsMap returning #0

continuing in AutoPairsInit

line 51:     end
line 52:     let b:AutoPairsList += [[open, close, opt]]
line 53:   endfor
line 22:   for [open, close] in items(b:AutoPairs)
line 23:     let o = open[-1:-1]
line 24:     let c = close[0]
line 25:     let opt = {'mapclose': 1, 'multiline':1}
line 26:     let opt['key'] = c
line 27:     if o == c
line 28:       let opt['multiline'] = 0
line 29:     end
line 30:     let m = matchlist(close, '\v(.*)//(.*)$')
line 31:     if len(m) > 0 
line 32:       if m[2] =~ 'n'
line 33:         let opt['mapclose'] = 0
line 34:       end
line 35:       if m[2] =~ 'm'
line 36:         let opt['multiline'] = 1
line 37:       end
line 38:       if m[2] =~ 's'
line 39:         let opt['multiline'] = 0
line 40:       end
line 41:       let ks = matchlist(m[2], '\vk(.)')
line 42:       if len(ks) > 0
line 43:         let opt['key'] = ks[1]
line 44:         let c = opt['key']
line 45:       end
line 46:       let close = m[1]
line 47:     end
line 48:     call AutoPairsMap(o)
calling AutoPairsMap('<')

line 1:   " | is special key which separate map command from text
line 2:   let key = a:key
line 3:   if key == '|'
line 4:     let key = '<BAR>'
line 5:   end
line 6:   let escaped_key = substitute(key, "'", "''", 'g')
line 7:   " use expr will cause search() doesn't work
line 8:   execute 'inoremap <buffer> <silent> '.key." <C-R>=AutoPairsInsert('".escaped_key."')<CR>"
line 8: inoremap <buffer> <silent> < <C-R>=AutoPairsInsert('<')<CR>
AutoPairsMap returning #0

continuing in AutoPairsInit

line 49:     if o != c && c != '' && opt['mapclose']
line 50:       call AutoPairsMap(c)
calling AutoPairsMap('>')

line 1:   " | is special key which separate map command from text
line 2:   let key = a:key
line 3:   if key == '|'
line 4:     let key = '<BAR>'
line 5:   end
line 6:   let escaped_key = substitute(key, "'", "''", 'g')
line 7:   " use expr will cause search() doesn't work
line 8:   execute 'inoremap <buffer> <silent> '.key." <C-R>=AutoPairsInsert('".escaped_key."')<CR>"
line 8: inoremap <buffer> <silent> > <C-R>=AutoPairsInsert('>')<CR>
AutoPairsMap returning #0

continuing in AutoPairsInit

line 51:     end
line 52:     let b:AutoPairsList += [[open, close, opt]]
line 53:   endfor
line 22:   for [open, close] in items(b:AutoPairs)
line 23:     let o = open[-1:-1]
line 24:     let c = close[0]
line 25:     let opt = {'mapclose': 1, 'multiline':1}
line 26:     let opt['key'] = c
line 27:     if o == c
line 28:       let opt['multiline'] = 0
line 29:     end
line 30:     let m = matchlist(close, '\v(.*)//(.*)$')
line 31:     if len(m) > 0 
line 32:       if m[2] =~ 'n'
line 33:         let opt['mapclose'] = 0
line 34:       end
line 35:       if m[2] =~ 'm'
line 36:         let opt['multiline'] = 1
line 37:       end
line 38:       if m[2] =~ 's'
line 39:         let opt['multiline'] = 0
line 40:       end
line 41:       let ks = matchlist(m[2], '\vk(.)')
line 42:       if len(ks) > 0
line 43:         let opt['key'] = ks[1]
line 44:         let c = opt['key']
line 45:       end
line 46:       let close = m[1]
line 47:     end
line 48:     call AutoPairsMap(o)
calling AutoPairsMap('''')

line 1:   " | is special key which separate map command from text
line 2:   let key = a:key
line 3:   if key == '|'
line 4:     let key = '<BAR>'
line 5:   end
line 6:   let escaped_key = substitute(key, "'", "''", 'g')
line 7:   " use expr will cause search() doesn't work
line 8:   execute 'inoremap <buffer> <silent> '.key." <C-R>=AutoPairsInsert('".escaped_key."')<CR>"
line 8: inoremap <buffer> <silent> ' <C-R>=AutoPairsInsert('''')<CR>
AutoPairsMap returning #0

continuing in AutoPairsInit

line 49:     if o != c && c != '' && opt['mapclose']
line 50:       call AutoPairsMap(c)
line 51:     end
line 52:     let b:AutoPairsList += [[open, close, opt]]
line 53:   endfor
line 22:   for [open, close] in items(b:AutoPairs)
line 23:     let o = open[-1:-1]
line 24:     let c = close[0]
line 25:     let opt = {'mapclose': 1, 'multiline':1}
line 26:     let opt['key'] = c
line 27:     if o == c
line 28:       let opt['multiline'] = 0
line 29:     end
line 30:     let m = matchlist(close, '\v(.*)//(.*)$')
line 31:     if len(m) > 0 
line 32:       if m[2] =~ 'n'
line 33:         let opt['mapclose'] = 0
line 34:       end
line 35:       if m[2] =~ 'm'
line 36:         let opt['multiline'] = 1
line 37:       end
line 38:       if m[2] =~ 's'
line 39:         let opt['multiline'] = 0
line 40:       end
line 41:       let ks = matchlist(m[2], '\vk(.)')
line 42:       if len(ks) > 0
line 43:         let opt['key'] = ks[1]
line 44:         let c = opt['key']
line 45:       end
line 46:       let close = m[1]
line 47:     end
line 48:     call AutoPairsMap(o)
calling AutoPairsMap('(')

line 1:   " | is special key which separate map command from text
line 2:   let key = a:key
line 3:   if key == '|'
line 4:     let key = '<BAR>'
line 5:   end
line 6:   let escaped_key = substitute(key, "'", "''", 'g')
line 7:   " use expr will cause search() doesn't work
line 8:   execute 'inoremap <buffer> <silent> '.key." <C-R>=AutoPairsInsert('".escaped_key."')<CR>"
line 8: inoremap <buffer> <silent> ( <C-R>=AutoPairsInsert('(')<CR>
AutoPairsMap returning #0

continuing in AutoPairsInit

line 49:     if o != c && c != '' && opt['mapclose']
line 50:       call AutoPairsMap(c)
calling AutoPairsMap(')')

line 1:   " | is special key which separate map command from text
line 2:   let key = a:key
line 3:   if key == '|'
line 4:     let key = '<BAR>'
line 5:   end
line 6:   let escaped_key = substitute(key, "'", "''", 'g')
line 7:   " use expr will cause search() doesn't work
line 8:   execute 'inoremap <buffer> <silent> '.key." <C-R>=AutoPairsInsert('".escaped_key."')<CR>"
line 8: inoremap <buffer> <silent> ) <C-R>=AutoPairsInsert(')')<CR>
AutoPairsMap returning #0

continuing in AutoPairsInit

line 51:     end
line 52:     let b:AutoPairsList += [[open, close, opt]]
line 53:   endfor
line 22:   for [open, close] in items(b:AutoPairs)
line 23:     let o = open[-1:-1]
line 24:     let c = close[0]
line 25:     let opt = {'mapclose': 1, 'multiline':1}
line 26:     let opt['key'] = c
line 27:     if o == c
line 28:       let opt['multiline'] = 0
line 29:     end
line 30:     let m = matchlist(close, '\v(.*)//(.*)$')
line 31:     if len(m) > 0 
line 32:       if m[2] =~ 'n'
line 33:         let opt['mapclose'] = 0
line 34:       end
line 35:       if m[2] =~ 'm'
line 36:         let opt['multiline'] = 1
line 37:       end
line 38:       if m[2] =~ 's'
line 39:         let opt['multiline'] = 0
line 40:       end
line 41:       let ks = matchlist(m[2], '\vk(.)')
line 42:       if len(ks) > 0
line 43:         let opt['key'] = ks[1]
line 44:         let c = opt['key']
line 45:       end
line 46:       let close = m[1]
line 47:     end
line 48:     call AutoPairsMap(o)
calling AutoPairsMap('''')

line 1:   " | is special key which separate map command from text
line 2:   let key = a:key
line 3:   if key == '|'
line 4:     let key = '<BAR>'
line 5:   end
line 6:   let escaped_key = substitute(key, "'", "''", 'g')
line 7:   " use expr will cause search() doesn't work
line 8:   execute 'inoremap <buffer> <silent> '.key." <C-R>=AutoPairsInsert('".escaped_key."')<CR>"
line 8: inoremap <buffer> <silent> ' <C-R>=AutoPairsInsert('''')<CR>
AutoPairsMap returning #0

continuing in AutoPairsInit

line 49:     if o != c && c != '' && opt['mapclose']
line 50:       call AutoPairsMap(c)
line 51:     end
line 52:     let b:AutoPairsList += [[open, close, opt]]
line 53:   endfor
line 22:   for [open, close] in items(b:AutoPairs)
line 23:     let o = open[-1:-1]
line 24:     let c = close[0]
line 25:     let opt = {'mapclose': 1, 'multiline':1}
line 26:     let opt['key'] = c
line 27:     if o == c
line 28:       let opt['multiline'] = 0
line 29:     end
line 30:     let m = matchlist(close, '\v(.*)//(.*)$')
line 31:     if len(m) > 0 
line 32:       if m[2] =~ 'n'
line 33:         let opt['mapclose'] = 0
line 34:       end
line 35:       if m[2] =~ 'm'
line 36:         let opt['multiline'] = 1
line 37:       end
line 38:       if m[2] =~ 's'
line 39:         let opt['multiline'] = 0
line 40:       end
line 41:       let ks = matchlist(m[2], '\vk(.)')
line 42:       if len(ks) > 0
line 43:         let opt['key'] = ks[1]
line 44:         let c = opt['key']
line 45:       end
line 46:       let close = m[1]
line 47:     end
line 48:     call AutoPairsMap(o)
calling AutoPairsMap('{')

line 1:   " | is special key which separate map command from text
line 2:   let key = a:key
line 3:   if key == '|'
line 4:     let key = '<BAR>'
line 5:   end
line 6:   let escaped_key = substitute(key, "'", "''", 'g')
line 7:   " use expr will cause search() doesn't work
line 8:   execute 'inoremap <buffer> <silent> '.key." <C-R>=AutoPairsInsert('".escaped_key."')<CR>"
line 8: inoremap <buffer> <silent> { <C-R>=AutoPairsInsert('{')<CR>
AutoPairsMap returning #0

continuing in AutoPairsInit

line 49:     if o != c && c != '' && opt['mapclose']
line 50:       call AutoPairsMap(c)
calling AutoPairsMap('}')

line 1:   " | is special key which separate map command from text
line 2:   let key = a:key
line 3:   if key == '|'
line 4:     let key = '<BAR>'
line 5:   end
line 6:   let escaped_key = substitute(key, "'", "''", 'g')
line 7:   " use expr will cause search() doesn't work
line 8:   execute 'inoremap <buffer> <silent> '.key." <C-R>=AutoPairsInsert('".escaped_key."')<CR>"
line 8: inoremap <buffer> <silent> } <C-R>=AutoPairsInsert('}')<CR>
AutoPairsMap returning #0

continuing in AutoPairsInit

line 51:     end
line 52:     let b:AutoPairsList += [[open, close, opt]]
line 53:   endfor
line 22:   for [open, close] in items(b:AutoPairs)
line 23:     let o = open[-1:-1]
line 24:     let c = close[0]
line 25:     let opt = {'mapclose': 1, 'multiline':1}
line 26:     let opt['key'] = c
line 27:     if o == c
line 28:       let opt['multiline'] = 0
line 29:     end
line 30:     let m = matchlist(close, '\v(.*)//(.*)$')
line 31:     if len(m) > 0 
line 32:       if m[2] =~ 'n'
line 33:         let opt['mapclose'] = 0
line 34:       end
line 35:       if m[2] =~ 'm'
line 36:         let opt['multiline'] = 1
line 37:       end
line 38:       if m[2] =~ 's'
line 39:         let opt['multiline'] = 0
line 40:       end
line 41:       let ks = matchlist(m[2], '\vk(.)')
line 42:       if len(ks) > 0
line 43:         let opt['key'] = ks[1]
line 44:         let c = opt['key']
line 45:       end
line 46:       let close = m[1]
line 47:     end
line 48:     call AutoPairsMap(o)
calling AutoPairsMap('''')

line 1:   " | is special key which separate map command from text
line 2:   let key = a:key
line 3:   if key == '|'
line 4:     let key = '<BAR>'
line 5:   end
line 6:   let escaped_key = substitute(key, "'", "''", 'g')
line 7:   " use expr will cause search() doesn't work
line 8:   execute 'inoremap <buffer> <silent> '.key." <C-R>=AutoPairsInsert('".escaped_key."')<CR>"
line 8: inoremap <buffer> <silent> ' <C-R>=AutoPairsInsert('''')<CR>
AutoPairsMap returning #0

continuing in AutoPairsInit

line 49:     if o != c && c != '' && opt['mapclose']
line 50:       call AutoPairsMap(c)
line 51:     end
line 52:     let b:AutoPairsList += [[open, close, opt]]
line 53:   endfor
line 22:   for [open, close] in items(b:AutoPairs)
line 23:     let o = open[-1:-1]
line 24:     let c = close[0]
line 25:     let opt = {'mapclose': 1, 'multiline':1}
line 26:     let opt['key'] = c
line 27:     if o == c
line 28:       let opt['multiline'] = 0
line 29:     end
line 30:     let m = matchlist(close, '\v(.*)//(.*)$')
line 31:     if len(m) > 0 
line 32:       if m[2] =~ 'n'
line 33:         let opt['mapclose'] = 0
line 34:       end
line 35:       if m[2] =~ 'm'
line 36:         let opt['multiline'] = 1
line 37:       end
line 38:       if m[2] =~ 's'
line 39:         let opt['multiline'] = 0
line 40:       end
line 41:       let ks = matchlist(m[2], '\vk(.)')
line 42:       if len(ks) > 0
line 43:         let opt['key'] = ks[1]
line 44:         let c = opt['key']
line 45:       end
line 46:       let close = m[1]
line 47:     end
line 48:     call AutoPairsMap(o)
calling AutoPairsMap('"')

line 1:   " | is special key which separate map command from text
line 2:   let key = a:key
line 3:   if key == '|'
line 4:     let key = '<BAR>'
line 5:   end
line 6:   let escaped_key = substitute(key, "'", "''", 'g')
line 7:   " use expr will cause search() doesn't work
line 8:   execute 'inoremap <buffer> <silent> '.key." <C-R>=AutoPairsInsert('".escaped_key."')<CR>"
line 8: inoremap <buffer> <silent> " <C-R>=AutoPairsInsert('"')<CR>
AutoPairsMap returning #0

continuing in AutoPairsInit

line 49:     if o != c && c != '' && opt['mapclose']
line 50:       call AutoPairsMap(c)
line 51:     end
line 52:     let b:AutoPairsList += [[open, close, opt]]
line 53:   endfor
line 22:   for [open, close] in items(b:AutoPairs)
line 23:     let o = open[-1:-1]
line 24:     let c = close[0]
line 25:     let opt = {'mapclose': 1, 'multiline':1}
line 26:     let opt['key'] = c
line 27:     if o == c
line 28:       let opt['multiline'] = 0
line 29:     end
line 30:     let m = matchlist(close, '\v(.*)//(.*)$')
line 31:     if len(m) > 0 
line 32:       if m[2] =~ 'n'
line 33:         let opt['mapclose'] = 0
line 34:       end
line 35:       if m[2] =~ 'm'
line 36:         let opt['multiline'] = 1
line 37:       end
line 38:       if m[2] =~ 's'
line 39:         let opt['multiline'] = 0
line 40:       end
line 41:       let ks = matchlist(m[2], '\vk(.)')
line 42:       if len(ks) > 0
line 43:         let opt['key'] = ks[1]
line 44:         let c = opt['key']
line 45:       end
line 46:       let close = m[1]
line 47:     end
line 48:     call AutoPairsMap(o)
line 49:     if o != c && c != '' && opt['mapclose']
line 50:       call AutoPairsMap(c)
line 51:     end
line 52:     let b:AutoPairsList += [[open, close, opt]]
line 53:   endfor
line 54: 
line 55:   " sort pairs by length, longer pair should have higher priority
line 56:   let b:AutoPairsList = sort(b:AutoPairsList, "s:sortByLength")
calling <SNR>29_sortByLength(['```', '```', {'key': '`', 'mapclose': 1, 'multiline': 0}], ['`', '`', {'key': '`', 'mapclose': 1, 'multiline': 0}])

line 1:   return len(a:i2[0])-len(a:i1[0])
<SNR>29_sortByLength returning #-2

continuing in AutoPairsInit

calling <SNR>29_sortByLength(['[', ']', {'key': ']', 'mapclose': 1, 'multiline': 1}], ['\w\zs<', '>', {'key': '>', 'mapclose': 1, 'multiline': 1}])

line 1:   return len(a:i2[0])-len(a:i1[0])
<SNR>29_sortByLength returning #5

continuing in AutoPairsInit

calling <SNR>29_sortByLength(['"', '"', {'key': '"', 'mapclose': 1, 'multiline': 0}], ['\w\zs<', '>', {'key': '>', 'mapclose': 1, 'multiline': 1}])

line 1:   return len(a:i2[0])-len(a:i1[0])
<SNR>29_sortByLength returning #5

continuing in AutoPairsInit

calling <SNR>29_sortByLength(['"', '"', {'key': '"', 'mapclose': 1, 'multiline': 0}], ['[', ']', {'key': ']', 'mapclose': 1, 'multiline': 1}])

line 1:   return len(a:i2[0])-len(a:i1[0])
<SNR>29_sortByLength returning #0

continuing in AutoPairsInit

calling <SNR>29_sortByLength(['```', '```', {'key': '`', 'mapclose': 1, 'multiline': 0}], ['\w\zs<', '>', {'key': '>', 'mapclose': 1, 'multiline': 1}])

line 1:   return len(a:i2[0])-len(a:i1[0])
<SNR>29_sortByLength returning #3

continuing in AutoPairsInit

calling <SNR>29_sortByLength(['```', '```', {'key': '`', 'mapclose': 1, 'multiline': 0}], ['"', '"', {'key': '"', 'mapclose': 1, 'multiline': 0}])

line 1:   return len(a:i2[0])-len(a:i1[0])
<SNR>29_sortByLength returning #-2

continuing in AutoPairsInit

calling <SNR>29_sortByLength(['`', '`', {'key': '`', 'mapclose': 1, 'multiline': 0}], ['"', '"', {'key': '"', 'mapclose': 1, 'multiline': 0}])

line 1:   return len(a:i2[0])-len(a:i1[0])
<SNR>29_sortByLength returning #0

continuing in AutoPairsInit

calling <SNR>29_sortByLength(['(', ')', {'key': ')', 'mapclose': 1, 'multiline': 1}], ['''''''', '''''''', {'key': '''', 'mapclose': 1, 'multiline': 0}])

line 1:   return len(a:i2[0])-len(a:i1[0])
<SNR>29_sortByLength returning #2

continuing in AutoPairsInit

calling <SNR>29_sortByLength(['''', '''', {'key': '''', 'mapclose': 1, 'multiline': 0}], ['''''''', '''''''', {'key': '''', 'mapclose': 1, 'multiline': 0}])

line 1:   return len(a:i2[0])-len(a:i1[0])
<SNR>29_sortByLength returning #2

continuing in AutoPairsInit

calling <SNR>29_sortByLength(['''', '''', {'key': '''', 'mapclose': 1, 'multiline': 0}], ['(', ')', {'key': ')', 'mapclose': 1, 'multiline': 1}])

line 1:   return len(a:i2[0])-len(a:i1[0])
<SNR>29_sortByLength returning #0

continuing in AutoPairsInit

calling <SNR>29_sortByLength(['&\zs''', '', {'key': '', 'mapclose': 1, 'multiline': 1}], ['"""', '"""', {'key': '"', 'mapclose': 1, 'multiline': 0}])

line 1:   return len(a:i2[0])-len(a:i1[0])
<SNR>29_sortByLength returning #-2

continuing in AutoPairsInit

calling <SNR>29_sortByLength(['{', '}', {'key': '}', 'mapclose': 1, 'multiline': 1}], ['&\zs''', '', {'key': '', 'mapclose': 1, 'multiline': 1}])

line 1:   return len(a:i2[0])-len(a:i1[0])
<SNR>29_sortByLength returning #4

continuing in AutoPairsInit

calling <SNR>29_sortByLength(['{', '}', {'key': '}', 'mapclose': 1, 'multiline': 1}], ['"""', '"""', {'key': '"', 'mapclose': 1, 'multiline': 0}])

line 1:   return len(a:i2[0])-len(a:i1[0])
<SNR>29_sortByLength returning #2

continuing in AutoPairsInit

calling <SNR>29_sortByLength(['''''''', '''''''', {'key': '''', 'mapclose': 1, 'multiline': 0}], ['&\zs''', '', {'key': '', 'mapclose': 1, 'multiline': 1}])

line 1:   return len(a:i2[0])-len(a:i1[0])
<SNR>29_sortByLength returning #2

continuing in AutoPairsInit

calling <SNR>29_sortByLength(['''''''', '''''''', {'key': '''', 'mapclose': 1, 'multiline': 0}], ['"""', '"""', {'key': '"', 'mapclose': 1, 'multiline': 0}])

line 1:   return len(a:i2[0])-len(a:i1[0])
<SNR>29_sortByLength returning #0

continuing in AutoPairsInit

calling <SNR>29_sortByLength(['''', '''', {'key': '''', 'mapclose': 1, 'multiline': 0}], ['"""', '"""', {'key': '"', 'mapclose': 1, 'multiline': 0}])

line 1:   return len(a:i2[0])-len(a:i1[0])
<SNR>29_sortByLength returning #2

continuing in AutoPairsInit

calling <SNR>29_sortByLength(['''', '''', {'key': '''', 'mapclose': 1, 'multiline': 0}], ['{', '}', {'key': '}', 'mapclose': 1, 'multiline': 1}])

line 1:   return len(a:i2[0])-len(a:i1[0])
<SNR>29_sortByLength returning #0

continuing in AutoPairsInit

calling <SNR>29_sortByLength(['(', ')', {'key': ')', 'mapclose': 1, 'multiline': 1}], ['{', '}', {'key': '}', 'mapclose': 1, 'multiline': 1}])

line 1:   return len(a:i2[0])-len(a:i1[0])
<SNR>29_sortByLength returning #0

continuing in AutoPairsInit

calling <SNR>29_sortByLength(['\w\zs<', '>', {'key': '>', 'mapclose': 1, 'multiline': 1}], ['&\zs''', '', {'key': '', 'mapclose': 1, 'multiline': 1}])

line 1:   return len(a:i2[0])-len(a:i1[0])
<SNR>29_sortByLength returning #-1

continuing in AutoPairsInit

calling <SNR>29_sortByLength(['```', '```', {'key': '`', 'mapclose': 1, 'multiline': 0}], ['&\zs''', '', {'key': '', 'mapclose': 1, 'multiline': 1}])

line 1:   return len(a:i2[0])-len(a:i1[0])
<SNR>29_sortByLength returning #2

continuing in AutoPairsInit

calling <SNR>29_sortByLength(['```', '```', {'key': '`', 'mapclose': 1, 'multiline': 0}], ['''''''', '''''''', {'key': '''', 'mapclose': 1, 'multiline': 0}])

line 1:   return len(a:i2[0])-len(a:i1[0])
<SNR>29_sortByLength returning #0

continuing in AutoPairsInit

calling <SNR>29_sortByLength(['`', '`', {'key': '`', 'mapclose': 1, 'multiline': 0}], ['''''''', '''''''', {'key': '''', 'mapclose': 1, 'multiline': 0}])

line 1:   return len(a:i2[0])-len(a:i1[0])
<SNR>29_sortByLength returning #2

continuing in AutoPairsInit

calling <SNR>29_sortByLength(['`', '`', {'key': '`', 'mapclose': 1, 'multiline': 0}], ['"""', '"""', {'key': '"', 'mapclose': 1, 'multiline': 0}])

line 1:   return len(a:i2[0])-len(a:i1[0])
<SNR>29_sortByLength returning #2

continuing in AutoPairsInit

calling <SNR>29_sortByLength(['`', '`', {'key': '`', 'mapclose': 1, 'multiline': 0}], ['''', '''', {'key': '''', 'mapclose': 1, 'multiline': 0}])

line 1:   return len(a:i2[0])-len(a:i1[0])
<SNR>29_sortByLength returning #0

continuing in AutoPairsInit

calling <SNR>29_sortByLength(['"', '"', {'key': '"', 'mapclose': 1, 'multiline': 0}], ['''', '''', {'key': '''', 'mapclose': 1, 'multiline': 0}])

line 1:   return len(a:i2[0])-len(a:i1[0])
<SNR>29_sortByLength returning #0

continuing in AutoPairsInit

calling <SNR>29_sortByLength(['[', ']', {'key': ']', 'mapclose': 1, 'multiline': 1}], ['''', '''', {'key': '''', 'mapclose': 1, 'multiline': 0}])

line 1:   return len(a:i2[0])-len(a:i1[0])
<SNR>29_sortByLength returning #0

continuing in AutoPairsInit

line 57: 
line 58:   for item in b:AutoPairsList
line 59:     let [open, close, opt] = item
line 60:     if open == "'" && open == close
line 61:       let item[0] = '\v(^|\W)\zs'''
line 62:     end
line 63:   endfor
line 58:   for item in b:AutoPairsList
line 59:     let [open, close, opt] = item
line 60:     if open == "'" && open == close
line 61:       let item[0] = '\v(^|\W)\zs'''
line 62:     end
line 63:   endfor
line 58:   for item in b:AutoPairsList
line 59:     let [open, close, opt] = item
line 60:     if open == "'" && open == close
line 61:       let item[0] = '\v(^|\W)\zs'''
line 62:     end
line 63:   endfor
line 58:   for item in b:AutoPairsList
line 59:     let [open, close, opt] = item
line 60:     if open == "'" && open == close
line 61:       let item[0] = '\v(^|\W)\zs'''
line 62:     end
line 63:   endfor
line 58:   for item in b:AutoPairsList
line 59:     let [open, close, opt] = item
line 60:     if open == "'" && open == close
line 61:       let item[0] = '\v(^|\W)\zs'''
line 62:     end
line 63:   endfor
line 58:   for item in b:AutoPairsList
line 59:     let [open, close, opt] = item
line 60:     if open == "'" && open == close
line 61:       let item[0] = '\v(^|\W)\zs'''
line 62:     end
line 63:   endfor
line 58:   for item in b:AutoPairsList
line 59:     let [open, close, opt] = item
line 60:     if open == "'" && open == close
line 61:       let item[0] = '\v(^|\W)\zs'''
line 62:     end
line 63:   endfor
line 58:   for item in b:AutoPairsList
line 59:     let [open, close, opt] = item
line 60:     if open == "'" && open == close
line 61:       let item[0] = '\v(^|\W)\zs'''
line 62:     end
line 63:   endfor
line 58:   for item in b:AutoPairsList
line 59:     let [open, close, opt] = item
line 60:     if open == "'" && open == close
line 61:       let item[0] = '\v(^|\W)\zs'''
line 62:     end
line 63:   endfor
line 58:   for item in b:AutoPairsList
line 59:     let [open, close, opt] = item
line 60:     if open == "'" && open == close
line 61:       let item[0] = '\v(^|\W)\zs'''
line 62:     end
line 63:   endfor
line 58:   for item in b:AutoPairsList
line 59:     let [open, close, opt] = item
line 60:     if open == "'" && open == close
line 61:       let item[0] = '\v(^|\W)\zs'''
line 62:     end
line 63:   endfor
line 58:   for item in b:AutoPairsList
line 59:     let [open, close, opt] = item
line 60:     if open == "'" && open == close
line 61:       let item[0] = '\v(^|\W)\zs'''
line 62:     end
line 63:   endfor
line 64: 
line 65: 
line 66:   for key in split(b:AutoPairsMoveCharacter, '\s*')
line 67:     let escaped_key = substitute(key, "'", "''", 'g')
line 68:     execute 'inoremap <silent> <buffer> <M-'.key."> <C-R>=AutoPairsMoveCharacter('".escaped_key."')<CR>"
line 68: inoremap <silent> <buffer> <M-(> <C-R>=AutoPairsMoveCharacter('(')<CR>
line 69:   endfor
line 66:   for key in split(b:AutoPairsMoveCharacter, '\s*')
line 67:     let escaped_key = substitute(key, "'", "''", 'g')
line 68:     execute 'inoremap <silent> <buffer> <M-'.key."> <C-R>=AutoPairsMoveCharacter('".escaped_key."')<CR>"
line 68: inoremap <silent> <buffer> <M-)> <C-R>=AutoPairsMoveCharacter(')')<CR>
line 69:   endfor
line 66:   for key in split(b:AutoPairsMoveCharacter, '\s*')
line 67:     let escaped_key = substitute(key, "'", "''", 'g')
line 68:     execute 'inoremap <silent> <buffer> <M-'.key."> <C-R>=AutoPairsMoveCharacter('".escaped_key."')<CR>"
line 68: inoremap <silent> <buffer> <M-[> <C-R>=AutoPairsMoveCharacter('[')<CR>
line 69:   endfor
line 66:   for key in split(b:AutoPairsMoveCharacter, '\s*')
line 67:     let escaped_key = substitute(key, "'", "''", 'g')
line 68:     execute 'inoremap <silent> <buffer> <M-'.key."> <C-R>=AutoPairsMoveCharacter('".escaped_key."')<CR>"
line 68: inoremap <silent> <buffer> <M-]> <C-R>=AutoPairsMoveCharacter(']')<CR>
line 69:   endfor
line 66:   for key in split(b:AutoPairsMoveCharacter, '\s*')
line 67:     let escaped_key = substitute(key, "'", "''", 'g')
line 68:     execute 'inoremap <silent> <buffer> <M-'.key."> <C-R>=AutoPairsMoveCharacter('".escaped_key."')<CR>"
line 68: inoremap <silent> <buffer> <M-{> <C-R>=AutoPairsMoveCharacter('{')<CR>
line 69:   endfor
line 66:   for key in split(b:AutoPairsMoveCharacter, '\s*')
line 67:     let escaped_key = substitute(key, "'", "''", 'g')
line 68:     execute 'inoremap <silent> <buffer> <M-'.key."> <C-R>=AutoPairsMoveCharacter('".escaped_key."')<CR>"
line 68: inoremap <silent> <buffer> <M-}> <C-R>=AutoPairsMoveCharacter('}')<CR>
line 69:   endfor
line 66:   for key in split(b:AutoPairsMoveCharacter, '\s*')
line 67:     let escaped_key = substitute(key, "'", "''", 'g')
line 68:     execute 'inoremap <silent> <buffer> <M-'.key."> <C-R>=AutoPairsMoveCharacter('".escaped_key."')<CR>"
line 68: inoremap <silent> <buffer> <M-"> <C-R>=AutoPairsMoveCharacter('"')<CR>
line 69:   endfor
line 66:   for key in split(b:AutoPairsMoveCharacter, '\s*')
line 67:     let escaped_key = substitute(key, "'", "''", 'g')
line 68:     execute 'inoremap <silent> <buffer> <M-'.key."> <C-R>=AutoPairsMoveCharacter('".escaped_key."')<CR>"
line 68: inoremap <silent> <buffer> <M-'> <C-R>=AutoPairsMoveCharacter('''')<CR>
line 69:   endfor
line 66:   for key in split(b:AutoPairsMoveCharacter, '\s*')
line 67:     let escaped_key = substitute(key, "'", "''", 'g')
line 68:     execute 'inoremap <silent> <buffer> <M-'.key."> <C-R>=AutoPairsMoveCharacter('".escaped_key."')<CR>"
line 69:   endfor
line 70: 
line 71:   " Still use <buffer> level mapping for <BS> <SPACE>
line 72:   if g:AutoPairsMapBS
line 73:     " Use <C-R> instead of <expr> for issue #14 sometimes press BS output strange words
line 74:     execute 'inoremap <buffer> <silent> <BS> <C-R>=AutoPairsDelete()<CR>'
line 74: inoremap <buffer> <silent> <BS> <C-R>=AutoPairsDelete()<CR>
line 75:   end
line 76: 
line 77:   if g:AutoPairsMapCh
line 78:     execute 'inoremap <buffer> <silent> <C-h> <C-R>=AutoPairsDelete()<CR>'
line 78: inoremap <buffer> <silent> <C-h> <C-R>=AutoPairsDelete()<CR>
line 79:   endif
line 80: 
line 81:   if g:AutoPairsMapSpace
line 82:     " Try to respect abbreviations on a <SPACE>
line 83:     let do_abbrev = ""
line 84:     if v:version == 703 && has("patch489") || v:version > 703
line 85:       let do_abbrev = "<C-]>"
line 86:     endif
line 87:     execute 'inoremap <buffer> <silent> <SPACE> '.do_abbrev.'<C-R>=AutoPairsSpace()<CR>'
line 87: inoremap <buffer> <silent> <SPACE> <C-]><C-R>=AutoPairsSpace()<CR>
line 88:   end
line 89: 
line 90:   if g:AutoPairsShortcutFastWrap != ''
line 91:     execute 'inoremap <buffer> <silent> '.g:AutoPairsShortcutFastWrap.' <C-R>=AutoPairsFastWrap()<CR>'
line 91: inoremap <buffer> <silent> <M-e> <C-R>=AutoPairsFastWrap()<CR>
line 92:   end
line 93: 
line 94:   if g:AutoPairsShortcutBackInsert != ''
line 95:     execute 'inoremap <buffer> <silent> '.g:AutoPairsShortcutBackInsert.' <C-R>=AutoPairsBackInsert()<CR>'
line 95: inoremap <buffer> <silent> <M-b> <C-R>=AutoPairsBackInsert()<CR>
line 96:   end
line 97: 
line 98:   if g:AutoPairsShortcutToggle != ''
line 99:     " use <expr> to ensure showing the status when toggle
line 100:     execute 'inoremap <buffer> <silent> <expr> '.g:AutoPairsShortcutToggle.' AutoPairsToggle()'
line 100: inoremap <buffer> <silent> <expr> <M-p> AutoPairsToggle()
line 101:     execute 'noremap <buffer> <silent> '.g:AutoPairsShortcutToggle.' :call AutoPairsToggle()<CR>'
line 101: noremap <buffer> <silent> <M-p> :call AutoPairsToggle()<CR>
line 102:   end
line 103: 
line 104:   if g:AutoPairsShortcutJump != ''
line 105:     execute 'inoremap <buffer> <silent> ' . g:AutoPairsShortcutJump. ' <ESC>:call AutoPairsJump()<CR>a'
line 105: inoremap <buffer> <silent> <M-n> <ESC>:call AutoPairsJump()<CR>a
line 106:     execute 'noremap <buffer> <silent> ' . g:AutoPairsShortcutJump. ' :call AutoPairsJump()<CR>'
line 106: noremap <buffer> <silent> <M-n> :call AutoPairsJump()<CR>
line 107:   end
line 108: 
line 109:   if &keymap != ''
line 110:     let l:imsearch = &imsearch
line 111:     let l:iminsert = &iminsert
line 112:     let l:imdisable = &imdisable
line 113:     execute 'setlocal keymap=' . &keymap
line 114:     execute 'setlocal imsearch=' . l:imsearch
line 115:     execute 'setlocal iminsert=' . l:iminsert
line 116:     if l:imdisable
line 117:       execute 'setlocal imdisable'
line 118:     else
line 119:       execute 'setlocal noimdisable'
line 120:     end
line 121:   end
line 122: 
AutoPairsInit returning #0

continuing in AutoPairsTryInit

AutoPairsTryInit returning #0

continuing in BufEnter Autocommands for "*"

Executing BufWinEnter Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>15_Highlight_Matching_Pair()

line 1:   " Remove any previous match.
line 2:   call s:Remove_Matches()
calling <SNR>15_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     silent! call matchdelete(3)
line 3:     let w:paren_hl_on = 0
line 4:   endif
<SNR>15_Remove_Matches returning #0

continuing in <SNR>15_Highlight_Matching_Pair

line 3: 
line 4:   " Avoid that we remove the popup menu.
line 5:   " Return when there are no colors (looks like the cursor jumps).
line 6:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 7:     return
line 8:   endif
line 9: 
line 10:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 11:   let c_lnum = line('.')
line 12:   let c_col = col('.')
line 13:   let before = 0
line 14: 
line 15:   let text = getline(c_lnum)
line 16:   let matches = matchlist(text, '\(.\)\=\%'.c_col.'c\(.\=\)')
line 17:   if empty(matches)
line 18:     let [c_before, c] = ['', '']
line 19:   else
line 20:     let [c_before, c] = matches[1:2]
line 21:   endif
line 22:   let plist = split(&matchpairs, '.\zs[:,]')
line 23:   let i = index(plist, c)
line 24:   if i < 0
line 25:     " not found, in Insert mode try character before the cursor
line 26:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 27:       let before = strlen(c_before)
line 28:       let c = c_before
line 29:       let i = index(plist, c)
line 30:     endif
line 31:     if i < 0
line 32:       " not found, nothing to do
line 33:       return
<SNR>15_Highlight_Matching_Pair returning #0

continuing in BufWinEnter Autocommands for "*"

Executing: unlet! b:keymap_name

Executing InsertLeave Autocommands for "*"
autocommand <Lua 96: ~/.local/share/nvim/site/pack/packer/start/nvim-cmp/lua/cmp/utils/autocmd.lua:22>

chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-cmp/lua/cmp/utils/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-cmp/lua/cmp/utils/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-cmp/lua/cmp/utils/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-cmp/lua/cmp/utils/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-cmp/lua/cmp/utils/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-cmp/lua/cmp/utils/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-cmp/lua/cmp/utils/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-cmp/lua/cmp/utils/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-cmp/lua/cmp/utils/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-cmp/lua/cmp/utils/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-cmp/lua/cmp/utils/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-cmp/lua/cmp/utils/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-cmp/lua/cmp/utils/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-cmp/lua/cmp/utils/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
Executing: 
Executing InsertLeave Autocommands for "*"
autocommand call s:on_insert_leave()

Executing: call s:on_insert_leave()
calling <SNR>38_on_insert_leave()

line 1:   let l:session = vsnip#get_session()
calling vsnip#get_session()

line 1:   return s:session
vsnip#get_session returning v:null

continuing in <SNR>38_on_insert_leave

line 2:   if !empty(l:session)
line 3:     call l:session.on_insert_leave()
line 4:   endif
<SNR>38_on_insert_leave returning #0

continuing in InsertLeave Autocommands for "*"

Searching for "queries/rust/highlights.scm" in runtime path
Searching for "/home/raothorn/.config/nvim/queries/rust/highlights.scm"
Searching for "/etc/xdg/nvim/queries/rust/highlights.scm"
Searching for "/home/raothorn/.local/share/nvim/site/queries/rust/highlights.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/Comment.nvim/queries/rust/highlights.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/auto-pairs/queries/rust/highlights.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/autoclose.nvim/queries/rust/highlights.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-buffer/queries/rust/highlights.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lsp/queries/rust/highlights.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lsp-signature-help/queries/rust/highlights.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lua/queries/rust/highlights.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-path/queries/rust/highlights.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-vsnip/queries/rust/highlights.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/everforest/queries/rust/highlights.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/formatter.nvim/queries/rust/highlights.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/friendly-snippets/queries/rust/highlights.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/mason-lspconfig.nvim/queries/rust/highlights.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/mason.nvim/queries/rust/highlights.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-cmp/queries/rust/highlights.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-lspconfig/queries/rust/highlights.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-treesitter/queries/rust/highlights.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/packer.nvim/queries/rust/highlights.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/plenary.nvim/queries/rust/highlights.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/ranger.nvim/queries/rust/highlights.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/rust-tools.nvim/queries/rust/highlights.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/telescope.nvim/queries/rust/highlights.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/toggleterm.nvim/queries/rust/highlights.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/vim-floaterm/queries/rust/highlights.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/vim-surround/queries/rust/highlights.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/vim-vsnip/queries/rust/highlights.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/workspaces.nvim/queries/rust/highlights.scm"
Searching for "/usr/share/nvim/runtime/queries/rust/highlights.scm"
Searching for "/usr/share/nvim/runtime/pack/dist/opt/matchit/queries/rust/highlights.scm"
Searching for "/usr/lib/nvim/queries/rust/highlights.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-buffer/after/queries/rust/highlights.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lsp/after/queries/rust/highlights.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lsp-signature-help/after/queries/rust/highlights.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-nvim-lua/after/queries/rust/highlights.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-path/after/queries/rust/highlights.scm"
Searching for "/home/raothorn/.local/share/nvim/site/pack/packer/start/cmp-vsnip/after/queries/rust/highlights.scm"
Searching for "/usr/share/vim/vimfiles/queries/rust/highlights.scm"
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/usr/share/nvim/runtime/lua/vim/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/usr/share/nvim/runtime/lua/vim/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.config/nvim/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.config/nvim/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.config/nvim/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.config/nvim/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.config/nvim/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.config/nvim/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.config/nvim/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.config/nvim/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-lspconfig/lua/lspconfig/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-lspconfig/lua/lspconfig/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-lspconfig/lua/lspconfig/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-lspconfig/lua/lspconfig/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-lspconfig/lua/lspconfig/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-lspconfig/lua/lspconfig/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-lspconfig/lua/lspconfig/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-lspconfig/lua/lspconfig/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-lspconfig/lua/lspconfig/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-lspconfig/lua/lspconfig/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-lspconfig/lua/lspconfig/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-lspconfig/lua/lspconfig/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-lspconfig/lua/lspconfig/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-lspconfig/lua/lspconfig/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-lspconfig/lua/lspconfig/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-lspconfig/lua/lspconfig/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-lspconfig/lua/lspconfig/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-lspconfig/lua/lspconfig/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-lspconfig/lua/lspconfig/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-lspconfig/lua/lspconfig/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-lspconfig/lua/lspconfig/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/.local/share/nvim/site/pack/packer/start/nvim-lspconfig/lua/lspconfig/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/usr/share/nvim/runtime/lua/vim/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/usr/share/nvim/runtime/lua/vim/lsp/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/usr/share/nvim/runtime/lua/vim/lsp/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
chdir(/usr/share/nvim/runtime/lua/vim/lsp/)
chdir(/home/raothorn/source/boardgame/sleeping_gods)
Executing CursorHold Autocommands for "*"
autocommand lua vim.diagnostic.open_float(nil, { focusable = false })

Executing: lua vim.diagnostic.open_float(nil, { focusable = false })
autocommand lua vim.diagnostic.open_float(nil, { focusable = false })

Executing: lua vim.diagnostic.open_float(nil, { focusable = false })

Executing VimLeavePre Autocommands for "*"
autocommand <Lua 51: ~/.local/share/nvim/site/pack/packer/start/mason.nvim/lua/mason/init.lua:9>

Executing: 
autocommand <Lua 53: /usr/share/nvim/runtime/lua/vim/lsp.lua:1875>

Executing: 
autocommand <Lua 81: ~/.local/share/nvim/site/pack/packer/start/nvim-cmp/lua/cmp/utils/async.lua:17>

Executing: 
Writing ShaDa file "/home/raothorn/.local/state/nvim/shada/main.shada"